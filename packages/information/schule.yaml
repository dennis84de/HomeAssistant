input_select:
  schule_puffer:
    name: Puffer
    options:
      - "10"
      - "15"
      - "20"
      - "25"
      - "30"
    icon: mdi:timelapse      
    
input_number:
  schule_fahrzeit_bus:
    name: FahrzeitBus
    min: 80
    max: 100
    step: 10
    
input_datetime:   
  schule_beginn:
    name: Schule Beginn
    has_date: false
    has_time: true
    icon: mdi:timer
    
  schule_ende:
    name: Schule Ende
    has_date: false
    has_time: true
    icon: mdi:timer
    
input_boolean:
  schule_auto:
    name: Schule Auto
    icon: mdi:car-outline
    
template:
  - binary_sensor:
      - name: "Schultag"
        unique_id: schultag
        state: >
          {% set arbeitstag = is_state('binary_sensor.arbeitstag', 'on') %}
          {% set keineFerien = is_state('calendar.ferien', 'off') %}
          {% set schule = is_state('calendar.franzi_keine_schule', 'off') %}         

          {{ arbeitstag and keineFerien and schule }}          
           
      - name: "Info Schule anzeigen"
        unique_id: info_schule_anzeigen
        state: >
          {% set istSchultag = is_state('binary_sensor.schultag', 'on') %}
          {% set vorSchulbeginn = now() < now().replace(hour=state_attr('input_datetime.schule_beginn', 'hour'), minute=state_attr('input_datetime.schule_beginn', 'minute')) %}         

          {{ istSchultag and vorSchulbeginn }}          
          
  - sensor:
      - name: "Abfahrtzeit Schule wegbringen"
        unique_id: abfahrtzeit_schule_wegbringen
        state: >
          {% set fahrzeitAuto = states('sensor.fahrzeit_schule') | int(0) %}
          {% set fahrzeitBus = states('input_number.schule_fahrzeit_bus') | int(0) %}
          
          {% set fahrzeitMinuten = fahrzeitAuto if is_state('input_boolean.schule_auto', 'on') else fahrzeitBus %}
          {% set beginnMinuten = (state_attr('input_datetime.schule_beginn', 'timestamp') / 60) | int(0) %}
          {% set pufferMinuten = states('input_select.schule_puffer') | int(0) %}

          {% set abfahrzeitMinuten = beginnMinuten - fahrzeitMinuten - pufferMinuten %}
          {% set stundeAbfahrt = (abfahrzeitMinuten / 60) | int(0) %}
          {% set minuteAbfahrt = (abfahrzeitMinuten - stundeAbfahrt * 60) | int(0) %}
          {% set uhrzeitAbfahrt = "%0.02d:%0.02d" | format(stundeAbfahrt, minuteAbfahrt ) %}

          {{ uhrzeitAbfahrt }}
          
        icon: >
          {% if is_state('input_boolean.schule_auto', 'on') %}
            mdi:car-outline
          {% else %}
            mdi:train-car-passenger
          {% endif %}
          
      - name: "Abfahrtzeit Schule abholen"
        unique_id: abfahrtzeit_schule_abholen
        state: >
          {% set fahrzeitAuto = states('sensor.fahrzeit_schule') | int(0) %}
          {% set fahrzeitBus = states('input_number.schule_fahrzeit_bus') | int(0) %}
          
          {% set fahrzeitMinuten = fahrzeitAuto if is_state('input_boolean.schule_auto', 'on') else fahrzeitBus %}
          {% set endeMinuten = (state_attr('input_datetime.schule_ende', 'timestamp') / 60) | int(0) %}
          {% set pufferMinuten = states('input_select.schule_puffer') | int(0) %}

          {% set abfahrzeitMinuten = endeMinuten - fahrzeitMinuten - pufferMinuten %}
          {% set stundeAbfahrt = (abfahrzeitMinuten / 60) | int(0) %}
          {% set minuteAbfahrt = (abfahrzeitMinuten - stundeAbfahrt * 60) | int(0) %}
          {% set uhrzeitAbfahrt = "%0.02d:%0.02d" | format(stundeAbfahrt, minuteAbfahrt ) %}

          {{ uhrzeitAbfahrt }}      
          
automation:             
  - alias: 'Benachrichtigung Schule'
    id: "benachrichtigung_schule"
    trigger:
      - id: wegbringen
        platform: template
        value_template: '{{ states("sensor.time") == states("sensor.abfahrtzeit_schule_wegbringen") }}'
      - id: abholen
        platform: template
        value_template: '{{ states("sensor.time") == states("sensor.abfahrtzeit_schule_abholen") }}'        
    condition:
      - "{{ is_state('binary_sensor.schultag', 'on') }}"
      - condition: or
        conditions:
          - "{{ trigger.id == 'wegbringen' }}"
          - condition: template
            value_template: >-
              {% set naechstesPapaWochenende = (as_timestamp(state_attr('calendar.franzi_papa_wochenende', 'start_time'))) | timestamp_custom('%Y-%m-%d', True) %}
              {% set Heute = as_timestamp(now()) | timestamp_custom('%Y-%m-%d', True) %}

              {{ naechstesPapaWochenende != Heute }}  
    action:
      - if: "{{ trigger.id == 'wegbringen' }}"
        then:
          - service: !secret tts_service            
            data:
              echo: "wohnzimmer"
              message: >-
                {% if is_state('input_boolean.schule_auto', 'on') %}
                  "Es ist Zeit zur Schule zu fahren. Die aktuelle Fahrzeit betr채gt {{ states('sensor.fahrzeit_schule') }} Minuten."
                {% else %}
                  "Es ist Zeit sich auf den Weg zur Schule zu machen. Der Bus f채hrt in 10 Minuten."
                {% endif %}                
        else:
          - service: !secret tts_service
            data:
              message: >-
                {% if is_state('input_boolean.schule_auto', 'on') %}
                  "Es ist Zeit Franzi abzuholen. Die aktuelle Fahrzeit betr채gt {{ states('sensor.fahrzeit_schule') }} Minuten."          
                {% else %}
                  "Es ist Zeit sich auf den Weg zur Schule zu machen. Der Bus f채hrt in 10 Minuten."
                {% endif %}                              