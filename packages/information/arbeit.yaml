sensor:
  - platform: here_travel_time
    name: Fahrzeit zur Arbeit
    api_key: !secret here_api_key
    origin_latitude: !secret home_latitude
    origin_longitude: !secret home_longitude
    destination_latitude: !secret work_latitude
    destination_longitude: !secret work_longitude
    traffic_mode: true

  - platform: here_travel_time
    name: Fahrzeit nach Hause
    api_key: !secret here_api_key
    origin_latitude: !secret work_latitude
    origin_longitude: !secret work_longitude    
    destination_latitude: !secret home_latitude
    destination_longitude: !secret home_longitude
    traffic_mode: true

  - platform: template
    sensors:
      abfahrzeit:
        friendly_name: Abfahrzeit
        icon_template: mdi:clock-start
        unit_of_measurement: 'Uhr'
        value_template: >-
          {% set minuten_arbeit = (states('input_select.arbeit_stunden') | int * 60) + (states('input_select.arbeit_minuten') | int) | int %}
          {% set verzoegerung_wetter = (10 if is_state('binary_sensor.schlechtes_wetter', 'on') else 0) %}
          {% set minuten_minus_fahrzeit = (minuten_arbeit - states('sensor.fahrzeit_zur_arbeit') | int) - (states('input_select.arbeit_puffer') | int) - (verzoegerung_wetter | int) | int %}
          {% set stunde_abfahrt = (minuten_minus_fahrzeit / 60) | int %}
          {% set minuten_abfahrt = (minuten_minus_fahrzeit - stunde_abfahrt * 60) | int %}
          {% set abfahrt = "%0.02d:%0.02d" | format(stunde_abfahrt, minuten_abfahrt ) %}

          {{ abfahrt }}

binary_sensor:
  - platform: workday
    name: Arbeitstag
    country: DE
    province: NW
    
  - platform: workday
    name: Arbeitstag morgen
    country: DE
    province: NW
    days_offset: 1    
    
  - platform: template
    sensors:
      office_morgen:
        friendly_name: 'Büro heute'
        device_class: opening
        value_template: >-
          {% set NextOffice = state_attr('calendar.arbeit_buero', 'start_time') %}
          
          {% if NextOffice == None %}
            False
          {% else %}
            {% set NextOfficeTime = strptime(state_attr('calendar.arbeit_buero', 'start_time'),'%Y-%m-%d %H:%M:%S') %}

            {{ NextOfficeTime.strftime('%j')|int - now().strftime('%j')|int == 1 }}          
          {% endif %}
    
input_select:
  arbeit_stunden:
    name: Stunde
    options:
      - 5
      - 6
      - 7
    icon: mdi:av-timer

  arbeit_minuten:
    name: Minute
    options:
      - 0
      - 10
      - 20
      - 30
      - 40
      - 50
    icon: mdi:timer

  arbeit_puffer:
    name: Puffer
    options:
      - 0
      - 10
      - 20
      - 30
    icon: mdi:timelapse         
        
automation:             
  - alias: 'Benachrichtigung Arbeit'
    id: "benachrichtigung_arbeit"
    trigger:
      - platform: template
        value_template: '{{ states("sensor.time") == states("sensor.abfahrzeit") }}'
    condition:
      - condition: state
        entity_id: binary_sensor.arbeitstag
        state: 'on'
      - condition: state
        entity_id: calendar.urlaub
        state: 'off'
      - condition: state
        entity_id: calendar.krank
        state: 'off'        
      - condition: state
        entity_id: input_boolean.home_office
        state: 'off'        
    action:
      - service: !secret tts_service
        data_template:
          message: >-
            "Es ist Zeit zur Arbeit zu fahren. Die aktuelle Fahrzeit beträgt {{ states('sensor.fahrzeit_zur_arbeit') }} Minuten.{% if is_state('binary_sensor.schlechtes_wetter', 'on') %} Aktuell ist mit {{ states('sensor.wetterlage') }} zu rechnen.{% endif %}"

  - alias: "Fahrzeit nach Hause"
    id: "fhrzeit_nach_hause"
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/fahrzeit'
    action:
      - service: notify.telegram
        data_template:
          title: "Fahrzeit nach Hause"
          message: >-
            Die Fahrzeit von der Arbeit nach Hause beträgt aktuell {{ states('sensor.fahrzeit_nach_hause') }} Minuten.
            
            
            Die folgende Route wird empfohlen:
            {{ state_attr('sensor.fahrzeit_nach_hause', 'route') }}
          
homeassistant:
  customize:
    sensor.fahrzeit_zur_arbeit:
      icon: mdi:car-estate
    sensor.fahrzeit_nach_hause:
      icon: mdi:car-sports
