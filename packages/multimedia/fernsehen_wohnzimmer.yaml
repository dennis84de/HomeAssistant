media_player:
  - platform: songpal
    name: Soundbar
    endpoint: http://192.168.2.20:10000/sony

input_number:
  soundbar_volume:
    name: Lautstärke
    min: 0
    max: 50
    step: 1
    icon: mdi:volume-high

input_boolean:
  musik_ausschalten:
    name: Musik ausschalten
    icon: mdi:music-off
  kodi_pausiert:
    name: Wiedergabe pausiert
  kodi_pausieren:
    name: Wiedergabe pausieren
    initial: on
    icon: mdi:sync-off

sensor:
  - platform: template
    sensors:
      soundbar_volume:
        entity_id:
          - media_player.soundbar
        value_template: >-
            {% if states.media_player.soundbar.state == "off" %}
              0
            {% elif states.media_player.soundbar.attributes.volume_level == None %}
              0
            {% else %}
              {% set volume = states.media_player.soundbar.attributes.volume_level %}
              {% set new_volume = volume * 50 %}
              {{ new_volume | int }}
            {% endif %}

binary_sensor:
  - platform: template
    sensors:
      soundbar_volume_changed:
        entity_id:
          - input_number.soundbar_volume
          - sensor.soundbar_volume
          - media_player.soundbar
        friendly_name: "Lautsärke geändert"
        value_template: >-
          {% if (states.input_number.soundbar_volume.state | int) != (states.sensor.soundbar_volume.state | int ) %}
            true
          {% else %}
            false
          {% endif %}

cover:
  - platform: template
    covers:
      fernseher_eingang:
        friendly_name: "Fernseher Eingang"
        position_template: 50
        open_cover:
          service: broadlink.send
          data:
            host: 192.168.2.45
            packet:
              - "JgCMAJWUETgTNxE5ERMSExITERQRFBE4EjgRORETEhMSExEUERQRFBE4EhMRFBE5EhITEhITEjgRFBI3EjgRFBE4EzcROBIABgOTlRE5ETgSOBEUERQSEhITEhMSOBI3EjgRFBEUERMSExEUERQROBMSEhMROREUERMSExI4ERQSNxI4ERQROBI4EjgSAA0FAAAAAAAAAAAAAAAA"
        close_cover:
          service: broadlink.send
          data:
            host: 192.168.2.45
            packet:
              - "JgCMAJWTEjgSOBI3EhMSExEUERQRFBE4EjgROBMSEhMRFBEUERQRExITEhMSExE5ERMSExITETkSNxI4EjgRExI4ETkROBIABgKUlRI3EjgSOBISEhMTEhEUERQSNxM3EjgRFBETEhMRFBEUERQSExETEhMSOBITERMSExI4ETkROBI4ERQSNxI4ETgSAA0FAAAAAAAAAAAAAAAA"
        stop_cover:
          service: broadlink.send
          data:
            host: 192.168.2.45
            packet:
              - "JgCMAJSVETgSOBE5ERQSEhMSEhMRFBE5ETgROREUERMSExITEhMRORETEhMSExITERQRFBETEhMSOBI4ETgSOBI4EjcSOBEABgOUlBI4ETkROBITEhMRFBEUERQROBI4ETgSExITERQSExEUETgSExITERQRFBEUERMTEhITEjgROBI4ETkROBI4ETkSAA0FAAAAAAAAAAAAAAAA"
        icon_template: >-
          mdi:television-guide

      kodi_untertitel:
        friendly_name: "Untertitel"
        position_template: 50
        open_cover:
          service: media_player.kodi_call_method
          data:
            entity_id: media_player.kodi_wohnzimmer
            method: Input.ExecuteAction
            action: subtitledelayplus
        close_cover:
          service: media_player.kodi_call_method
          data:
            entity_id: media_player.kodi_wohnzimmer
            method: Input.ExecuteAction
            action: subtitledelayminus
        stop_cover:
          service: media_player.kodi_call_method
          data:
            entity_id: media_player.kodi_wohnzimmer
            method: Input.ExecuteAction
            action: showsubtitles
        icon_template: >-
          mdi:message-bulleted

switch:
  - platform: broadlink
    host: 192.168.2.45
    mac: '34:EA:34:C7:C0:28'
    type: rm
    friendly_name: "Broadlink Wohnzimmer"

  - platform: template
    switches:
      wohnzimmer_fernseher:
        friendly_name: "Wohnzimmer Fernseher"
        value_template: "{{ is_state('switch.zigate_55a3_3', 'on') }}"
        turn_on:
          service: switch.turn_on
          entity_id: switch.zigate_55a3_3
        turn_off:
          service: switch.turn_off
          entity_id: switch.zigate_55a3_3

      watchtv_wohnzimmer:
        friendly_name: "Fernsehen"
        value_template: "{{ is_state('switch.wohnzimmer_fernseher', 'on') }}"
        turn_on:
          service: script.watchtv_wohnzimmer_on
        turn_off:
          service: script.watchtv_wohnzimmer_off

      play_wohnzimmer:
        friendly_name: "Wiedergabe Kodi"
        value_template: "{{ is_state('media_player.kodi_wohnzimmer', 'playing') }}"
        turn_on:
          service: media_player.media_play
          entity_id: media_player.kodi_wohnzimmer
        turn_off:
          service: media_player.media_pause
          entity_id: media_player.kodi_wohnzimmer

      wohnzimmer_soundbar:
        friendly_name: "Soundbar"
        value_template: "{{ is_state('media_player.soundbar', 'on') }}"
        icon_template: >-
          mdi:surround-sound
        turn_on:
          - service: media_player.turn_on
            entity_id: media_player.soundbar
        turn_off:
          - service: media_player.turn_off
            entity_id: media_player.soundbar

script:
  watchtv_wohnzimmer_on:
    alias: "Fernsehen Wohnzimmer einschalten"
    sequence:
      - service: switch.turn_on
        entity_id: switch.wohnzimmer_fernseher, switch.wohnzimmer_soundbar
      - wait_template: "{{is_state('media_player.soundbar', 'on')}}"
      - service: media_player.select_source
        entity_id: media_player.soundbar
        data:
          source: TV

  watchtv_wohnzimmer_off:
    alias: "Fernsehen Wohnzimmer ausschalten"
    sequence:
    - service: media_player.media_stop
      entity_id: media_player.kodi_wohnzimmer
    - wait_template: "{{is_state('media_player.kodi_wohnzimmer', 'idle')}}"
      timeout: '00:00:05'
      continue_on_timeout: 'true'
    - service: media_player.turn_off
      entity_id: media_player.kodi_wohnzimmer
    - wait_template: "{{is_state('media_player.kodi_wohnzimmer', 'off')}}"
      timeout: '00:00:05'
      continue_on_timeout: 'true'
    - service: switch.turn_off
      entity_id: switch.wohnzimmer_fernseher, switch.wohnzimmer_soundbar
    - service: input_select.select_option
      data:
        entity_id: input_select.dreamscreen_modus
        option: "Aus"

automation:
  - alias: "Kodi - Musik ausschalten"
    initial_state: true
    trigger:
      platform: state
      entity_id: media_player.kodi_wohnzimmer
      from: 'off'
      to: 'idle'
    condition:
      condition: and
      conditions:
        - condition: state
          state: 'on'
          entity_id: switch.alle_radios
        - condition: state
          state: 'on'
          entity_id: input_boolean.musik_ausschalten
    action:
      - service: script.radios_pausieren
      - service: switch.turn_off
        entity_id: switch.wohnzimmer_radio, switch.balkon_radio, switch.flur_radio, switch.kuche_radio, switch.schlafzimmer_radio, switch.arbeitszimmer_radio

  - alias: "Kodi - Wiedergabe Cube"
    initial_state: true
    trigger:
      - platform: event
        event_type: xiaomi_aqara.cube_action
        event_data:
          entity_id: binary_sensor.cube_158d0001100d7a
          action_type: flip90
    condition:
      - condition: or
        conditions:
        - condition: state
          entity_id: media_player.kodi_wohnzimmer
          state: 'playing'
        - condition: state
          entity_id: media_player.kodi_wohnzimmer
          state: 'paused'
    action:
      - service: switch.toggle
        entity_id: switch.play_wohnzimmer

  - alias: "Kodi - Widergabe Schalter"
    initial_state: true
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.switch_158d0002c8c48b
          click_type: single
    condition:
      - condition: or
        conditions:
        - condition: state
          entity_id: media_player.kodi_wohnzimmer
          state: 'playing'
        - condition: state
          entity_id: media_player.kodi_wohnzimmer
          state: 'paused'
    action:
      - service: switch.toggle
        entity_id: switch.play_wohnzimmer

  - alias: "Kodi - Wiedergabe pausieren - Bewegung Flur / Balkon"
    initial_state: true
    trigger:
      - platform: state
        entity_id: binary_sensor.zigate_7904_presence
        to: 'on'
      - platform: state
        entity_id: binary_sensor.zigate_0b57_presence
        to: 'on'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.kodi_pausieren
        state: 'on'
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
      - condition: template
        value_template: '{{ is_state("sensor.tasker_handystatus", "incoming") == False and is_state("sensor.tasker_handystatus", "outgoing") == False }}'
    action:
      - service: switch.turn_off
        entity_id: switch.play_wohnzimmer
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_pausiert

  - alias: "Kodi - Wiedergabe starten - Bewegung Wohnzimmer"
    initial_state: true
    trigger:
      platform: state
      entity_id: binary_sensor.bewegungsmelder_wohnzimmer
      to: 'on'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'paused'
      - condition: state
        entity_id: input_boolean.kodi_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
      - condition: template
        value_template: '{{ is_state("sensor.tasker_handystatus", "incoming") == False and is_state("sensor.tasker_handystatus", "outgoing") == False }}'
    action:
      - service: switch.turn_on
        entity_id: switch.play_wohnzimmer
      - service: input_boolean.turn_off
        entity_id: input_boolean.kodi_pausiert

  - alias: "Kodi - Nächster Titel"
    initial_state: true
    trigger:
      - platform: event
        event_type: xiaomi_aqara.cube_action
        event_data:
          entity_id: binary_sensor.cube_158d0001100d7a
          action_type: free_fall
    condition:
      - condition: template
        value_template: '{{ is_state("media_player.kodi_wohnzimmer", "off") == False }}'
    action:
      - service: media_player.media_next_track
        entity_id: media_player.kodi_wohnzimmer

  - alias: "Kodi - Wiedergabe gestartet - Licht und Musik ausschalten"
    initial_state: true
    trigger:
      platform: state
      entity_id: media_player.kodi_wohnzimmer
      to: 'playing'
    action:
      - service: light.turn_off
        entity_id: light.sideboard, light.schrank, light.badezimmerschrank, light.schreibtisch, light.regal, light.arbeitszimmer_lampe, light.balkon_licht
      - condition: state
        entity_id: media_player.badezimmer
        state: 'playing'
      - service: media_player.media_pause
        entity_id: media_player.badezimmer

  - alias: "Soundbar Lautstärke - Soundbar"
    initial_state: on
    trigger:
      - platform: state
        entity_id: binary_sensor.soundbar_volume_changed
        to: 'true'
        for:
          seconds: 1
      - platform: homeassistant
        event: start
      - platform: state
        entity_id: media_player.soundbar
        to: 'on'
    action:
      - service: input_number.set_value
        data_template:
          entity_id: input_number.soundbar_volume
          value: >-
            {% if states.media_player.soundbar.state == "off" %}
              0
            {% else %}
              {{states.sensor.soundbar_volume.state }}
            {% endif %}

  - alias: "Soundbar Lautstärke - Slider"
    initial_state: on
    trigger:
      - platform: state
        entity_id: input_number.soundbar_volume
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: >-
            {% if is_state('media_player.soundbar', 'off') %}
              {% set soundbar_volume = 0 %}
            {% elif state_attr("media_player.soundbar", "volume_level") == None %}
              {% set soundbar_volume = 0 %}
            {% else %}
              {% set soundbar_volume = states.media_player.soundbar.attributes.volume_level * 50 %}
            {% endif %}

            {% set input_number = states.input_number.soundbar_volume.state %}

            {% if input_number != soundbar_volume %}
              true
            {%else%}
              false
            {% endif %}
    action:
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.soundbar
          volume_level: >-
            {{ states.input_number.soundbar_volume.state | int / 50 }}

  - alias: "Soundbar Lautstärke - Cube"
    initial_state: true
    trigger:
      - platform: event
        event_type: xiaomi_aqara.cube_action
        event_data:
          entity_id: binary_sensor.cube_158d0001100d7a
          action_type: rotate
    condition:
      condition: state
      entity_id: media_player.soundbar
      state: 'on'
    action:
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.soundbar
          volume_level: >
            {% if states.media_player.soundbar.state == "off" %}
              {% set oldState = 0 %}
            {% elif states.media_player.soundbar.attributes.volume_level == None %}
              {% set oldState = 0 %}
            {% else %}
              {% set oldState = states.media_player.soundbar.attributes.volume_level -%}
            {% endif %}

            {% if trigger.event.data.action_value | float > 0 %}
               {% set newState = oldState + 0.05 -%}
            {% else %}
               {% set newState = oldState - 0.05 -%}
            {% endif %}

            {{ newState }}
      - service: input_number.set_value
        data_template:
          entity_id: input_number.soundbar_volume
          value: >-
            {% if states.media_player.soundbar.state == "off" %}
              0
            {% else %}
              {{states.sensor.soundbar_volume.state }}
            {% endif %}

homeassistant:
  customize:
    switch.watchtv_wohnzimmer:
      icon: mdi:television-classic
    switch.play_wohnzimmer:
      icon: mdi:play-pause
    switch.wohnzimmer_fernseher:
      icon: mdi:television
      friendly_name: Fernseher

    sensor.soundbar_volume:
      hidden: true
    binary_sensor.soundbar_volume_changed:
      hidden: true

    input_boolean.kodi_pausiert:
      hidden: true
