media_player:
  - platform: kodi
    host: !secret computer_host
    username: !secret kodi_username
    password: !secret kodi_password
    name: Kodi Wohnzimmer
    turn_on_action:
      service: mqtt.publish
      data_template:
        topic: "iotlink/workgroup/computer/commands/run"
        payload: '{ "command": "C:\\Program Files\\Kodi\\kodi.exe", "path": "C:\\Program Files\\Kodi", "user": "", "visible": true, "fallback": true }'
    turn_off_action:
      service: kodi.call_method
      data:
        entity_id: media_player.kodi_wohnzimmer
        method: Application.Quit
        
songpal:
    name: Soundbar
    endpoint: !secret songpal_endpoint_url
        
notify:
  - platform: kodi
    name: Kodi Wohnzimmer
    host: !secret computer_host
    username: !secret kodi_username
    password: !secret kodi_password
    
input_boolean:
  musik_ausschalten:
    name: Musik ausschalten
    icon: mdi:music-off
  kodi_pausiert:
    name: Wiedergabe pausiert
    initial: off
  kodi_pausieren:
    name: Wiedergabe pausieren
    initial: on
    icon: mdi:sync-off

binary_sensor:
  - platform: mqtt
    name: "Kodi Wohnzimmer - MQTT"    
    state_topic: "kodi_wohnzimmer/connected"
    payload_on: "2"
    payload_off: "0"
    device_class: connectivity
    json_attributes_topic: "kodi_wohnzimmer/status/progress"
    json_attributes_template: "{{ value_json | tojson }}"   
    
cover:
  - platform: template
    covers:
      fernseher_eingang:
        friendly_name: "Fernseher Eingang"
        position_template: 50
        open_cover:
          service: broadlink.send
          data:
            host: 192.168.2.45
            packet:
              - "JgCMAJWUETgTNxE5ERMSExITERQRFBE4EjgRORETEhMSExEUERQRFBE4EhMRFBE5EhITEhITEjgRFBI3EjgRFBE4EzcROBIABgOTlRE5ETgSOBEUERQSEhITEhMSOBI3EjgRFBEUERMSExEUERQROBMSEhMROREUERMSExI4ERQSNxI4ERQROBI4EjgSAA0FAAAAAAAAAAAAAAAA"
        close_cover:
          service: broadlink.send
          data:
            host: 192.168.2.45
            packet:
              - "JgCMAJWTEjgSOBI3EhMSExEUERQRFBE4EjgROBMSEhMRFBEUERQRExITEhMSExE5ERMSExITETkSNxI4EjgRExI4ETkROBIABgKUlRI3EjgSOBISEhMTEhEUERQSNxM3EjgRFBETEhMRFBEUERQSExETEhMSOBITERMSExI4ETkROBI4ERQSNxI4ETgSAA0FAAAAAAAAAAAAAAAA"
        stop_cover:
          service: broadlink.send
          data:
            host: 192.168.2.45
            packet:
              - "JgCMAJSVETgSOBE5ERQSEhMSEhMRFBE5ETgROREUERMSExITEhMRORETEhMSExITERQRFBETEhMSOBI4ETgSOBI4EjcSOBEABgOUlBI4ETkROBITEhMRFBEUERQROBI4ETgSExITERQSExEUETgSExITERQRFBEUERMTEhITEjgROBI4ETkROBI4ETkSAA0FAAAAAAAAAAAAAAAA"
        icon_template: >-
          mdi:television-guide

      kodi_untertitel:
        friendly_name: "Untertitel"
        position_template: 50
        open_cover:
          service: kodi.call_method
          data:
            entity_id: media_player.kodi_wohnzimmer
            method: Input.ExecuteAction
            action: subtitledelayplus
        close_cover:
          service: kodi.call_method
          data:
            entity_id: media_player.kodi_wohnzimmer
            method: Input.ExecuteAction
            action: subtitledelayminus
        stop_cover:
          service: kodi.call_method
          data:
            entity_id: media_player.kodi_wohnzimmer
            method: Input.ExecuteAction
            action: showsubtitles
        icon_template: >-
          mdi:message-bulleted

switch:
  - platform: broadlink
    host: 192.168.2.45
    mac: '34:EA:34:C7:C0:28'
    type: rm
    friendly_name: "Broadlink Wohnzimmer"

  - platform: template
    switches:
      watchtv_wohnzimmer:
        friendly_name: "Fernsehen"
        value_template: "{{ is_state('switch.wohnzimmer_fernseher', 'on') }}"
        turn_on:
          service: script.watchtv_wohnzimmer_on
        turn_off:
          service: script.watchtv_wohnzimmer_off

script:
  watchtv_wohnzimmer_on:
    alias: "Fernsehen Wohnzimmer einschalten"
    sequence:
      - service: switch.turn_on
        entity_id: switch.wohnzimmer_fernseher
      - service: media_player.turn_on
        entity_id: media_player.soundbar        
      - wait_template: "{{is_state('media_player.soundbar', 'on')}}"
      - service: media_player.select_source
        entity_id: media_player.soundbar
        data:
          source: TV

  watchtv_wohnzimmer_off:
    alias: "Fernsehen Wohnzimmer ausschalten"
    sequence:
    - service: media_player.media_stop
      entity_id: media_player.kodi_wohnzimmer
    - wait_template: "{{is_state('media_player.kodi_wohnzimmer', 'idle')}}"
      timeout: '00:00:05'
      continue_on_timeout: 'true'
    - service: media_player.turn_off
      entity_id: media_player.kodi_wohnzimmer
    - wait_template: "{{is_state('media_player.kodi_wohnzimmer', 'off')}}"
      timeout: '00:00:05'
      continue_on_timeout: 'true'
    - service: media_player.turn_off
      entity_id: media_player.soundbar      
    - service: switch.turn_off
      entity_id: switch.wohnzimmer_fernseher
    - service: input_select.select_option
      data:
        entity_id: input_select.dreamscreen_modus
        option: "Aus"

  sky_starten:
    alias: "Sky starten"
    sequence:
      - service: mqtt.publish
        data_template:
          topic: "iotlink/workgroup/computer/commands/run"
          payload: '{ "command": "C:\\Users\\Dennis\\AppData\\Roaming\\Sky\\Sky Go\\Sky Go.exe", "path": "C:\\Users\\Dennis\\AppData\\Roaming\\Sky\\Sky Go", "user": "", "visible": true, "fallback": true }'      

automation:
  - alias: "Kodi - Musik ausschalten"
    trigger:
      - platform: state
        entity_id: media_player.kodi_wohnzimmer
        from: 'off'
        to: 'idle'
    condition:
      - condition: state
        state: 'on'
        entity_id: switch.alle_radios
      - condition: state
        state: 'on'
        entity_id: input_boolean.musik_ausschalten
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 2
    action:
      - service: script.radios_pausieren
      - service: switch.turn_off
        entity_id: switch.wohnzimmer_radio, switch.balkon_radio, switch.flur_radio, switch.kuche_radio, switch.schlafzimmer_radio, switch.arbeitszimmer_radio
      
  - alias: "Kodi - Wiedergabe Cube"
    trigger:
      - platform: state
        entity_id: sensor.cube_bewegung
    condition:
      - condition: template
        value_template: '{{ True if "flip90" in trigger.to_state.state else False }}'
      - condition: or
        conditions:
        - condition: state
          entity_id: media_player.kodi_wohnzimmer
          state: 'playing'
        - condition: state
          entity_id: media_player.kodi_wohnzimmer
          state: 'paused'
    action:
      - service: media_player.media_play_pause
        entity_id: media_player.kodi_wohnzimmer

  - alias: "Kodi - Wiedergabe Schalter"
    trigger:
      - platform: state
        entity_id: binary_sensor.schalter_wohnzimmer
        to: 'off'
    condition:
      - condition: or
        conditions:
        - condition: state
          entity_id: media_player.kodi_wohnzimmer
          state: 'playing'
        - condition: state
          entity_id: media_player.kodi_wohnzimmer
          state: 'paused'
    action:
      - service: media_player.media_play_pause
        entity_id: media_player.kodi_wohnzimmer

  - alias: "Kodi - Wiedergabe pausieren - Bewegung Flur"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_flur_vorne
        to: 'on'
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_flur_hinten
        to: 'on'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.kodi_pausieren
        state: 'on'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'        
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}'
    action:
      - service: media_player.media_pause
        entity_id: media_player.kodi_wohnzimmer        
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_pausiert

  - alias: "Kodi - Wiedergabe pausieren - Bewegung Balkon"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_balkon
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.fenster_balkontuer
        state: 'on'      
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.kodi_pausieren
        state: 'on'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'            
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}'
    action:
      - service: media_player.media_pause
        entity_id: media_player.kodi_wohnzimmer        
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_pausiert

  - alias: "Kodi - Wiedergabe pausieren - Schalter Balkon"
    trigger:
      - platform: state
        entity_id: sensor.schalter_balkon
        to: '2'
    condition:
      - condition: state
        entity_id: binary_sensor.fenster_balkontuer
        state: 'on'      
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.kodi_pausieren
        state: 'on'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'                    
    action:
      - service: media_player.media_pause
        entity_id: media_player.kodi_wohnzimmer        
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_pausiert

  - alias: "Kodi - Wiedergabe starten - Bewegung Wohnzimmer"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_wohnzimmer
        to: 'on'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'paused'
      - condition: state
        entity_id: input_boolean.kodi_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}'
    action:
      - service: media_player.media_play
        entity_id: media_player.kodi_wohnzimmer
      - service: input_boolean.turn_off
        entity_id: input_boolean.kodi_pausiert

  - alias: "Kodi - Cube - Nächster Titel"
    trigger:
      - platform: state
        entity_id: sensor.cube_bewegung
    condition:
      - condition: template
        value_template: '{{ True if "drop" in trigger.to_state.state else False }}'         
      - condition: template
        value_template: '{{ is_state("media_player.kodi_wohnzimmer", "off") == False }}'
    action:
      - service: media_player.media_next_track
        entity_id: media_player.kodi_wohnzimmer

  - alias: "Kodi - Wiedergabe gestartet - Licht und Musik ausschalten"
    trigger:
      - platform: state
        entity_id: media_player.kodi_wohnzimmer
        to: 'playing'
    action:
      - service: light.turn_off
        entity_id: light.sideboard, light.schrank, light.badezimmerschrank, light.schreibtisch, light.kuche_regal, light.arbeitszimmer_lampe, light.balkon_licht, light.sportzimmer_regal
      - condition: state
        entity_id: media_player.badezimmer
        state: 'playing'
      - service: media_player.media_pause
        entity_id: media_player.badezimmer

  - alias: "Soundbar Lautstärke - Cube"
    trigger:
      - platform: state
        entity_id: sensor.cube_drehung
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 5        
    action:
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.soundbar
          volume_level: >
            {% if is_state('media_player.soundbar', 'off') %}
              {% set oldState = 0 %}
            {% elif state_attr('media_player.soundbar', 'volume_level') == None %}            
              {% set oldState = 0 %}
            {% else %}
              {% set oldState = state_attr('media_player.soundbar', 'volume_level') | float -%}
            {% endif %}

            {% if trigger.to_state.state | float > 0 %}
               {% set newState = oldState + 0.05 -%}
            {% else %}
               {% set newState = oldState - 0.05 -%}
            {% endif %}

            {{ newState }}

homeassistant:
  customize:
    media_player.soundbar:
      icon: mdi:music
          
    switch.watchtv_wohnzimmer:
      icon: mdi:television-classic
    switch.wohnzimmer_fernseher:
      icon: mdi:television
      
    script.sky_starten:
      icon: mdi:soccer