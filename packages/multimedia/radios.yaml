input_boolean:
  radio_balkon_aktiv:
    name: Radio Balkon aktiv
        
  telefon_musik_pausiert:
    name: Musik pausiert     
    
  tuer_musik_pausiert:
    name: Musik pausiert
    
  radio_alexa:
    name: Radio Alexa
    icon: mdi:radio-tower
    
timer:
  radio_balkon:
    name: Radio Balkon    
    duration: 600
        
  radio_badezimmer:
    name: Radio Badezimmer    
    duration: 180
    
template:
  - sensor:
      - name: Radios eingeschaltet
        icon: mdi:cast
        state: >-
          {% set radiosEingeschaltet = expand('group.alle_radios')
              | selectattr('state','eq','on') 
              | map(attribute='name')
              | list
              | length %}    
                
          {{ radiosEingeschaltet }}              

switch:   
  - platform: template
    switches:
      wiedergabe_badezimmer:
        friendly_name: Wiedergabe Badezimmer
        value_template: "{{ is_state('media_player.radio_badezimmer', 'playing') }}"        
        turn_on:
          - service: media_player.media_play
            data:
              entity_id: media_player.radio_badezimmer
        turn_off:
          - service: media_player.media_pause
            data:
              entity_id: media_player.radio_badezimmer

      wiedergabe_aktiv:
        friendly_name: Wiedergabe aktiv
        value_template: >-
          {% set radiosAktiv = expand('group.radio_mediaplayer')
              | selectattr('state','eq','playing') 
              | map(attribute='name')
              | list
              | length %}    
                
          {{ radiosAktiv | int(0) > 0 or is_state('media_player.uberall', 'playing') }}
        icon_template: >-
          {% set radiosAktiv = expand('group.radio_mediaplayer')
              | selectattr('state','eq','playing') 
              | map(attribute='name')
              | list
              | length %}    
                
          {{ 'mdi:play-circle-outline' if (radiosAktiv | int(0) > 0 or is_state('media_player.uberall', 'playing')) else 'mdi:pause-circle-outline' }}        
        turn_on:
          service: script.radios_starten
        turn_off:
          service: script.radios_pausieren
              
      radios_lautlos:
        friendly_name: Radios lautlos
        value_template: >-
          {% if state_attr('media_player.echo_badezimmer', 'is_volume_muted') == true
            or state_attr('media_player.echo_flur', 'is_volume_muted') == true
            or state_attr('media_player.echo_kuche', 'is_volume_muted') == true
            or state_attr('media_player.echo_wohnzimmer', 'is_volume_muted') == true
            or state_attr('media_player.echo_arbeitszimmer', 'is_volume_muted') == true            
            or (is_state('media_player.radio_wohnzimmer', 'playing') and (state_attr('media_player.radio_wohnzimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_arbeitszimmer', 'playing') and (state_attr('media_player.radio_arbeitszimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_badezimmer', 'playing') and (state_attr('media_player.radio_badezimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_kueche', 'playing') and (state_attr('media_player.radio_kueche', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_schlafzimmer', 'playing') and (state_attr('media_player.radio_schlafzimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_balkon', 'playing') and (state_attr('media_player.radio_balkon', 'volume_level') | float(0)) == 0)
          %}
            True
          {% else %}
            False
          {% endif %}       
        icon_template: >-
          {% if state_attr('media_player.echo_badezimmer', 'is_volume_muted') == true
            or state_attr('media_player.echo_flur', 'is_volume_muted') == true
            or state_attr('media_player.echo_kuche', 'is_volume_muted') == true
            or state_attr('media_player.echo_wohnzimmer', 'is_volume_muted') == true
            or state_attr('media_player.echo_arbeitszimmer', 'is_volume_muted') == true            
            or (is_state('media_player.radio_wohnzimmer', 'playing') and (state_attr('media_player.radio_wohnzimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_arbeitszimmer', 'playing') and (state_attr('media_player.radio_arbeitszimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_badezimmer', 'playing') and (state_attr('media_player.radio_badezimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_kueche', 'playing') and (state_attr('media_player.radio_kueche', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_schlafzimmer', 'playing') and (state_attr('media_player.radio_schlafzimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_balkon', 'playing') and (state_attr('media_player.radio_balkon', 'volume_level') | float(0)) == 0)
          %}
            mdi:volume-off
          {% else %}
            mdi:volume-high
          {% endif %}                
        turn_on:
          service: script.radios_lautlos
        turn_off:
          service: script.radios_laut
          
script:
  sync_radios:
    alias: Radios synchronisieren
    sequence:
      - condition: state
        entity_id: media_player.radio_wohnzimmer
        state: 'playing'
      - service: media_player.turn_off
        entity_id: media_player.radio_wohnzimmer
      - delay: '00:00:02'
      - service: media_player.turn_on
        entity_id: media_player.radio_wohnzimmer

  radios_einschalten:
    alias: Radios einschalten
    sequence:
      - if: "{{ is_state('input_boolean.radio_alexa', 'on') }}"
        then:             
          - service: script.alexa_radio_suedtirol_eins               
        else:      
          - service: switch.turn_on
            entity_id: switch.badezimmer_radio, switch.wohnzimmer_radio, switch.flur_radio, switch.kueche_radio, switch.arbeitszimmer_radio
          - choose:
              - conditions:
                  - "{{ radioBalkon is not defined or radioBalkon == True }}"              
                  - "{{ now().isoweekday() == 6 or is_state('binary_sensor.arbeitstag', 'on') }}"
                  - "{{ (states('sensor.balkon_temperatur') | int(0)) > -5 }}"                
                  - "{{ is_state('binary_sensor.nachts', 'off') }}"
                sequence:            
                  - service: switch.turn_on
                    entity_id: switch.balkon_radio
                
  radios_ausschalten:
    alias: Radios ausschalten
    sequence:         
      - service: script.radios_pausieren 
      - if: "{{ badezimmerEingeschaltetLassen is not defined or badezimmerEingeschaltetLassen == False }}"
        then:        
          - service: switch.turn_off
            entity_id: group.alle_radios            
        else:
          - service: switch.turn_off
            entity_id: group.radios_ohne_badezimmer    
      - if: "{{ is_state('media_player.uberall', 'playing') }}"
        then:
          - service: media_player.media_pause
            entity_id: media_player.uberall                  
                
  radios_starten:
    alias: Radios abspielen
    sequence:
      - if: "{{ is_state('input_boolean.radio_alexa', 'on') }}"
        then:             
          - service: script.alexa_radio_suedtirol_eins               
        else:          
          - service: media_player.media_play
            entity_id: group.radio_mediaplayer

  radios_pausieren:
      alias: Radios pausieren
      sequence:
      - if: "{{ is_state('input_boolean.radio_alexa', 'on') }}"
        then:             
          - service: media_player.media_pause
            entity_id: media_player.uberall            
        else:          
          - service: media_player.media_pause
            entity_id: group.radio_mediaplayer

  radios_lautlos:
      alias: Radios lautlos
      sequence:
        - if: "{{ is_state('media_player.uberall', 'playing') }}"
          then:
            - service: media_player.volume_mute
              entity_id: media_player.uberall       
              data:
                is_volume_muted: 1
          else:
            - service: media_player.volume_set          
              data:
                entity_id: group.radio_mediaplayer, media_player.radio_balkon
                volume_level: 0
            
  radios_laut:
      alias: Radios laut
      sequence:   
        - if: "{{ is_state('media_player.uberall', 'playing') }}"
          then:
            - service: media_player.volume_mute
              entity_id: media_player.uberall       
              data:
                is_volume_muted: 0
          else:
            - service: media_player.volume_set          
              data:
                entity_id: group.radio_mediaplayer
                volume_level: 0.4 
            - service: media_player.volume_set          
              data:
                entity_id: media_player.radio_balkon
                volume_level: 0.2             
            
automation:       
  - alias: 'Radio Balkon - Bewegung erkannt'
    id: "radio_balkon_bewegung_erkannt"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_balkon
        to: 'on'
    condition:     
      - "{{ now().isoweekday() != 7 }}"      
      - "{{ is_state('switch.wiedergabe_aktiv', 'on') }}"
      - "{{ is_state('media_player.radio_balkon', 'off') }}"
      - "{{ is_state('binary_sensor.balkontuer', 'on') }}"
      - "{{ is_state('sensor.handy', 'idle') }}"
      - "{{ is_state('sensor.telefon', 'idle') }}"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_on
        data:
          entity_id: media_player.radio_balkon
      - if: "{{ is_state('binary_sensor.allein_zu_hause', 'off') }}"
        then:
          - service: timer.start
            entity_id: timer.radio_balkon          

  - alias: 'Radio Balkon - Keine Bewegung'
    id: "radio_balkon_keine_bewegung"
    trigger:
      - id: bewegungsmelder
        platform: state
        entity_id: binary_sensor.bewegungsmelder_wohnzimmer
        to: 'on'
      - id: balkontuer
        platform: state
        entity_id: binary_sensor.balkontuer
        to: 'off'    
      - id: timer
        platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.radio_balkon              
    condition:
      - condition: state
        entity_id: input_boolean.radio_balkon_aktiv
        state: 'on'
        for: "00:00:10"  
      - condition: or
        conditions:     
          - "{{ trigger.id == 'timer' }}"
          - "{{ trigger.id == 'balkontuer' and is_state('binary_sensor.allein_zu_hause', 'off') }}"
          - "{{ trigger.id == 'bewegungsmelder' and is_state('binary_sensor.allein_zu_hause', 'on') }}"        
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_off
        data:
          entity_id: media_player.radio_balkon
      - if: "{{ not is_state('timer.radio_balkon', 'idle') }}"
        then:
          - service: timer.cancel
            entity_id: timer.radio_balkon                

  - alias: 'Radio Balkon - Starten'
    id: "radio_balkon_starten"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c7:62:ce
          command: click
          args:
            click_type: double 
    condition:
      - "{{ is_state('switch.balkon_radio', 'on') }}"
      - "{{ is_state('switch.wiedergabe_aktiv', 'on') }}"
      - "{{ not is_state('media_player.radio_balkon', 'playing') }}"                    
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_on
        data:
          entity_id: media_player.radio_balkon
      
  - alias: 'Radio Balkon - Synchronisieren'
    id: "radio_balkon_synchronisieren"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c7:62:ce
          command: click
          args:
            click_type: double 
    condition:
      - condition: state
        entity_id: media_player.radio_balkon
        state: 'playing'
    action:
      - service: script.sync_radios
            
  - alias: 'Radio Badezimmer - Starten'
    id: "radio_badezimmer_starten"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_badezimmer
        to: 'on'
    condition:                             
      - "{{ is_state('binary_sensor.baden_aktiv', 'off') }}"
      - "{{ is_state('sensor.radios_eingeschaltet', '1') }}"
      - "{{ states('media_player.radio_badezimmer') in ('playing', 'paused', 'idle') }}"  
    action:
      - service: timer.start
        entity_id: timer.radio_badezimmer
      - if: "{{ not is_state('media_player.radio_badezimmer', 'playing') }}"
        then:
          - service: media_player.media_play
            data:
              entity_id: media_player.radio_badezimmer          
          
  - alias: 'Radio Badezimmer - Pausieren'
    id: "radio_badezimmer_pausieren"
    trigger: 
      - id: timer
        platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.radio_badezimmer          
    condition:  
      - "{{ is_state('switch.wiedergabe_aktiv', 'on') }}"
      - "{{ is_state('sensor.radios_eingeschaltet', '1') }}"
      - "{{ is_state('media_player.radio_badezimmer', 'playing') }}"     
    action:
      - service: media_player.media_pause
        data:
          entity_id: media_player.radio_badezimmer 
      
  - alias: 'Tür - Radios pausieren'
    id: "tuer_radios_pausieren"
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnungstuer
        to: 'on'
    condition:
      - "{{ is_state('switch.wiedergabe_aktiv', 'on') }}"
      - "{{ is_state('sensor.handy', 'idle') }}"
      - "{{ is_state('sensor.telefon', 'idle') }}"
      - "{{ is_state('input_boolean.telefon_musik_pausiert', 'off') }}"
      - "{{ is_state('input_boolean.tuer_musik_pausiert', 'off') }}"
      - "{{ is_state('input_boolean.home_office_musik_pausiert', 'off') }}"       
      - "{{ is_state('alarm_control_panel.alarmo', 'disarmed') }}"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.tuer_musik_pausiert
      - service: switch.turn_on
        entity_id: switch.radios_lautlos
        
  - alias: 'Tür - Radios starten'
    id: "tuer_radios_starten"
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnungstuer
        to: 'off'  
    condition:
      - condition: state
        entity_id: input_boolean.tuer_musik_pausiert
        state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.tuer_musik_pausiert
      - service: switch.turn_off
        entity_id: switch.radios_lautlos         
        
homeassistant:
  customize:
    script.sync_radios:
      icon: mdi:sync

  customize_glob:
    switch.*_radio:
      icon: mdi:radio      