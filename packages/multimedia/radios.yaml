switch:   
  - platform: template
    switches:
      wiedergabe_badezimmer:
        friendly_name: Wiedergabe Badezimmer
        value_template: >-
          {{ is_state('media_player.radio_badezimmer', 'playing') }}
        icon_template: >-
          {{ 'mdi:play-circle-outline' if is_state('media_player.radio_badezimmer', 'playing') else 'mdi:pause-circle-outline' }}
        turn_on:
          - service: media_player.media_play
            data:
              entity_id: media_player.radio_badezimmer
        turn_off:
          - service: media_player.media_pause
            data:
              entity_id: media_player.radio_badezimmer

      wiedergabe_aktiv:
        friendly_name: Wiedergabe aktiv
        value_template: >-
          {% if is_state('media_player.radio_kueche', 'playing')
            or is_state('media_player.radio_badezimmer', 'playing')
            or is_state('media_player.radio_wohnzimmer', 'playing')
            or is_state('media_player.radio_schlafzimmer', 'playing')
            or is_state('media_player.radio_arbeitszimmer', 'playing')
            or is_state('media_player.radio_flur', 'playing')
            or is_state('media_player.radio_balkon', 'playing')
          %}
            True
          {% else %}
            False
          {% endif %}
        icon_template: >-
          {% if is_state('media_player.radio_kueche', 'playing')
            or is_state('media_player.radio_badezimmer', 'playing')
            or is_state('media_player.radio_wohnzimmer', 'playing')
            or is_state('media_player.radio_schlafzimmer', 'playing')
            or is_state('media_player.radio_arbeitszimmer', 'playing')
            or is_state('media_player.radio_flur', 'playing')
            or is_state('media_player.radio_balkon', 'playing')
          %}
            mdi:play-circle-outline
          {% else %}
            mdi:pause-circle-outline
          {% endif %}
        turn_on:
          service: script.radios_starten
        turn_off:
          service: script.radios_pausieren

      alle_radios:
        friendly_name: Alle Radios
        value_template: >-
          {% if is_state('switch.wohnzimmer_radio', 'on')
            or is_state('switch.balkon_radio', 'on')
            or is_state('switch.schlafzimmer_radio', 'on')
            or is_state('switch.flur_radio', 'on')
            or is_state('switch.badezimmer_radio', 'on')
            or is_state('switch.arbeitszimmer_radio', 'on')
            or is_state('switch.kuche_radio', 'on')
          %}
            True
          {% else %}
            False
          {% endif %}
        turn_on:
          service: script.radios_einschalten
        turn_off:
          service: script.radios_ausschalten

      radios_lautlos:
        friendly_name: Radios lautlos
        value_template: >-
          {% if (is_state('media_player.radio_wohnzimmer', 'playing') and state_attr('media_player.radio_wohnzimmer', 'volume_level') == None)
            or (is_state('media_player.radio_arbeitszimmer', 'playing') and state_attr('media_player.radio_arbeitszimmer', 'volume_level') == None)
            or (is_state('media_player.radio_badezimmer', 'playing') and state_attr('media_player.radio_badezimmer', 'volume_level') == None)
            or (is_state('media_player.radio_kueche', 'playing') and state_attr('media_player.radio_kueche', 'volume_level') == None)
            or (is_state('media_player.radio_schlafzimmer', 'playing') and state_attr('media_player.radio_schlafzimmer', 'volume_level') == None)
            or (is_state('media_player.radio_balkon', 'playing') and state_attr('media_player.radio_balkon', 'volume_level') == None)
          %}
            True
          {% else %}
            False
          {% endif %}
        icon_template: >-
          {% if (is_state('media_player.radio_wohnzimmer', 'playing') and state_attr('media_player.radio_wohnzimmer', 'volume_level') == None)
            or (is_state('media_player.radio_arbeitszimmer', 'playing') and state_attr('media_player.radio_arbeitszimmer', 'volume_level') == None)
            or (is_state('media_player.radio_badezimmer', 'playing') and state_attr('media_player.radio_badezimmer', 'volume_level') == None)
            or (is_state('media_player.radio_kueche', 'playing') and state_attr('media_player.radio_kueche', 'volume_level') == None)
            or (is_state('media_player.radio_schlafzimmer', 'playing') and state_attr('media_player.radio_schlafzimmer', 'volume_level') == None)
            or (is_state('media_player.radio_balkon', 'playing') and state_attr('media_player.radio_balkon', 'volume_level') == None)
          %}
            mdi:volume-off
          {% else %}
            mdi:volume-high
          {% endif %}      
        turn_on:
          service: script.radios_lautlos
        turn_off:
          service: script.radios_laut

input_boolean:
  radio_balkon_aktiv:
    name: Radio Balkon aktiv
    
  radio_balkon_bewegungsmelder_deaktiviert:
    name: Radio Balkon Bewegungsmelder deaktiviert  
    icon: mdi:voice-off
    
  tuer_musik_pausiert:
    name: Musik pausiert

binary_sensor:
  - platform: template
    sensors:         
      radio_badezimmer_inaktiv:
        friendly_name: Radio Badezimmer inaktiv
        device_class: motion
        value_template: >-
          {% if is_state('entity_controller.radio_badezimmer_bewegung', 'active_timer') %}
            false
          {% elif is_state('media_player.radio_badezimmer', 'playing') %}
            true
          {% elif is_state('switch.wohnzimmer_radio', 'on')
            or is_state('switch.balkon_radio', 'on')
            or is_state('switch.schlafzimmer_radio', 'on')
            or is_state('switch.flur_radio', 'on')
            or is_state('switch.arbeitszimmer_radio', 'on')
            or is_state('switch.kuche_radio', 'on')
          %}
            true
          {% else %}
            false
          {% endif %}

entity_controller:
  radio_badezimmer:
    friendly_name: "Radio Badezimmer - Bewegung"
    sensor: binary_sensor.bewegungsmelder_badezimmer
    sensor_type_duration: True
    entity: switch.wiedergabe_badezimmer
    delay: 180
    overrides:
      - binary_sensor.radio_badezimmer_inaktiv      
          
script:
  sync_radios:
    alias: Radios synchronisieren
    sequence:
      - condition: state
        entity_id: media_player.radio_wohnzimmer
        state: 'playing'
      - service: media_player.turn_off
        entity_id: media_player.radio_wohnzimmer
      - delay: '00:00:02'
      - service: media_player.turn_on
        entity_id: media_player.radio_wohnzimmer

  radios_einschalten:
    alias: Radios einschalten
    sequence:
      - service: switch.turn_on
        entity_id: switch.wohnzimmer_radio, switch.balkon_radio, switch.flur_radio, switch.badezimmer_radio, switch.kuche_radio, switch.schlafzimmer_radio, switch.arbeitszimmer_radio

  radios_ausschalten:
    alias: Radios ausschalten
    sequence:
      - service: script.radios_pausieren
      - service: switch.turn_off
        entity_id: switch.wohnzimmer_radio, switch.balkon_radio, switch.flur_radio, switch.badezimmer_radio, switch.kuche_radio, switch.schlafzimmer_radio, switch.arbeitszimmer_radio
    
  radios_starten:
    alias: Radios abspielen
    sequence:
      - service: media_player.media_play
        entity_id: media_player.radio_kueche, media_player.radio_badezimmer, media_player.radio_wohnzimmer, media_player.radio_schlafzimmer, media_player.radio_arbeitszimmer, media_player.radio_flur

  radios_pausieren:
      alias: Radios pausieren
      sequence:
        - service: media_player.media_pause
          entity_id: media_player.radio_kueche, media_player.radio_badezimmer, media_player.radio_wohnzimmer, media_player.radio_schlafzimmer, media_player.radio_arbeitszimmer, media_player.radio_flur

  radios_lautlos:
      alias: Radios lautlos
      sequence:
        - service: media_player.volume_set          
          data:
            entity_id: media_player.radio_kueche, media_player.radio_badezimmer, media_player.radio_wohnzimmer, media_player.radio_schlafzimmer, media_player.radio_arbeitszimmer, media_player.radio_flur, media_player.radio_balkon
            volume_level: 0
          
  radios_laut:
      alias: Radios laut
      sequence:
        - service: media_player.volume_set          
          data:
            entity_id: media_player.radio_kueche, media_player.radio_badezimmer, media_player.radio_wohnzimmer, media_player.radio_schlafzimmer, media_player.radio_arbeitszimmer, media_player.radio_flur
            volume_level: 0.4
        - service: media_player.volume_set          
          data:
            entity_id: media_player.radio_balkon
            volume_level: 0.2            

  wohnung_radios_einschalten:
    alias: "Wohnung - Radios einschalten"
    sequence:
      - service: switch.turn_on
        entity_id: switch.badezimmer_radio, switch.wohnzimmer_radio, switch.flur_radio, switch.kuche_radio
      - wait_template: "{{ not is_state('media_player.radio_flur', 'unavailable') }}"
        timeout: '00:02:00'        
      - service: script.radio_playlist_wiedergeben
        data:
          mediaplayer: media_player.radio_flur
          playlist: 'SÃ¼dtirol 1'
      - choose:
          - conditions:
              - "{{ is_state('binary_sensor.home_office_aktiv', 'off') and (homeOfficeHeute is not defined or homeOfficeHeute == False) }}"
              - "{{ bueroHeute is not defined or bueroHeute == False }}"
              - "{{ now().isoweekday() != 7 }}"
              - "{{ (states('sensor.bewegungsmelder_balkon_temperatur') | int) > 5 }}"
              - "{{ now().strftime('%H') | int >= 6 and now().strftime('%H') | int <= 21 }}"
            sequence:            
              - service: switch.turn_on
                entity_id: switch.balkon_radio
      
  radio_playlist_wiedergeben:
    alias: "Radio - Playlist wiedergeben"
    sequence:
      - service: squeezebox.call_method
        data:
          entity_id: "{{ mediaplayer }}"
          command: 'playlist'
          parameters:
            - play
            - "{{ playlist }}"
            
automation:       
  - alias: 'Radio Balkon - Bewegung erkannt'
    id: "radio_balkon_bewegung_erkannt"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_balkon
        to: 'on'
    condition:
      - condition: or
        conditions:
          - condition: time
            after: '08:00'            
            before: '12:00'           
          - condition: time
            after: '15:00'
            before: '22:00'  
      - condition: template
        value_template: '{{ now().isoweekday() != 7 }}'   
      - condition: state
        entity_id: 'switch.wiedergabe_aktiv'
        state: 'on'
      - condition: state
        entity_id: 'media_player.radio_balkon'
        state: 'off'
      - condition: state
        entity_id: 'binary_sensor.balkontuer'
        state: 'on'                
      - condition: state
        entity_id: 'input_boolean.radio_balkon_bewegungsmelder_deaktiviert'
        state: 'off'        
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}'
      - condition: state
        entity_id: 'sensor.telefon'
        state: 'idle'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_on
        data:
          entity_id: media_player.radio_balkon

  - alias: 'Radio Balkon - Keine Bewegung'
    id: "radio_balkon_keine_bewegung"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_wohnzimmer
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.radio_balkon_aktiv
        state: 'on'
        for: "00:00:10"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_off
        data:
          entity_id: media_player.radio_balkon

  - alias: 'Radio Balkon - Starten'
    id: "radio_balkon_starten"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c7:62:ce
          command: click
          args:
            click_type: double 
    condition:
      - condition: state
        entity_id: switch.balkon_radio
        state: 'on'
      - condition: state
        entity_id: 'switch.wiedergabe_aktiv'
        state: 'on'        
      - condition: not
        conditions:
          - condition: state
            entity_id: media_player.radio_balkon
            state: 'playing'                        
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_on
        data:
          entity_id: media_player.radio_balkon
      
  - alias: 'Radio Balkon - Synchronisieren'
    id: "radio_balkon_synchronisieren"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c7:62:ce
          command: click
          args:
            click_type: double 
    condition:
      - condition: state
        entity_id: media_player.radio_balkon
        state: 'playing'
    action:
      - service: script.sync_radios

  - alias: 'Radio Badezimmer - Schlafen'
    id: "radio_badezimmer_schlafen"
    trigger:
      - platform: state
        entity_id: binary_sensor.im_bett
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'on'
      - condition: state
        entity_id: binary_sensor.alarm_aktiv
        state: 'off'        
      - condition: state
        entity_id: switch.badezimmer_radio
        state: 'on'        
    action:
      - service: switch.turn_off
        entity_id: switch.badezimmer_radio     
            
  - alias: 'Radio Badezimmer - SÃ¼dtirol 1'
    id: "radio_badezimmer_suedtirol1"
    trigger:
      - platform: state
        entity_id: media_player.radio_badezimmer
        to: 'playing'
    condition:  
      - "{{ is_state('input_boolean.besuch', 'off') }}"    
      - "{{ is_state('calendar.borussia_dortmund', 'off') }}"
      - "{{ is_state_attr('media_player.radio_badezimmer', 'media_artist', 'Borussia Dortmund') }}"    
    action:
      - service: squeezebox.call_method
        data:
          entity_id: media_player.radio_badezimmer
          command: 'playlist'
          parameters:
            - play
            - 'SÃ¼dtirol 1'  
            
  - alias: 'TÃ¼r - Radios pausieren'
    id: "tuer_radios_pausieren"
    trigger:
      - platform: state
        entity_id: binary_sensor.tuersensor
        to: 'on'
    condition:
      - condition: state
        entity_id: switch.wiedergabe_aktiv
        state: 'on'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}'
      - condition: state
        entity_id: 'sensor.telefon'
        state: 'idle'          
      - condition: state
        entity_id: input_boolean.telefon_musik_pausiert
        state: 'off'    
      - condition: state
        entity_id: input_boolean.tuer_musik_pausiert
        state: 'off'        
      - condition: state
        entity_id: input_boolean.home_office_musik_pausiert
        state: 'off'        
      - condition: template
        value_template: >-
          {% set now = as_timestamp(now(), None) | int %}
          {% set last = as_timestamp(state_attr("automation.alles_ausschalten", "last_triggered"), None) | int %}
          {% set diff = ((now - last) / 60) | int %}

          {{ diff >= 10 }}
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.tuer_musik_pausiert
      - service: switch.turn_on
        entity_id: switch.radios_lautlos
        
  - alias: 'TÃ¼r - Radios starten'
    id: "tuer_radios_starten"
    trigger:
      - platform: state
        entity_id: binary_sensor.tuersensor
        to: 'off'  
    condition:
      - condition: state
        entity_id: input_boolean.tuer_musik_pausiert
        state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.tuer_musik_pausiert
      - service: switch.turn_off
        entity_id: switch.radios_lautlos   
      
homeassistant:
  customize:
    script.sync_radios:
      can_cancel: false
      icon: mdi:sync
    switch.alle_radios:
      icon: mdi:cast-off

    switch.wohnzimmer_radio:
      icon: mdi:radio
    switch.schlafzimmer_radio:
      icon: mdi:radio   
    switch.balkon_radio:
      icon: mdi:radio