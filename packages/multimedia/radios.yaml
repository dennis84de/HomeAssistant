input_boolean:
  radio_balkon_aktiv:
    name: Radio Balkon aktiv
        
  telefon_musik_pausiert:
    name: Musik pausiert     
    
  tuer_musik_pausiert:
    name: Musik pausiert

timer:
  radio_balkon:
    name: Radio Balkon    
    duration: 600
        
template:
  - sensor:
      - name: Radios eingeschaltet
        icon: mdi:cast
        state: >-
          {% set radiosEingeschaltet = expand('group.alle_radios')
              | selectattr('state','eq','on') 
              | map(attribute='name')
              | list
              | length %}    
                
          {{ radiosEingeschaltet }}
          
  - binary_sensor:
      - name: Radio Badezimmer inaktiv
        device_class: motion
        state: >-
          {% if is_state('entity_controller.radio_badezimmer_bewegung', 'active_timer') %}
            false
          {% elif is_state('media_player.radio_badezimmer', 'playing') %}
            true
          {% elif is_state('switch.wohnzimmer_radio', 'on')
            or is_state('switch.balkon_radio', 'on')
            or is_state('switch.schlafzimmer_radio', 'on')
            or is_state('switch.flur_radio', 'on')
            or is_state('switch.arbeitszimmer_radio', 'on')
            or is_state('switch.kueche_radio', 'on')
          %}
            true
          {% else %}
            false
          {% endif %}                   
      
entity_controller:
  radio_badezimmer:
    friendly_name: "Radio Badezimmer - Bewegung"
    sensor: binary_sensor.bewegungsmelder_badezimmer
    sensor_type_duration: True
    entity: switch.wiedergabe_badezimmer
    delay: 180
    overrides:
      - binary_sensor.radio_badezimmer_inaktiv      
     
switch:   
  - platform: template
    switches:
      wiedergabe_badezimmer:
        friendly_name: Wiedergabe Badezimmer
        value_template: "{{ is_state('media_player.radio_badezimmer', 'playing') }}"        
        turn_on:
          - service: media_player.media_play
            data:
              entity_id: media_player.radio_badezimmer
        turn_off:
          - service: media_player.media_pause
            data:
              entity_id: media_player.radio_badezimmer

      wiedergabe_aktiv:
        friendly_name: Wiedergabe aktiv
        value_template: >-
          {% set radiosAktiv = expand('group.radio_mediaplayer')
              | selectattr('state','eq','playing') 
              | map(attribute='name')
              | list
              | length %}    
                
          {{ radiosAktiv | int(0) > 0 }}
        icon_template: >-
          {% set radiosAktiv = expand('group.radio_mediaplayer')
              | selectattr('state','eq','playing') 
              | map(attribute='name')
              | list
              | length %}    
                
          {{ 'mdi:play-circle-outline' if radiosAktiv | int(0) > 0 else 'mdi:pause-circle-outline' }}        
        turn_on:
          service: script.radios_starten
        turn_off:
          service: script.radios_pausieren
              
      radios_lautlos:
        friendly_name: Radios lautlos
        value_template: >-
          {% if (is_state('media_player.radio_wohnzimmer', 'playing') and (state_attr('media_player.radio_wohnzimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_arbeitszimmer', 'playing') and (state_attr('media_player.radio_arbeitszimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_badezimmer', 'playing') and (state_attr('media_player.radio_badezimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_kueche', 'playing') and (state_attr('media_player.radio_kueche', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_schlafzimmer', 'playing') and (state_attr('media_player.radio_schlafzimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_balkon', 'playing') and (state_attr('media_player.radio_balkon', 'volume_level') | float(0)) == 0)
          %}
            True
          {% else %}
            False
          {% endif %}       
        icon_template: >-
          {% if (is_state('media_player.radio_wohnzimmer', 'playing') and (state_attr('media_player.radio_wohnzimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_arbeitszimmer', 'playing') and (state_attr('media_player.radio_arbeitszimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_badezimmer', 'playing') and (state_attr('media_player.radio_badezimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_kueche', 'playing') and (state_attr('media_player.radio_kueche', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_schlafzimmer', 'playing') and (state_attr('media_player.radio_schlafzimmer', 'volume_level') | float(0)) == 0)
            or (is_state('media_player.radio_balkon', 'playing') and (state_attr('media_player.radio_balkon', 'volume_level') | float(0)) == 0)
          %}
            mdi:volume-off
          {% else %}
            mdi:volume-high
          {% endif %}                
        turn_on:
          service: script.radios_lautlos
        turn_off:
          service: script.radios_laut
          
script:
  sync_radios:
    alias: Radios synchronisieren
    sequence:
      - condition: state
        entity_id: media_player.radio_wohnzimmer
        state: 'playing'
      - service: media_player.turn_off
        entity_id: media_player.radio_wohnzimmer
      - delay: '00:00:02'
      - service: media_player.turn_on
        entity_id: media_player.radio_wohnzimmer

  radios_einschalten:
    alias: Radios einschalten
    sequence:
      - service: switch.turn_on
        entity_id: switch.badezimmer_radio, switch.wohnzimmer_radio, switch.flur_radio, switch.kueche_radio          
      - choose:
          - conditions:
              - "{{ radioBalkon is not defined or radioBalkon == True }}"              
              - "{{ now().isoweekday() == 6 or is_state('binary_sensor.arbeitstag', 'on') }}"
              - "{{ (states('sensor.balkon_temperatur') | int(0)) > -5 }}"                
              - "{{ is_state('binary_sensor.nachts', 'off') }}"
            sequence:            
              - service: switch.turn_on
                entity_id: switch.balkon_radio
                
  radios_ausschalten:
    alias: Radios ausschalten
    sequence:         
      - service: script.radios_pausieren 
      - choose:
          - conditions:
              - "{{ badezimmerEingeschaltetLassen is not defined or badezimmerEingeschaltetLassen == False }}"
            sequence:            
              - service: switch.turn_off
                entity_id: group.alle_radios            
        default:
          - service: switch.turn_off
            entity_id: group.radios_ohne_badezimmer        
                
  radios_starten:
    alias: Radios abspielen
    sequence:
      - service: media_player.media_play
        entity_id: group.radio_mediaplayer

  radios_pausieren:
      alias: Radios pausieren
      sequence:
        - service: media_player.media_pause
          entity_id: group.radio_mediaplayer

  radios_lautlos:
      alias: Radios lautlos
      sequence:
        - service: media_player.volume_set          
          data:
            entity_id: group.radio_mediaplayer, media_player.radio_balkon
            volume_level: 0
            
  radios_laut:
      alias: Radios laut
      sequence:   
        - service: media_player.volume_set          
          data:
            entity_id: group.radio_mediaplayer
            volume_level: 0.4 
        - service: media_player.volume_set          
          data:
            entity_id: media_player.radio_balkon
            volume_level: 0.2             
            
automation:       
  - alias: 'Radio Balkon - Bewegung erkannt'
    id: "radio_balkon_bewegung_erkannt"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_balkon
        to: 'on'
    condition:     
      - "{{ now().isoweekday() != 7 }}"
      - "{{ is_state('binary_sensor.radio_balkon_starten', 'on') }}"
      - "{{ is_state('switch.wiedergabe_aktiv', 'on') }}"
      - "{{ is_state('media_player.radio_balkon', 'off') }}"
      - "{{ is_state('binary_sensor.balkontuer', 'on') }}"
      - "{{ is_state('sensor.handy', 'idle') }}"
      - "{{ is_state('sensor.telefon', 'idle') }}"
      - "{{ is_state('binary_sensor.besuch', 'off') }}"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_on
        data:
          entity_id: media_player.radio_balkon
      - if: "{{ is_state('binary_sensor.besuch', 'on') or is_state('binary_sensor.nicht_allein_zu_hause', 'on') }}"
        then:
          - service: timer.start
            entity_id: timer.radio_balkon          

  - alias: 'Radio Balkon - Keine Bewegung'
    id: "radio_balkon_keine_bewegung"
    trigger:
      - id: bewegungsmelder
        platform: state
        entity_id: binary_sensor.bewegungsmelder_wohnzimmer
        to: 'on'
      - id: balkontuer
        platform: state
        entity_id: binary_sensor.balkontuer
        to: 'off'    
      - id: timer
        platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.radio_balkon              
    condition:
      - condition: state
        entity_id: input_boolean.radio_balkon_aktiv
        state: 'on'
        for: "00:00:10"  
      - condition: or
        conditions:     
          - "{{ trigger.id == 'timer' }}"
          - "{{ trigger.id == 'balkontuer' and (is_state('binary_sensor.besuch', 'on') or is_state('binary_sensor.nicht_allein_zu_hause', 'on')) }}"
          - "{{ trigger.id == 'bewegungsmelder' and is_state('binary_sensor.besuch', 'off') and is_state('binary_sensor.allein_zu_hause', 'on') }}"        
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_off
        data:
          entity_id: media_player.radio_balkon
      - if: "{{ not is_state('timer.radio_balkon', 'idle') }}"
        then:
          - service: timer.cancel
            entity_id: timer.radio_balkon                

  - alias: 'Radio Balkon - Starten'
    id: "radio_balkon_starten"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c7:62:ce
          command: click
          args:
            click_type: double 
    condition:
      - "{{ is_state('switch.balkon_radio', 'on') }}"
      - "{{ is_state('switch.wiedergabe_aktiv', 'on') }}"
      - "{{ not is_state('media_player.radio_balkon', 'playing') }}"                    
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.radio_balkon_aktiv
      - service: media_player.turn_on
        data:
          entity_id: media_player.radio_balkon
      
  - alias: 'Radio Balkon - Synchronisieren'
    id: "radio_balkon_synchronisieren"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c7:62:ce
          command: click
          args:
            click_type: double 
    condition:
      - condition: state
        entity_id: media_player.radio_balkon
        state: 'playing'
    action:
      - service: script.sync_radios
            
  - alias: 'Radio Badezimmer - Pausieren'
    id: "radio_badezimmer_pausieren"
    trigger:
      - platform: state
        entity_id: media_player.kodi_wohnzimmer
        to: 'playing'
      - platform: state
        entity_id: media_player.computer
        to: 'playing'  
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_wohnzimmer
        to: 'on'          
    condition:
      - "{{ is_state('sensor.radios_eingeschaltet', '1') }}"
      - "{{ is_state('media_player.radio_badezimmer', 'playing') }}"      
      - "{{ is_state('binary_sensor.besuch', 'off') }}"
      - "{{ is_state('sensor.personen_zu_hause', '1') }}"
    action:
      - service: media_player.media_pause
        entity_id: media_player.radio_badezimmer       
      
  - alias: 'Tür - Radios pausieren'
    id: "tuer_radios_pausieren"
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnungstuer
        to: 'on'
    condition:
      - "{{ is_state('switch.wiedergabe_aktiv', 'on') }}"
      - "{{ is_state('sensor.handy', 'idle') }}"
      - "{{ is_state('sensor.telefon', 'idle') }}"
      - "{{ is_state('input_boolean.telefon_musik_pausiert', 'off') }}"
      - "{{ is_state('input_boolean.tuer_musik_pausiert', 'off') }}"
      - "{{ is_state('input_boolean.home_office_musik_pausiert', 'off') }}"       
      - "{{ is_state('alarm_control_panel.alarmo', 'disarmed') }}"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.tuer_musik_pausiert
      - service: switch.turn_on
        entity_id: switch.radios_lautlos
        
  - alias: 'Tür - Radios starten'
    id: "tuer_radios_starten"
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnungstuer
        to: 'off'  
    condition:
      - condition: state
        entity_id: input_boolean.tuer_musik_pausiert
        state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.tuer_musik_pausiert
      - service: switch.turn_off
        entity_id: switch.radios_lautlos   
      
  - alias: 'Wiedergabe Radios'
    id: "wiedergabe_radios"
    trigger:
      - id: schalter_wohnzimmer
        platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c8:c4:8b
          command: click
          args:
            click_type: single  
    condition:      
      - "{{ states('sensor.radios_eingeschaltet') | int(0) > 1 }}"
      - "{{ is_state('switch.radios_lautlos', 'off') }}"
    action:
      - service: switch.toggle
        entity_id: switch.wiedergabe_aktiv  
        
homeassistant:
  customize:
    script.sync_radios:
      icon: mdi:sync

  customize_glob:
    switch.*_radio:
      icon: mdi:radio      