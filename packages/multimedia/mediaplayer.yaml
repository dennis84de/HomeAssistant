input_boolean:
  uhr_einschalten:
    name: Uhr einschalten
    icon: mdi:alarm-multiple

media_player:
  - platform: mpd
    host: !secret homeassistant_host
    name: Benachrichtigungen

automation:
  - alias: "Uhr - Glocke starten"
    id: "uhr_glocke_starten"
    trigger:
      - platform: time_pattern
        minutes: 30
      - platform: time_pattern
        minutes: 00
    condition:
      - condition: time
        after: '07:30'
        before: '00:30'
      - condition: state
        entity_id: input_boolean.uhr_einschalten
        state: 'on'
      - condition: state
        entity_id: input_boolean.baden_aktiv
        state: 'off'
      - condition: state
        entity_id: calendar.borussia_dortmund
        state: 'off'
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'on'
      - condition: state
        entity_id: binary_sensor.home_office_aktiv
        state: 'off'
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'off'     
      - condition: state
        entity_id: binary_sensor.youtube_wohnzimmer_aktiv
        state: 'off'     
      - condition: state
        entity_id: calendar.formel1_rennen
        state: 'off'
      - condition: state
        entity_id: calendar.formel1_qualifikation
        state: 'off'        
      - condition: template
        value_template: '{{ is_state("media_player.kodi_wohnzimmer", "playing") == False }}'
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.benachrichtigungen
          media_content_id: >-
            {% if now().strftime("%M")|int == 30 %}
              uhr/GrandFatherChime_half.mp3
            {% else %}
              uhr/GrandFatherChime_{{now().strftime("%I")}}.mp3
            {% endif %}
          media_content_type: music

  - alias: 'Uhr - Glocke abbrechen'
    id: "uhr_glocke_abbrechen"
    trigger:
      - platform: state
        entity_id: input_boolean.uhr_einschalten
        to: 'off'
      - platform: state
        entity_id: sensor.cube_bewegung    
    condition:
      - condition: or
        conditions:
          - condition: template
            value_template: '{{ True if "double_tap" in trigger.to_state.state else False }}' 
          - condition: template
            value_template: '{{ True if trigger.entity_id == "input_boolean.uhr_einschalten" else False }}'               
      - condition: state
        entity_id: media_player.benachrichtigungen
        state: 'playing'
    action:
      - service: media_player.media_pause
        entity_id:
          - media_player.benachrichtigungen
      - service: input_boolean.turn_on
        entity_id: input_boolean.uhr_einschalten

  - alias: "BVB - Torhymne"
    id: "bvb_torhymne"
    trigger:
      - platform: state
        entity_id: sensor.cube_bewegung
      - platform: state
        entity_id: binary_sensor.schalter_balkon
        to: 'off'             
    condition:
      - condition: template
        value_template: >-
          {% if trigger.entity_id == 'binary_sensor.schalter_balkon' %}
            True
          {% else %}
            {{ True if "drop" in trigger.to_state.state else False }}
          {% endif %}       
      - condition: state
        entity_id: calendar.borussia_dortmund
        state: 'on'
      - condition: template
        value_template: '{{ True if not "(T.B.A.)" in state_attr("calendar.borussia_dortmund", "message") else False }}'
    action:
      - service: media_player.play_media
        data_template:
          entity_id: media_player.benachrichtigungen
          media_content_id: sounds/torhymne.mp3
          media_content_type: music

  - alias: "BVB - Musik starten"
    id: "bvb_musik_starten"
    trigger:
      - platform: state
        entity_id: sensor.cube_bewegung
    condition:  
      - condition: template
        value_template: '{{ True if "double_tap" in trigger.to_state.state else False }}'       
      - condition: state
        entity_id: calendar.borussia_dortmund
        state: 'on'
      - condition: template
        value_template: '{{ True if not "(T.B.A.)" in state_attr("calendar.borussia_dortmund", "message") else False }}'        
      - condition: not
        conditions:
          - condition: state
            entity_id: media_player.benachrichtigungen
            state: 'playing'
    action:
      - service: media_player.play_media
        data_template:
          entity_id: media_player.benachrichtigungen
          media_content_id: sounds/heja_bvb.mp3
          media_content_type: music

  - alias: "BVB - Musik stoppen"
    id: "bvb_musik_stoppen"
    trigger:
      - platform: state
        entity_id: sensor.cube_bewegung
    condition:     
      - condition: template
        value_template: '{{ True if "double_tap" in trigger.to_state.state else False }}'         
      - condition: state
        entity_id: calendar.borussia_dortmund
        state: 'on'
      - condition: template
        value_template: '{{ True if "(T.B.A.)" in state_attr("calendar.borussia_dortmund", "message") else False }}'
      - condition: state
        entity_id: media_player.benachrichtigungen
        state: 'playing'
    action:
      - service: media_player.media_pause
        entity_id: media_player.benachrichtigungen
                
  - alias: "Schlafzimmer - Tablet Wiedergabe"
    id: "schlafzimmer_tablet_wiedergabe"
    trigger:
      - platform: state        
        entity_id: binary_sensor.schalter_schlafzimmer
        to: 'on'
      - platform: state        
        entity_id: sensor.schalter_schlafzimmer
        to: '2'   
      - platform: state        
        entity_id: binary_sensor.im_bett
        to: 'on'   
        for:
          seconds: 1
    condition:
      - condition: state        
        entity_id: binary_sensor.im_bett
        state: 'on'   
        for:
          seconds: 1
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'on'      
      - condition: or
        conditions:
        - condition: state
          entity_id: media_player.tablet_schlafzimmer
          state: 'playing'
        - condition: state
          entity_id: media_player.tablet_schlafzimmer
          state: 'paused'
    action:
      - service: media_player.media_play_pause
        entity_id: media_player.tablet_schlafzimmer         
        
  - alias: "Schlafzimmer - Tablet pausieren"
    id: "schlafzimmer_tablet_pausieren"
    trigger:
      platform: state
      entity_id: binary_sensor.bewegungsmelder_bett
      to: 'on'
    condition:
      - condition: state
        entity_id: media_player.tablet_schlafzimmer
        state: 'playing'
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'on'   
    action:
      - service: media_player.media_pause
        entity_id: media_player.tablet_schlafzimmer                            