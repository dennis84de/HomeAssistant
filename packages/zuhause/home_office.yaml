timer:
  home_office_ende:
    name: "Home Office beenden"
    duration: 7
             
  headset_aufladen:
    name: "Headset aufladen"
    duration: "01:00:00"
    
input_boolean:
  home_office:
    name: Home Office    
  
  home_office_aktiv:
    name: Home Office aktiv
    
  home_office_musik_pausiert:
    name: Musik pausiert    

  home_office_pause:
    name: Home Office Pause
    icon: mdi:bell-sleep
    
input_select:
  computer_arbeit_ausschalten:
    name: Computer ausschalten
    icon: mdi:power-settings
    options:      
      - Ruhezustand
      - Herunterfahren
      - Nichts unternehmen
    
input_number:
  home_office_heute_gearbeitet:
    name: Home Office Heute gearbeitet
    min: 0
    max: 540

input_text:
  teams_status:
    name: Microsoft Teams Status
    icon: mdi:microsoft-teams
  teams_activity:
    name: Microsoft Teams Aktivität
    icon: mdi:phone-off
     
sensor:
  - platform: template
    sensors:
      teams_status:
        friendly_name: "Microsoft Teams Status"
        value_template: "{{states('input_text.teams_status')}}"
        icon_template: "{{state_attr('input_text.teams_status','icon')}}"
        unique_id: sensor.teams_status
      teams_activity:
        friendly_name: "Microsoft Teams Aktivität"
        value_template: "{{states('input_text.teams_activity')}}"
        unique_id: sensor.teams_activity
            
binary_sensor:
  - platform: template
    sensors:
      home_office_heute:
        friendly_name: 'Home Office heute'
        icon_template: mdi:home-city
        value_template: >-
          {% set istHomeOffice = is_state('input_boolean.home_office', 'on') %}
          {% set istArbeitstag = is_state('binary_sensor.arbeitstag', 'on') %}
          {% set keinUrlaub = is_state('calendar.urlaub', 'off') %}
          {% set nichtKrank = is_state('calendar.arbeit_krank', 'off') %}

          {{ True if (istHomeOffice and istArbeitstag and keinUrlaub and nichtKrank) else False }}
          
      home_office_aktiv:
        friendly_name: 'Home Office aktiv'
        icon_template: mdi:home-city
        value_template: "{{ is_state('input_boolean.home_office_aktiv', 'on') }}"

      home_office_pause:
        friendly_name: 'Home Office Pause'
        icon_template: mdi:bell-sleep
        value_template: "{{ is_state('input_boolean.home_office_pause', 'on') }}"
        
switch:
  - platform: template
    switches:
      computer_arbeit:
        friendly_name: Computer Arbeit        
        value_template: "{{ is_state('binary_sensor.computer_arbeit_ping', 'on') }}"
        icon_template: mdi:desktop-classic
        turn_on:
          service: wake_on_lan.send_magic_packet
          data:
            mac: !secret computer_arbeit_mac
            broadcast_address: !secret fritzbox_broadcast
            broadcast_port: 9
        turn_off:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: input_select.computer_arbeit_ausschalten
                    state: 'Ruhezustand'
                sequence:
                  - service: button.press
                    entity_id: button.computer_arbeit_ruhezustand
              - conditions:
                  - condition: state
                    entity_id: input_select.computer_arbeit_ausschalten
                    state: 'Herunterfahren'
                sequence:
                  - service: button.press
                    entity_id: button.computer_arbeit_herunterfahren

script:
  home_office_start:
    alias: 'Home Office - Start'
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.home_office_aktiv
      - service: switch.turn_off
        entity_id: switch.computer
      - if: "{{ is_state('binary_sensor.allein_zu_hause', 'on') }}"
        then:
          - service: switch.turn_off
            entity_id: switch.watchtv_wohnzimmer          
      - service: switch.turn_on
        entity_id: switch.arbeitszimmer_radio, switch.computer_arbeit, switch.arbeitszimmer_monitore
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: binary_sensor.arbeitstag_morgen
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.urlaub_morgen
                    state: 'on'                       
            sequence:
              - service: input_select.select_option
                data:
                  entity_id: input_select.computer_arbeit_ausschalten  
                  option: 'Herunterfahren'     
        default:
          - service: input_select.select_option
            data:
              entity_id: input_select.computer_arbeit_ausschalten  
              option: 'Ruhezustand'      
      - service: automation.turn_on
        target:
          entity_id: automation.home_office_countdown_starten              
          
  home_office_ende:
    alias: 'Home Office - Ende'
    sequence:
      - service: input_boolean.turn_off
        entity_id: input_boolean.home_office_aktiv, input_boolean.home_office_musik_pausiert, input_boolean.home_office_pause
      - service: switch.turn_off
        entity_id: switch.computer_arbeit
      - service: input_number.set_value        
        data:
          entity_id: input_number.home_office_heute_gearbeitet
          value: 0             
      - if: "{{ is_state('input_select.computer_arbeit_ausschalten', 'Herunterfahren') }}"
        then:          
          - service: switch.turn_on
            entity_id: switch.arbeitszimmer_ladegerat
          - service: timer.start
            entity_id: timer.headset_aufladen
      - service: input_select.select_option
        data:
          entity_id: input_select.computer_arbeit_ausschalten  
          option: 'Ruhezustand'          
      - service: switch.turn_on
        entity_id: switch.computer          
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.sonne_tagsueber
                state: 'off'
            sequence:
              - service: light.turn_on
                entity_id: light.wohnzimmer_schrank           
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.balkon_temperatur
                above: -5
              - "{{ states('sensor.radios_eingeschaltet') | int() > 1 }}"
            sequence:
              - service: switch.turn_on
                entity_id: switch.balkon_radio        
      - choose:
          - conditions:
              - condition: state
                entity_id: climate.heizung_arbeitszimmer
                state: 'heat'
            sequence:              
              - service: climate.set_hvac_mode
                data:
                  entity_id: climate.heizung_arbeitszimmer
                  hvac_mode: 'off'                    
        
automation:
  - alias: "Home Office - Start"
    id: "home_office_start"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:13:45:68
          command: attribute_updated
          args:
            attribute_id: 32768
            attribute_name: Unknown     
            value: 2    
    condition:
      - condition: or
        conditions:
          - "{{ is_state('binary_sensor.home_office_heute', 'on') }}"
          - "{{ is_state('binary_sensor.buero_heute', 'on') }}"
      - "{{ is_state('binary_sensor.home_office_aktiv', 'off') }}" 
    action:
      - service: automation.turn_off
        target:
          entity_id: automation.home_office_countdown_starten         
      - service: script.home_office_start

  - alias: "Home Office - Countdown starten"
    id: "home_office_countdown_starten"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:13:45:68
          command: attribute_updated
          args:
            attribute_id: 32768
            attribute_name: Unknown     
            value: 2           
    condition:
      - condition: state
        entity_id: binary_sensor.home_office_aktiv
        state: 'on'
      - condition: state
        entity_id: timer.home_office_ende
        state: 'idle'
    action:
      - service: !secret tts_service
        data:
          message: "Der Computer wird Arbeitszimmer wird gleich ausgeschaltet."
      - delay: '00:00:04'
      - service: timer.start
        entity_id: timer.home_office_ende
      - service: media_player.play_media
        data:
          entity_id: media_player.home_assistant
          media_content_id: http://192.168.2.75:8123/local/sounds/countdown_5.mp3
          media_content_type: music

  - alias: "Home Office - Countdown abbrechen"
    id: "home_office_countdown_abbrechen"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:13:45:68
          command: attribute_updated
          args:
            attribute_id: 0
            attribute_name: on_off     
            value: 1       
    condition:
      - condition: state
        entity_id: timer.home_office_ende
        state: 'active'
    action:
      - service: media_player.media_pause
        entity_id: media_player.home_assistant
      - service: !secret tts_service
        data:
          message: "Der Vorgang wurde abgebrochen."
      - service: timer.cancel
        entity_id: timer.home_office_ende

  - alias: "Home Office - Ende"
    id: "home_office_ende"
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.home_office_ende
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_select.computer_arbeit_ausschalten
                state: 'Herunterfahren'
            sequence:
              - service: !secret tts_service
                data:
                  message: "Der Computer im Arbeitszimmer wird jetzt heruntergefahren."
        default:      
          - service: !secret tts_service
            data:
              message: "Der Computer im Arbeitszimmer wird jetzt ausgeschaltet."
      - delay: '00:00:02'
      - service: script.home_office_ende

  - alias: "Home Office - Computer eingeschaltet"
    id: "home_office_computer_eingeschaltet"
    trigger:
      - platform: state
        entity_id: switch.computer_arbeit
        to: 'on'
        for: '00:05:00'
    condition:       
      - condition: state
        entity_id: binary_sensor.home_office_aktiv
        state: 'off'        
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.schlafen_aktiv
                state: 'on'                
            sequence:
              - service: switch.turn_off
                entity_id: switch.computer_arbeit, switch.arbeitszimmer_monitore
          - conditions:
              - condition: state
                entity_id: person.dennis
                state: 'off'                
            sequence:
                  - service: notify.telegram
                    data:                      
                      message: 'Der Computer im Arbeitszimmer wurde eingeschaltet und wird jetzt heruntergefahren.'
                  - service: switch.turn_off
                    entity_id: switch.computer_arbeit, switch.arbeitszimmer_monitore                  
        default:      
          - service: !secret tts_service
            data:          
              message: "Der Computer im Arbeitszimmer wurde eingeschaltet."
     
  - alias: "Home Office - Headset ausgeschaltet"
    id: "home_office_headset_ausgeschaltet"
    trigger:
      - id: home_office
        platform: state
        entity_id: binary_sensor.home_office_aktiv
        to: 'on'
        for: '00:05:00'
      - id: bewegungsmelder
        platform: state
        entity_id: binary_sensor.bewegungsmelder_arbeitszimmer
        to: 'on' 
    condition:
      - "{{ is_state('binary_sensor.computer_arbeit_ping', 'on') }}"
      - "{{ is_state('binary_sensor.home_office_aktiv', 'on') }}"
      - "{{ is_state('sensor.letzte_bewegung', 'Arbeitszimmer') or trigger.id == 'bewegungsmelder'}}"
      - condition: template
        value_template: >-
          {% if is_state('sensor.computer_arbeit_bluetooth', 'unavailable') or states('sensor.computer_arbeit_bluetooth') | int(0) == 0 %}
            False
          {% elif states.sensor.computer_arbeit_bluetooth.attributes.BluetoothDevices | length == 0 %}
            False
          {% else %}
            {{ not states.sensor.computer_arbeit_bluetooth.attributes.BluetoothDevices[0]['Connected'] }}
          {% endif %}   
    action:
      - service: notify.laptop
        data:   
          title: 'Headset ausgeschaltet'
          message: 'Das Headaset ist noch ausgeschaltet.'
      
  - alias: "Telegram - Computer Arbeitszimmer ausschalten"
    id: "telegram_computer_arbeitszimmer_ausschalten"
    trigger:
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/computer_arbeitszimmer_ausschalten'
    action:
      - service: switch.turn_off
        entity_id: switch.computer_arbeit, switch.arbeitszimmer_monitore
      - service: telegram_bot.send_message
        data:
          target: '{{ trigger.event.data.chat_id }}'
          message: "Der Computer im Arbeitszimmer wird ausgeschaltet."         
               
  - alias: "Home Office - Status geändert"
    id: "home_office_status_geaendert"
    trigger:
      - platform: state
        entity_id: calendar.arbeit_buero
        to: 'on'
      - platform: state
        entity_id: calendar.arbeit_buero
        to: 'off'        
    action:
      - choose:
          - conditions:
              - "{{ True if trigger.to_state.state == 'on' else False }}"
            sequence:
              - service: input_boolean.turn_off
                entity_id: input_boolean.home_office
        default:
          - service: input_boolean.turn_on
            entity_id: input_boolean.home_office
      
  - alias: "Home Office - Telefon aktiv"
    id: "home_office_telefon_aktiv"
    trigger:
      - platform: state
        entity_id: binary_sensor.computer_arbeit_mikrofon        
        to: 'on'
    condition:       
      - condition: state
        entity_id: input_boolean.home_office_musik_pausiert
        state: 'off'
      - condition: state
        entity_id: binary_sensor.home_office_aktiv
        state: 'on'        
    action:    
      - service: input_boolean.turn_on
        entity_id: input_boolean.home_office_musik_pausiert
      - service: switch.turn_on
        entity_id: switch.radios_lautlos
                  
  - alias: "Home Office - Telefon inaktiv"
    id: "home_office_telefon_inaktiv"
    trigger:
      - platform: state
        entity_id: binary_sensor.computer_arbeit_mikrofon
        from: 'on'
        to: 'off'
    condition:
      - condition: state
        entity_id: input_boolean.home_office_musik_pausiert
        state: 'on'
    action:                 
      - service: input_boolean.turn_off
        entity_id: input_boolean.home_office_musik_pausiert
      - service: switch.turn_off
        entity_id: switch.radios_lautlos                      
     
  - alias: "Home Office - Radios Schalter"
    id: "home_office_radios_schalter"
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:13:45:68
          command: attribute_updated
          args:
            attribute_id: 0
            attribute_name: on_off     
            value: 1            
    condition:       
      - condition: state
        entity_id: binary_sensor.home_office_aktiv
        state: 'on'        
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.home_office_musik_pausiert
                state: 'on'            
            sequence:
              - service: input_boolean.turn_off
                entity_id: input_boolean.home_office_musik_pausiert
              - service: switch.turn_off
                entity_id: switch.radios_lautlos       
        default:
          - service: input_boolean.turn_on
            entity_id: input_boolean.home_office_musik_pausiert
          - service: switch.turn_on
            entity_id: switch.radios_lautlos                
        
  - alias: "Home Office - Pause"
    id: "home_office_pause"    
    trigger:
      - platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:01:10:0d:7a
          command: flip      
    condition:           
      - condition: state
        entity_id: binary_sensor.home_office_aktiv
        state: 'on'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.home_office_pause
                state: 'off'     
            sequence:
              - service: input_boolean.turn_on
                entity_id: input_boolean.home_office_pause                
        default:          
          - service: input_boolean.turn_off
            entity_id: input_boolean.home_office_pause
                                
  - alias: "Home Office - Headset aufgeladen"
    id: "home_office_headset_aufgeladen"    
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.headset_aufladen    
    condition:           
      - "{{ is_state('switch.arbeitszimmer_ladegerat', 'on') }}"      
    action:
      - service: switch.turn_off
        entity_id: switch.arbeitszimmer_ladegerat
        
homeassistant:
  customize:
    switch.arbeitszimmer_monitore:
      icon: mdi:monitor        