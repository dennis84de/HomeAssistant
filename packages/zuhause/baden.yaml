input_boolean:
  baden_aktiv:
    name: "Baden aktiv"
        
template:
  - binary_sensor:       
      - name: "Baden aktiv"
        unique_id: baden_aktiv        
        state: "{{ is_state('input_boolean.baden_aktiv', 'on') }}"   
        
automation:
  - alias: "Baden - Starten"
    id: "baden_starten"  
    trigger:
      - id: schalter_badezimmer
        platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:e9:58:3a
          command: click
          args:
            click_type: single           
    condition:
      - "{{ is_state('binary_sensor.besuch', 'off') }}"
      - "{{ is_state('binary_sensor.baden_aktiv', 'off') }}"
      - "{{ is_state('binary_sensor.schlafen_aktiv', 'off') }}"        
    action:
      - service: !secret tts_service
        data:
          echo: "badezimmer"
          message: "Alle Geräte werden ausgeschaltet. Viel Spaß beim Baden."
      - parallel:           
          - service: entity_controller.enable_stay_mode
            entity_id: entity_controller.bewegung_badezimmer
          - service: light.turn_on
            entity_id: light.badezimmerschrank        
          - service: input_boolean.turn_on
            entity_id: input_boolean.baden_aktiv
          - service: switch.turn_off
            entity_id: switch.watchtv_wohnzimmer, switch.computer, switch.monitor
          - service: script.radios_ausschalten
          - service: homeassistant.turn_off
            entity_id: group.licht_baden
        
  - alias: "Baden - Beenden"
    id: "baden_beenden"
    trigger:
      - id: schalter_badezimmer
        platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:e9:58:3a
          command: click
          args:
            click_type: single    
    condition:
      - "{{ is_state('binary_sensor.baden_aktiv', 'on') }}"    
    action:        
      - service: !secret tts_service
        data:
          echo: "badezimmer"
          message: "Alle Geräte werden wieder eingeschaltet."     
      - parallel:           
          - service: input_boolean.turn_off
            entity_id: input_boolean.baden_aktiv
          - service: entity_controller.disable_stay_mode
            entity_id: entity_controller.bewegung_badezimmer       
          - service: light.turn_off
            entity_id: light.badezimmerschrank
          - service: switch.turn_on
            entity_id: switch.computer, switch.monitor  
          - choose:
              conditions:
                - condition: state
                  entity_id: binary_sensor.sonne_tagsueber
                  state: 'off'
              sequence:
                - service: light.turn_on
                  entity_id: light.wohnzimmer_schrank        
          - choose:
              conditions:
                - "{{ is_state('binary_sensor.nachts', 'off') }}"
              sequence:
                - service: script.radios_einschalten
            default:
              - service: switch.turn_on
                entity_id: switch.watchtv_wohnzimmer, switch.badezimmer_radio       
              - wait_template: "{{ is_state('media_player.radio_badezimmer', 'playing') }}"
              - service: media_player.media_pause
                entity_id: media_player.radio_badezimmer
