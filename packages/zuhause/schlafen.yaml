input_boolean:
  timer_schlafzimmer_aktiv:
    name: Sleeptimer aktiv    
    icon: mdi:timer-off

  schlafen_einschalten_aktiv:
    name: "Schlafen einschalten aktiv"

  schlafen_aktiv:
    name: Schlafen    

  aufstehen_aktiviert:
    name: Aufstehen aktiviert
    
  schlafen_fernseher_einschalten:
    name: Fernseher einschalten    
    icon: mdi:television

input_datetime:
  schlafen_uhrzeit:
    name: Schlafen Uhrzeit   
    has_time: true
    has_date: true
    
input_select:
  timer_schlafzimmer_dauer:
    name: Timer Schlafzimmer
    options:
      - 10
      - 30
      - 60
      - 70
      - 90
      - 120    
    icon: mdi:clock-end

timer:
  sleeptimer:
    name: Sleeptimer
    icon: mdi:filmstrip-off
    duration: 4200

  schlafen_einschalten:
    name: "Schlafen einschalten"
    duration: 8

binary_sensor:
  - platform: template
    sensors:
      im_bett:
        friendly_name: "Im Bett"
        value_template: >-
          {{not is_state("binary_sensor.bett",'on')}}
        device_class: vibration
        delay_off: 2
        icon_template: >-
            mdi:bed-king    
            
      schlafen_aktiv:
        friendly_name: Schlafen aktiv
        value_template: "{{ is_state('input_boolean.schlafen_aktiv', 'on') }}"
        icon_template: mdi:sleep
        availability_template: "{{ states('input_boolean.schlafen_aktiv') not in ['unknown', 'unavailable'] }}"
          
      schlafen_inaktiv:
        friendly_name: Schlafen inaktiv
        value_template: "{{ is_state('binary_sensor.schlafen_aktiv', 'off') }}"
        
sensor:
  - platform: template
    sensors:
      timer_schlafzimmer_zeit:
        friendly_name: Fernseher ausschalten
        icon_template: mdi:filmstrip-off
        unit_of_measurement: 'Minuten'
        value_template: >-
          {%- if is_state('input_boolean.timer_schlafzimmer_aktiv', 'on') %}
            {% set time = states('sensor.time') %}
            {% set now = as_timestamp(now()) | int %}
            {% set last = as_timestamp(state_attr('automation.sleeptimer_starten', 'last_triggered')) | int %}              
            {% set duration = states('input_select.timer_schlafzimmer_dauer') | int %}
            {% set diff = (duration - ((now - last) / 60)) | int %}

            {% if diff < 0 %}
              {{ duration }}
            {% else %}
              {{ diff }}
            {% endif %}
          {% else %}
              -
          {%- endif %}

      schlafen_letzte_uhrzeit:
        friendly_name: Schlafen Letzte Uhrzeit       
        value_template: "{{ '%02d' % (state_attr('input_datetime.schlafen_uhrzeit', 'hour') | int) ~ ':' ~ '%02d' % (state_attr('input_datetime.schlafen_uhrzeit', 'minute') | int) }}"
        icon_template: mdi:av-timer
        unit_of_measurement: 'Uhr'

script:
  schlafen_gehen:
    alias: Schlafen gehen
    sequence:
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Alle Geräte werden jetzt ausgeschaltet. Gute Nacht."
      - delay: '00:00:07'
      - service: input_boolean.turn_on
        entity_id: input_boolean.schlafen_aktiv
      - service: input_boolean.turn_off
        entity_id: input_boolean.aufstehen_aktiviert        
      - service: input_datetime.set_datetime
        entity_id: input_datetime.schlafen_uhrzeit
        data:
          datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
      - service: switch.turn_off
        entity_id: switch.wohnzimmer_radio, switch.balkon_radio, switch.flur_radio, switch.kuche_radio, switch.schlafzimmer_radio, switch.arbeitszimmer_radio
      - service: switch.turn_off
        entity_id: switch.watchtv_wohnzimmer, switch.monitor
      - service: light.turn_off
        entity_id: light.wohnzimmer_strahler, light.balkon_licht
      - service: light.turn_on
        entity_id: light.bett, light.kleiderschrank
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.computer_ausschalten
                state: 'on'
            sequence:
              - service: switch.turn_off
                entity_id: switch.pc    
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.schlafen_fernseher_einschalten
                state: 'on'
            sequence:
              - service: switch.turn_on
                entity_id: switch.watchtv_schlafzimmer   
              - service: input_boolean.turn_on
                entity_id: input_boolean.timer_schlafzimmer_aktiv        

  sleeptimer_turn_off_tv:
    alias: Sleeptimer aktivieren
    sequence:
      - condition: state
        entity_id: input_boolean.timer_schlafzimmer_aktiv
        state: 'on'
      - service: script.watchtv_schlafzimmer_off

automation:
  - alias: "Schlafen gehen - Countdown starten"
    id: "schlafen_gehen_countdown_starten"
    trigger:
      - platform: state
        entity_id: sensor.schalter_wohnzimmer
        to: '2'      
    condition:
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'off'
      - condition: state
        entity_id: timer.schlafen_einschalten
        state: 'idle'
      - condition: time
        after: '20:00'
        before: '06:00'  
    action:
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Alle Geräte werden gleich ausgeschaltet."
      - delay: '00:00:05'
      - service: media_player.play_media
        data:
          entity_id: media_player.benachrichtigungen
          media_content_id: sounds/countdown_5.mp3
          media_content_type: music
      - service: timer.start
        entity_id: timer.schlafen_einschalten
        
  - alias: "Schlafen gehen - Countdown abbrechen"
    id: "schlafen_gehen_countdown_abbrechen"
    trigger:
      - platform: state
        entity_id: binary_sensor.schalter_wohnzimmer
        to: 'off'
    condition:
      - condition: state
        entity_id: timer.schlafen_einschalten
        state: 'active'
    action:
      - service: media_player.media_pause
        entity_id: media_player.benachrichtigungen
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Der Vorgang wurde abgebrochen."
      - service: timer.cancel
        entity_id: timer.schlafen_einschalten

  - alias: "Schlafen gehen - Starten"
    id: "schlafen_gehen_starten"
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.schlafen_einschalten
    action:   
      - service: script.schlafen_gehen

  - alias: "Schlafen gehen - Wecker Arbeit"
    id: "schlafen_gehen_wecker_arbeit"
    trigger:
      - platform: state
        entity_id: binary_sensor.im_bett
        to: 'on'   
        for:
          seconds: 2        
    condition:
      - condition: state
        entity_id: input_boolean.schlafen_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.wecker_erinnerung_morgen
        state: 'off'    
      - condition: state
        entity_id: binary_sensor.wecker_richtig_gestellt
        state: 'off'
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: time
                before: '00:00:00'
              - condition: state
                entity_id: binary_sensor.arbeitstag_morgen
                state: 'on'         
              - condition: state
                entity_id: binary_sensor.urlaub_morgen
                state: 'off'
              - condition: state
                entity_id: binary_sensor.krank_morgen
                state: 'off'                
          - condition: and
            conditions:
              - condition: time
                after: '00:00:00'
              - condition: state
                entity_id: binary_sensor.arbeitstag
                state: 'on'         
              - condition: state
                entity_id: calendar.urlaub
                state: 'off'
              - condition: state
                entity_id: calendar.krank
                state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.wecker_erinnerung_morgen    
      - service: !secret tts_service
        data_template:
          echo: "schlafzimmer"
          override: true
          message: >-
            {% if states('sensor.tablet_schlafzimmer_nachster_wecker') == 'unavailable' %}
              Der Wecker ist noch nicht gestellt.
            {% else %}
              Der Wecker ist noch nicht richtig gestellt.
            {% endif %}            
            
  - alias: 'Sleeptimer - Starten'
    id: 'sleeptimer_starten'
    trigger:
      platform: state
      entity_id: input_boolean.timer_schlafzimmer_aktiv
      to: 'on'
    action:
      - service: timer.start
        entity_id: timer.sleeptimer
        data_template:
          duration: >
            {{ states('input_select.timer_schlafzimmer_dauer')  | int * 60 | int }}

  - alias: 'Sleeptimer - Geändert'
    id: 'sleeptimer_geaendert'
    trigger:
      platform: state
      entity_id: input_select.timer_schlafzimmer_dauer
    action:
      - service: timer.start
        entity_id: timer.sleeptimer
        data_template:
          duration: >
            {{ states('input_select.timer_schlafzimmer_dauer') | int * 60 | int }}
      - service: input_boolean.turn_on
        entity_id: input_boolean.timer_schlafzimmer_aktiv

  - alias: 'Sleeptimer - Endet'
    id: 'sleeptimer_endet'
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.sleeptimer
    action:
      - service: script.sleeptimer_turn_off_tv
      - service: light.turn_off
        entity_id: light.bett

  - alias: 'Sleeptimer - Abbrechen'
    id: 'sleeptimer_abbrechen'
    trigger:
      platform: state
      entity_id: input_boolean.timer_schlafzimmer_aktiv
      to: 'off'
    action:
      - service: timer.cancel
        entity_id: timer.sleeptimer

homeassistant:
  customize:
    script.schlafen_gehen:
      icon: mdi:power-sleep
      can_cancel: false      