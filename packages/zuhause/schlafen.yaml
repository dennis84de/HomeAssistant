input_boolean:
  timer_schlafzimmer_aktiv:
    name: Sleeptimer aktiv    
    icon: mdi:timer-off

  schlafen_einschalten_aktiv:
    name: "Schlafen einschalten aktiv"

  schlafen_aktiv:
    name: Schlafen    

  aufstehen_aktiviert:
    name: Aufstehen aktiviert
    
  schlafen_fernseher_einschalten:
    name: Fernseher einschalten    
    icon: mdi:television

input_datetime:
  schlafen_uhrzeit:
    name: Schlafen Uhrzeit   
    has_time: true
    has_date: true
    
input_number:
  timer_schlafzimmer:
    name: Timer Schlafzimmer
    min: 0
    max: 120
    step: 10

timer:
  sleeptimer:
    name: Sleeptimer
    icon: mdi:filmstrip-off
    duration: 4200

  schlafen_einschalten:
    name: "Schlafen einschalten"
    duration: 8

binary_sensor:
  - platform: template
    sensors:
      im_bett:
        friendly_name: "Im Bett"
        value_template: "{{not is_state('binary_sensor.bett', 'on')}}"
        device_class: vibration
        delay_off: 2
        icon_template: mdi:bed-king    
            
      schlafen_aktiv:
        friendly_name: Schlafen aktiv
        value_template: "{{ is_state('input_boolean.schlafen_aktiv', 'on') }}"
        icon_template: mdi:sleep
        availability_template: "{{ states('input_boolean.schlafen_aktiv') not in ['unknown', 'unavailable'] }}"
          
      schlafen_inaktiv:
        friendly_name: Schlafen inaktiv
        value_template: "{{ is_state('binary_sensor.schlafen_aktiv', 'off') }}"
        
sensor:
  - platform: template
    sensors:
      schlafen_letzte_uhrzeit:
        friendly_name: Schlafen Letzte Uhrzeit       
        value_template: "{{ '%02d' % (state_attr('input_datetime.schlafen_uhrzeit', 'hour') | int) ~ ':' ~ '%02d' % (state_attr('input_datetime.schlafen_uhrzeit', 'minute') | int) }}"
        icon_template: mdi:av-timer
        unit_of_measurement: 'Uhr'

script:
  schlafen_gehen:
    alias: Schlafen gehen
    sequence:
      - service: !secret tts_service
        data:
          echo: "wohnzimmer"
          message: "Alle Geräte werden jetzt ausgeschaltet. Gute Nacht."
      - delay: '00:00:05'
      - service: input_boolean.turn_on
        entity_id: input_boolean.schlafen_aktiv
      - service: input_boolean.turn_off
        entity_id: input_boolean.aufstehen_aktiviert        
      - service: input_datetime.set_datetime
        entity_id: input_datetime.schlafen_uhrzeit
        data:
          datetime: "{{ now().strftime('%Y-%m-%d %H:%M:%S') }}"
      - service: script.radios_ausschalten
        data:
          badezimmerEingeschaltetLassen: True
      - service: switch.turn_off
        entity_id: switch.watchtv_wohnzimmer, switch.computer
      - service: light.turn_off
        entity_id: light.wohnzimmer_strahler, light.wohnzimmer_schrank, light.balkon_licht
      - choose:
          - conditions:
              - condition: state
                entity_id: light.wohnzimmer_couch
                state: 'off'
            sequence:
              - service: light.turn_on
                entity_id: light.wohnzimmer_couch  
      - service: input_select.select_option
        data:
          entity_id: input_select.computer_ausschalten  
          option: 'Herunterfahren'
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.fenster_schlafzimmer
                state: 'on'
            sequence:
              - service: light.turn_on
                entity_id: light.bett
        default:
          - service: light.turn_on
            entity_id: light.bett, light.kleiderschrank
      - choose:
          - conditions:
              - condition: state
                entity_id: input_boolean.schlafen_fernseher_einschalten
                state: 'on'
            sequence:
              - service: switch.turn_on
                entity_id: switch.watchtv_schlafzimmer   
              - service: input_boolean.turn_on
                entity_id: input_boolean.timer_schlafzimmer_aktiv        

automation:
  - alias: "Schlafen gehen - Countdown starten"
    id: "schlafen_gehen_countdown_starten"
    trigger:
      - id: schalter_wohnzimmer
        platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c8:c4:8b
          command: click
          args:
            click_type: double      
    condition:
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'off'
      - condition: state
        entity_id: timer.schlafen_einschalten
        state: 'idle'
      - condition: time
        after: '20:00'
        before: '06:00'  
    action:
      - service: !secret tts_service
        data:
          echo: "wohnzimmer"
          message: "Alle Geräte werden gleich ausgeschaltet."
      - delay: '00:00:05'
      - service: media_player.play_media
        data:
          entity_id: media_player.squeezebox
          media_content_id: http://192.168.2.75:8123/local/sounds/countdown_5.mp3
          media_content_type: music
      - service: timer.start
        entity_id: timer.schlafen_einschalten
        
  - alias: "Schlafen gehen - Countdown abbrechen"
    id: "schlafen_gehen_countdown_abbrechen"
    trigger:
      - id: schalter_wohnzimmer
        platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:02:c8:c4:8b
          command: click
          args:
            click_type: single
    condition:
      - condition: state
        entity_id: timer.schlafen_einschalten
        state: 'active'
    action:
      - service: media_player.media_pause
        entity_id: media_player.squeezebox
      - service: !secret tts_service
        data:
          echo: "wohnzimmer"
          message: "Der Vorgang wurde abgebrochen."
      - service: timer.cancel
        entity_id: timer.schlafen_einschalten

  - alias: "Schlafen gehen - Starten"
    id: "schlafen_gehen_starten"
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.schlafen_einschalten
    action:   
      - service: script.schlafen_gehen

  - alias: "Schlafen gehen - Wecker Arbeit"
    id: "schlafen_gehen_wecker_arbeit"
    trigger:
      - platform: state
        entity_id: binary_sensor.im_bett
        to: 'on'   
        for:
          seconds: 2        
    condition:
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.wecker_erinnerung_morgen
        state: 'off'    
      - condition: state
        entity_id: binary_sensor.wecker_richtig_gestellt
        state: 'off'
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: time
                before: '00:00:00'
              - condition: state
                entity_id: binary_sensor.arbeitstag_morgen
                state: 'on'         
              - condition: state
                entity_id: binary_sensor.urlaub_morgen
                state: 'off'
              - condition: state
                entity_id: binary_sensor.krank_morgen
                state: 'off'                
          - condition: and
            conditions:
              - condition: time
                after: '00:00:00'
              - condition: state
                entity_id: binary_sensor.arbeitstag
                state: 'on'         
              - condition: state
                entity_id: calendar.urlaub
                state: 'off'
              - condition: state
                entity_id: calendar.krank
                state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.wecker_erinnerung_morgen    
      - service: !secret tts_service
        data:
          echo: "schlafzimmer"
          override: true
          message: >-
            {% if states('sensor.tablet_schlafzimmer_nachster_wecker') == 'unavailable' %}
              Der Wecker ist noch nicht gestellt.
            {% else %}
              Der Wecker ist noch nicht richtig gestellt.
            {% endif %}            
            
  - alias: 'Sleeptimer - Starten'
    id: 'sleeptimer_starten'
    trigger:
      - platform: state
        entity_id: input_boolean.timer_schlafzimmer_aktiv
        to: 'on'
      - platform: state
        entity_id: input_number.timer_schlafzimmer        
    condition:
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'on'        
    action:
      - service: timer.start
        entity_id: timer.sleeptimer
        data:
          duration: "{{ states('input_number.timer_schlafzimmer')  | int * 60 | int }}"
      - service: input_boolean.turn_on
        entity_id: input_boolean.timer_schlafzimmer_aktiv

  - alias: 'Sleeptimer - Endet'
    id: 'sleeptimer_endet'
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.sleeptimer
    condition:
      - condition: state
        entity_id: input_boolean.timer_schlafzimmer_aktiv
        state: 'on'                    
    action:      
      - service: script.watchtv_schlafzimmer_off
      - service: homeassistant.turn_off
        entity_id: group.licht_wohnung

  - alias: 'Sleeptimer - Abbrechen'
    id: 'sleeptimer_abbrechen'
    trigger:
      - platform: state
        entity_id: input_boolean.timer_schlafzimmer_aktiv
        to: 'off'
      - platform: event
        event_type: timer.cancelled
        event_data:
          entity_id: timer.sleeptimer     
    condition:
      - condition: state
        entity_id: timer.sleeptimer
        state: 'active'                  
    action:
      - service: timer.cancel
        entity_id: timer.sleeptimer
      - service: input_boolean.turn_off
        entity_id: input_boolean.timer_schlafzimmer_aktiv

homeassistant:
  customize:
    script.schlafen_gehen:
      icon: mdi:power-sleep
      can_cancel: false      