input_boolean:
  zu_hause_begruessung:
    name: "Begrüßung"
    
  besuch:
    name: "Besuch"
    icon: mdi:account-multiple   
    
  zu_hause_aktiviert:
    name: "Zu Hause aktiviert"

shell_command:
  send_position: "curl -X POST '{{ url }}?lat={{ state_attr('zone.home', 'latitude') }}&lon={{ state_attr('zone.home', 'longitude') }}&timestamp={{ as_timestamp(now()) | int }}'"

binary_sensor:
  - platform: template
    sensors:
      zu_hause:
        friendly_name: "zu Hause"
        device_class: presence
        value_template: >-
          {% if is_state('device_tracker.handyping', 'home') or is_state('device_tracker.handymqtt', 'home') %}
            true
          {% else %}
            false
          {% endif %}
          
      besuch:
        friendly_name: "Besuch"
        device_class: presence        
        value_template: >-
          {{ True if is_state('input_boolean.besuch', 'on') else False }}     

automation:
  - alias: "Zu Hause"
    id: "zu_hause"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'    
      - platform: state
        entity_id: sensor.schalter_flur
        to: '2'            
    condition:
      - condition: state
        entity_id: input_boolean.zu_hause_aktiviert
        state: 'off'         
      - condition: template
        value_template: >-
          {{ is_state('binary_sensor.zu_hause', 'off') if trigger.entity_id == "sensor.schalter_flur" else True }}        
      - condition: template
        value_template: >-
          {% set now = as_timestamp(now()) | int %}
          {% set last = as_timestamp(state_attr("script.alles_ausschalten_nfc", "last_triggered")) | int %}
          {% set diff = ((now - last) / 60) | int %}

          {{ diff >= 10 }}
    action:     
      - service: input_boolean.turn_on
        entity_id: input_boolean.zu_hause_aktiviert      
      - service: script.zu_hause_standort
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.alarm
      - service: switch.turn_off
        entity_id: switch.kamera_wohnzimmer          
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.home_office
                state: 'off'          
              - condition: time
                after: '08:00'
                before: '20:00'
              - condition: numeric_state
                entity_id: sensor.laufzeit_minuten
                above: 5
            sequence:          
              - service: script.zu_hause
          - conditions:
              - condition: state
                entity_id: binary_sensor.home_office
                state: 'on'          
              - condition: numeric_state
                entity_id: sensor.laufzeit_minuten
                above: 5
            sequence:              
              - service: script.zu_hause_home_office
          - conditions:
              - condition: time
                after: '20:00'
                before: '23:30'
              - condition: numeric_state
                entity_id: sensor.laufzeit_minuten
                above: 5   
            sequence:           
              - service: script.zu_hause_abends     
          - conditions:
              - condition: state
                entity_id: sensor.presence_simulation
                state: 'on'
            sequence:
              - service: presence_simulation.stop
                
  - alias: "Zu Hause - Begrüßung aktivieren"
    id: "zu_hause_begruessung_aktivieren"
    trigger:
      - platform: state
        entity_id: binary_sensor.tuersensor
        to: 'on'
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
    condition:    
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 5
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.zu_hause
            state: 'off'
            for: '00:05:00'
          - condition: state
            entity_id: binary_sensor.tuersensor
            state: 'off'
            for: '00:05:00'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.zu_hause_begruessung        
        
  - alias: "Zu Hause - Begrüßung starten"
    id: "zu_hause_begruessung_starten"
    trigger:
      - platform: state
        entity_id: binary_sensor.tuersensor
        to: 'off' 
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
    condition:
      - condition: state
        entity_id: input_boolean.zu_hause_begruessung
        state: 'on'       
    action:      
      - service: input_boolean.turn_off
        entity_id: input_boolean.zu_hause_begruessung
      - choose:
          - conditions:
              - condition: time        
                after: '22:00'   
            sequence:
              - service: script.zu_hause_begruessung_abends
        default:
          - service: script.zu_hause_begruessung

  - alias: "Zu Hause - Besuch Schalter"
    id: "zu_hause_besuchh_schalter"
    trigger:
      - platform: state
        entity_id: sensor.schalter_flur
        to: '3'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'on'
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.besuch  
        
script:
  zu_hause:
    alias: "Zu Hause"
    sequence:
      - service: script.wohnung_radios_einschalten
      - service: switch.turn_on
        entity_id: switch.computer, switch.watchtv_wohnzimmer      
      - condition: state
        entity_id: binary_sensor.sonne_tagsueber
        state: 'off'
      - service: light.turn_on
        entity_id: light.couch, light.strahler

  zu_hause_home_office:
    alias: "Zu Hause - Home Office"
    sequence:
      - service: script.wohnung_radios_einschalten 
      - service: switch.turn_on
        entity_id: switch.arbeitszimmer_radio, switch.pc_arbeit, switch.arbeitszimmer_monitore
        
  zu_hause_abends:
    alias: "Zu Hause - abends"
    sequence:
      - service: light.turn_on
        entity_id: light.couch, light.strahler
      - service: switch.turn_on
        entity_id: switch.computer, switch.watchtv_wohnzimmer
      - service: switch.turn_on
        entity_id: switch.badezimmer_radio

  zu_hause_standort:
    alias: "Zu Hause - Standort"
    sequence:
      - service: mqtt.publish
        data:
           topic: 'location/handy'
           payload: 'home'
           retain: true
      - service: shell_command.send_position
        data:
          url: !secret phonetracker_send_position_url
      - service: device_tracker.see
        data_template:
          dev_id: handygps
          location_name: 'home'
          gps: ["{{ state_attr('zone.home', 'latitude') }}", "{{ state_attr('zone.home', 'longitude') }}"]
        
  zu_hause_begruessung:
    alias: "Zu Hause - Begrüßung"
    sequence:
      - delay: '00:00:20'
      - service: !secret tts_service
        data_template:
          message: >-
            "Hallo Dennis. Willkommen zu Hause."
            
            {% if is_state('counter.behaelter_leeren', '0') %}
              "Der Staubsaugerbehälter muss geleert werden."
            {% endif %}

            {% set count_heimnetz_entities = states('sensor.heimnetz_offline') | int -%}
            {% set count_zigate_entities = states('sensor.zigate_offline') | int -%}
            {% set count_complete = count_heimnetz_entities + count_zigate_entities | int -%}
            
            {% if count_complete > 0 %}
              {{ "Die folgenden Geräte sind offline." if count_complete > 1 else "Das folgende Gerät ist offline."}}

              {% set heimnetzOffline = expand('group.heimnetz')
                | selectattr('state','eq','not_home') 
                | map(attribute='name')
                | list %}              

              {{ heimnetzOffline | join(', ') }}
                            
              {% set zigateEntities = expand('group.zigate') %}
              {% set now = as_timestamp(now()) | int %}
              {% set puffer = states('input_number.zigate_offline_puffer') | int * 60 | int -%}

              {% for x in zigateEntities if ((now - (as_timestamp(x.state) | int) ) / 60 | round()) > puffer %}
                {%- if not loop.first %}, {% endif -%}
                {{- x.name -}}
              {% endfor %}
            {% endif %}

            {% set count_battery_entities = states('sensor.batteriestand_niedrig') | int -%}
            
            {% if count_battery_entities > 0 %}
              {{ "Der Batteriestand der folgenden Geräte ist niedrig." if count_battery_entities > 1 else "Der Batteriestand des folgenden Gerätes ist niedrig."}}
              
              {% set entities = expand('group.batteriestand') %}
              {% set min_battery_level = states('input_number.batteriestand_warnlevel') | int -%}

              {% for x in entities if x.state|int < min_battery_level %}
                {%- if not loop.first %}, {% endif -%}
                {{- x.name -}}
              {% endfor %}           
            {% endif %}
      - service: input_boolean.turn_off
        entity_id: input_boolean.zu_hause_begruessung
        
  zu_hause_begruessung_abends:
      alias: "Zu Hause - Begrüßung abends"
      sequence:
        - delay: '00:00:20'
        - service: !secret tts_service
          data_template:
            message: "Hallo Dennis. Willkommen zu Hause."

homeassistant:
  customize:
    sensor.aufenthaltsort_handy:
      friendly_name: Aufenthaltsort
      icon: mdi:google-maps
    proximity.home:
      friendly_name: Entfernung