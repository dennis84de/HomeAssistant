input_select:
  zu_hause_begruessung:
    name: Begrüßung
    options:
      - Deaktiviert
      - Tür
      - Handy
      
shell_command:
  send_position: "curl -X POST '{{ url }}?lat={{ state_attr('zone.home', 'latitude') }}&lon={{ state_attr('zone.home', 'longitude') }}&timestamp={{ as_timestamp(now()) | int(0) }}'"

script:
  zu_hause:
    alias: "Zu Hause"
    sequence:
      - service: switch.turn_on
        entity_id: switch.computer, switch.watchtv_wohnzimmer              
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.sonne_tagsueber
                state: 'off'
            sequence:
              - service: light.turn_on
                entity_id: light.wohnzimmer_schrank           
      - service: script.radios_einschalten               

  zu_hause_home_office:
    alias: "Zu Hause - Home Office"
    sequence:      
      - service: switch.turn_on
        entity_id: switch.arbeitszimmer_radio, switch.computer_arbeit   
      - service: script.radios_einschalten   
        data:
          radioBalkon: false         
      - service: input_boolean.turn_on
        entity_id: input_boolean.home_office_aktiv          
      - choose:
          - conditions:
              - condition: or
                conditions:
                  - condition: state
                    entity_id: binary_sensor.arbeitstag_morgen
                    state: 'off'
                  - condition: state
                    entity_id: binary_sensor.urlaub_morgen
                    state: 'on'                       
            sequence:
              - service: input_select.select_option
                data:
                  entity_id: input_select.computer_arbeit_ausschalten  
                  option: 'Herunterfahren'     
        default:
          - service: input_select.select_option
            data:
              entity_id: input_select.computer_arbeit_ausschalten  
              option: 'Ruhezustand'
            
  zu_hause_abends:
    alias: "Zu Hause - abends"
    sequence:
      - service: light.turn_on
        entity_id: light.wohnzimmer_schrank
      - service: switch.turn_on
        entity_id: switch.computer, switch.watchtv_wohnzimmer     
      - service: switch.turn_on
        entity_id: switch.badezimmer_radio    
      - wait_template: "{{ is_state('media_player.radio_badezimmer', 'playing') }}"
      - service: media_player.media_pause
        entity_id: media_player.radio_badezimmer          

  zu_hause_standort:
    alias: "Zu Hause - Standort"
    sequence:
      - service: shell_command.send_position
        data:
          url: !secret phonetrack_send_position_url
      - service: mqtt.publish
        data:
           topic: 'handy/tracker'
           payload: home
           retain: true          
        
  zu_hause_begruessung:
    alias: "Zu Hause - Begrüßung"
    sequence:
      - delay: '00:00:15'
      - choose:
          - conditions:              
              - "{{ abends is defined and abends == True }}"              
            sequence:
              - service: !secret tts_service
                data:
                  message: "Hallo Dennis. Willkommen zu Hause."
        default:  
          - service: !secret tts_service
            data:
              message: >-
                "Hallo Dennis. Willkommen zu Hause."

                {% if is_state('counter.staubsauger_behaelter_leeren', '0') %}
                  "Der Staubsaugerbehälter muss geleert werden."
                {% endif %}

                {% set count_heimnetz_entities = states('sensor.heimnetz_offline') | int(0) -%}            
                {% if count_heimnetz_entities > 0 %}
                  {{ "Die folgenden Geräte sind offline." if count_heimnetz_entities > 1 else "Das folgende Gerät ist offline."}}

                  {{ state_attr('sensor.heimnetz_offline', 'geraete') | join(', ') }}                         
                {% endif %}

                {% set count_steckdosen_offline = states('sensor.steckdosen_offline') | int(0) -%}            
                {% if count_steckdosen_offline > 0 %}
                  {{ "Die folgenden Geräte sind nicht verfügbar." if count_steckdosen_offline > 1 else "Das folgende Gerät ist nicht verfügbar."}}

                  {{ state_attr('sensor.steckdosen_offline', 'geraete') | join(', ') }}                         
                {% endif %}

                {% set min_battery_level = states('input_number.batteriestand_warnlevel') | int(0) -%}                       
                {% set count_battery_entities = states('sensor.batteriestand_niedrig') | int(0) -%}

                {% if count_battery_entities > 0 %}
                  {{ "Der Batteriestand der folgenden Geräte ist niedrig." if count_battery_entities > 1 else "Der Batteriestand des folgenden Gerätes ist niedrig."}}

                  {% set entities = expand('group.batteriestand') %}

                  {% for x in entities if x.state|int(100) <= min_battery_level %}
                    {%- if not loop.first %}, {% endif -%}
                    {{- x.name -}}
                  {% endfor %}       
                {% endif %}
            
automation:     
  - alias: "Zu Hause"
    id: "zu_hause"
    trigger:
      - id: zu_hause
        platform: state
        entity_id: person.dennis
        to: 'home'
      - id: schalter_flur
        platform: event
        event_type: zha_event
        event_data:
          device_ieee: 00:15:8d:00:01:c3:08:67
          command: click
          args:
            click_type: double   
      - id: handy
        platform: tag
        tag_id: tag_flur          
    condition:    
      - condition: template
        value_template: "{{ is_state('person.dennis', 'not_home') if trigger.id in ('schalter_flur', 'handy') else True }}"
      - condition: template
        value_template: >-
          {% set now = as_timestamp(now()) %}
          {% set last = as_timestamp(state_attr("script.alles_ausschalten", "last_triggered"), None) | int(0) %}
          {% set diff = ((now - last) / 60) | int(0) %}

          {{ diff >= 10 }}        
    action:     
      - choose:              
        - conditions:
            - condition: state
              entity_id: input_select.zu_hause_begruessung
              state: 'Deaktiviert'       
              for: '00:01:00'
          sequence:
            - service: input_select.select_option
              entity_id: input_select.zu_hause_begruessung
              data:                  
                option: 'Handy'        
      - service: script.zu_hause_standort
      - service: alarmo.disarm
        data:
          entity_id: alarm_control_panel.alarmo
      - service: presence_simulation.stop          
      - service: input_select.select_option
        data:
          entity_id: input_select.computer_ausschalten  
          option: 'Ruhezustand'              
      - choose:    
          - conditions:
              - condition: or
                conditions:
                  - "{{ is_state('binary_sensor.home_office_aktiv', 'on') }}"
                  - condition: template
                    value_template: >-
                      {% set now = as_timestamp(now()) %}
                      {% set last = as_timestamp(state_attr("script.alles_ausschalten", "last_triggered"), None) | int(0) %}
                      {% set minutenUnterwegs = ((now - last) / 60) | int(0) %}
                      {% set minuenHomeOffice = states('input_number.home_office_heute_gearbeitet') | int(0) %}

                      {{ (minutenUnterwegs + minuenHomeOffice < 540) if minuenHomeOffice > 0 else false }}                              
            sequence:              
              - service: script.zu_hause_home_office       
          - conditions:
              - "{{ is_state('binary_sensor.spatabends', 'on') }}"
              - "{{ is_state('binary_sensor.nachts', 'off') }}"
            sequence:           
              - service: script.zu_hause_abends              
          - conditions:
              - "{{ is_state('binary_sensor.nachts', 'off') }}"
            sequence:           
              - service: script.zu_hause     
      - choose:    
          - conditions:      
              - "{{ (states('input_number.home_office_heute_gearbeitet') | int(0)) > 0 }}"
            sequence:                 
              - service: input_number.set_value        
                data:
                  entity_id: input_number.home_office_heute_gearbeitet
                  value: 0                 
               
  - alias: "Zu Hause - Tür geöffnet"
    id: "zu_hause_tuer_geoeffnet"
    trigger:
      - platform: state
        entity_id: binary_sensor.wohnungstuer
        to: 'on'
    condition:    
      - condition: state
        entity_id: input_select.zu_hause_begruessung
        state: 'Deaktiviert'        
      - condition: state
        entity_id: person.dennis
        state: 'not_home'                 
    action:    
      - service: input_select.select_option            
        entity_id: input_select.zu_hause_begruessung
        data:
          option: 'Tür'
        
  - alias: "Zu Hause - Begrüßung"
    id: "zu_hause_begruessung"
    trigger:
      - id: wohnungstuer
        platform: state
        entity_id: binary_sensor.wohnungstuer
        to: 'off' 
      - id: handy
        platform: state
        entity_id: person.dennis
        to: 'home'               
    condition:  
      - "{{ not is_state('input_select.zu_hause_begruessung', 'Deaktiviert') }}"   
      - condition: or
        conditions:
          - "{{ trigger.id == 'handy' and is_state('input_select.zu_hause_begruessung', 'Tür') }}"     
          - "{{ trigger.id == 'wohnungstuer' and is_state('input_select.zu_hause_begruessung', 'Handy') }}"      
    action:      
      - service: input_select.select_option
        entity_id: input_select.zu_hause_begruessung
        data:
          option: 'Deaktiviert'     
      - service: script.zu_hause_begruessung    
        data:
          abends: "{{ is_state('binary_sensor.nachts', 'on') }}"

homeassistant:
  customize:
    sensor.aufenthaltsort_handy:
      friendly_name: Aufenthaltsort
      icon: mdi:google-maps
    proximity.home:
      friendly_name: Entfernung