shell_command:
  werbeanruf_suchen: "python3 /home/homeassistant/.homeassistant/python_scripts/werbeanrufe.py {{ rufnummer }}"
  werbeanruf_zuruecksetzen: "python3 /home/homeassistant/.homeassistant/python_scripts/werbeanrufe.py"

sensor:
  - platform: template
    sensors:
      telefon_status:
        friendly_name: Telefon
        entity_id:
          - sensor.telefon
        value_template: >
          {% if states.sensor.telefon == None %}
            Ruhezustand
          {% else %}
            {% if is_state('sensor.telefon', 'ringing') %}
              Eingehender Anruf
            {% elif is_state('sensor.telefon', 'dialing') %}
              Ausgehender Anruf
            {% elif is_state('sensor.telefon', 'talking') %}
              Aktiver Anruf
            {% else %}
              Ruhezustand
            {% endif %}
          {% endif %}
        icon_template: >
          {% if states.sensor.tasker_handystatus == None %}
            mdi:phone
          {% else %}
            {% if is_state('sensor.telefon', 'ringing') %}
              mdi:phone-incoming
            {% elif is_state('sensor.telefon', 'dialing') %}
              mdi:phone-outgoing
            {% elif is_state('sensor.telefon', 'talking') %}
              mdi:phone-in-talk
            {% else %}
              mdi:phone
            {% endif %}
          {% endif %}

automation:
  - alias: 'Telefon aktiv - Rufnummer suchen'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
    condition:
      - condition: template
        value_template: '{{ state_attr("sensor.telefon", "from_name") == "unknown" and state_attr("sensor.telefon", "from") != None and state_attr("sensor.telefon", "from") != "" }}'
    action:
      - service: shell_command.werbeanruf_suchen
        data_template:
          rufnummer: '{{ states.sensor.telefon.attributes.from }}'

  - alias: 'Werbeanruf - Nachricht an Handy'
    trigger:
      - platform: state
        entity_id: binary_sensor.werbeanruf
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
    action:
      - service: notify.telegram
        data_template:
          title: Werbeanruf Festnetz
          message: >
            Anrufer: {{ state_attr('binary_sensor.werbeanruf', 'name') }}

            Rufnummer: {{ state_attr('binary_sensor.werbeanruf', 'number') }}

            Anruftyp: {{ state_attr('binary_sensor.werbeanruf', 'type') }}

            Bewertung: {{ state_attr('binary_sensor.werbeanruf', 'score') }}
          data:
            inline_keyboard:
              - 'Gelesen:/gelesen'

  - alias: 'Werbeanruf - ZurÃ¼cksetzen'
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/gelesen'
    action:
      - service: shell_command.werbeanruf_zuruecksetzen
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.chat_id }}'
          message: >-
            Werbeanruf wurde entfernt.

  - alias: 'Telefon aktiv - Kodi pausieren'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_pausiert
      - service: media_player.media_pause
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Telefon'
          message: >-
            {% if is_state("sensor.telefon", "dialing") %}
              {{ states.sensor.telefon.attributes.to_name }} ({{ states.sensor.telefon.attributes.to }}) wird angerufen.
            {% elif is_state("sensor.telefon", "ringing") %}
              {% if states.sensor.telefon.attributes.from == '' %}
                Ein Anruf ohne Rufnummer.
              {% elif states.sensor.telefon.attributes.from_name == 'unknown' %}
                Ein Anruf von einer unbekannten Rufnummer ({{ states.sensor.telefon.attributes.from }}).
              {% else %}
                Anruf von {{ states.sensor.telefon.attributes.from_name }} ({{ states.sensor.telefon.attributes.from }}).
              {% endif %}
            {% endif %}
          data:
            displaytime: 5000
            icon: "info"

  - alias: 'Telefon inaktiv - Kodi wiedergeben'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'paused'
      - condition: state
        entity_id: input_boolean.kodi_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.handy_status
        state: 'Ruhezustand'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.kodi_pausiert
      - service: media_player.media_play
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Telefon'
          message: 'Anruf beendet'
          data:
            displaytime: 2000
            icon: "info"

  - alias: 'Telefon aktiv - Soundbar deaktivieren'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'        
      - condition: or
        conditions:
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'off'          
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'idle'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: true

  - alias: 'Telefon inaktiv - Soundbar aktivieren'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: template
        value_template: '{{ state_attr("media_player.soundbar", "is_volume_muted") == True }}'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: false
          
  - alias: 'Telefon aktiv - Musik pausieren'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: switch.alle_radios_wiedergabe_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.musik_pausiert
      - service: media_player.volume_mute
        data:
          entity_id: media_player.kuche, media_player.badezimmer, media_player.wohnzimmer, media_player.schlafzimmer, media_player.arbeitszimmer, media_player.flur, media_player.balkon
          is_volume_muted: true

  - alias: 'Telefon inaktiv - Musik wiedergeben'
    trigger:
      platform: state
      entity_id: sensor.telefon
      to: 'idle'
    condition:
      - condition: state
        entity_id: input_boolean.musik_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.handy_status
        state: 'Ruhezustand'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.musik_pausiert
      - service: media_player.volume_mute
        data:
          entity_id: media_player.kuche, media_player.badezimmer, media_player.wohnzimmer, media_player.schlafzimmer, media_player.arbeitszimmer, media_player.flur, media_player.balkon
          is_volume_muted: false

  - alias: 'Telefon aktiv - Nachricht an Handy'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
    action:
      - service: notify.telegram
        data_template:
          title: Anruf Festnetz
          message: >-
            {% if state_attr('sensor.telefon', 'from') == None or state_attr('sensor.telefon', 'from') == '' %}
              Ein Anruf ohne Rufnummer.
            {% elif state_attr('sensor.telefon', 'from_name') == None or state_attr('sensor.telefon', 'from_name') == 'unknown' %}
              Ein Anruf von einer unbekannten Rufnummer ({{ states.sensor.telefon.attributes.from }}).
            {% else %}
              Anruf von {{ state_attr('sensor.telefon', 'from_name') }} ({{ state_attr('sensor.telefon', 'from') }}).
            {% endif %}

  - alias: "Telefon aktiv - TTS"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
    condition:
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
    action:
      service: !secret tts_service
      data_template:
        message: >-
          {% if state_attr('sensor.telefon', 'from') == None or state_attr('sensor.telefon', 'from') == '' %}
            Ein eingehender Anruf ohne Rufnummer.
          {% elif state_attr('sensor.telefon', 'from_name') == None or state_attr('sensor.telefon', 'from_name') == 'unknown' %}
            Ein eingehender Anruf von einer unbekannten Rufnummer.
          {% else %}
            Ein eingehender Anruf von {{ state_attr('sensor.telefon', 'from_name') }}.
          {% endif %}

homeassistant:
  customize:
    sensor.telefon:
      icon: mdi:phone-classic
      hidden: true
    binary_sensor.werbeanruf:
      icon: mdi:phone-log
      hidden: true