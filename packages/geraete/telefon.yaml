sensor:
  - platform: template
    sensors:
      telefon_status:
        friendly_name: Telefon
        value_template: >
          {% if is_state('sensor.telefon', 'ringing') %}
            Eingehender Anruf
          {% elif is_state('sensor.telefon', 'dialing') %}
            Ausgehender Anruf
          {% elif is_state('sensor.telefon', 'talking') %}
            Aktiver Anruf
          {% else %}
            Ruhezustand
          {% endif %}
        icon_template: >
          {% if is_state('sensor.telefon', 'ringing') %}
            mdi:phone-incoming
          {% elif is_state('sensor.telefon', 'dialing') %}
            mdi:phone-outgoing
          {% elif is_state('sensor.telefon', 'talking') %}
            mdi:phone-in-talk
          {% else %}
            mdi:phone
          {% endif %}
   
input_boolean:
  licht_aktiv:
    name: Licht aktiv
        
  telefon_musik_pausiert:
    name: Musik pausiert            
        
automation:
  - alias: "Eingehender Anruf - Licht starten"
    id: "eingehender_anruf_licht_starten"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'        
    condition:
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: input_boolean.baden_aktiv
        state: 'off'        
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off' 
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'on'        
    action:
      - service: scene.create
        data_template:
          scene_id: eingehender_anruf_licht_status
          entities:
            light.wohnzimmer_strahler:
              state: "{{ states('light.wohnzimmer_strahler') }}"     
      - service: input_boolean.turn_on
        entity_id: input_boolean.licht_aktiv
      - alias: 'Eingehender Anruf - Licht schalten'
        repeat:
          while:
            - condition: or
              conditions:                
                - condition: state
                  entity_id: sensor.telefon
                  state: 'ringing'
                - condition: state
                  entity_id: sensor.handy
                  state: 'incoming'              
          sequence:
            - service: light.toggle
              entity_id: light.wohnzimmer_strahler
            - delay:
                seconds: 1

  - alias: "Eingehender Anruf - Licht beenden"
    id: "eingehender_anruf_licht_beenden"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
      - platform: state
        entity_id: sensor.telefon
        to: 'talking'       
      - platform: state
        entity_id: sensor.handy
        to: 'idle'   
      - platform: state
        entity_id: sensor.handy
        to: 'talking'           
    condition:
      - condition: state
        entity_id: input_boolean.licht_aktiv
        state: 'on'             
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.licht_aktiv
      - service: scene.turn_on
        entity_id: scene.eingehender_anruf_licht_status

  - alias: "Telefon aktiv - Kodi Wohnzimmer pausieren"
    id: "telefon_aktiv_kodi_wohnzimmer_pausieren"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'          
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_wohnzimmer_pausiert
      - service: media_player.media_pause
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Telefon'
          message: >-
            {% if is_state("sensor.telefon", 'dialing') %}
              {{ state_attr('sensor.telefon', 'to_name') }} ({{ state_attr('sensor.telefon', 'to') }}) wird angerufen.
            {% elif is_state("sensor.telefon", 'ringing') %}
              {% if state_attr('sensor.telefon', 'from') == '' %}
                Ein Anruf ohne Rufnummer.
              {% elif state_attr('sensor.telefon', 'from_name')  == 'unknown' %}
                Ein Anruf von einer unbekannten Rufnummer ({{ state_attr('sensor.telefon', 'from') }}).
              {% else %}
                Anruf von {{ state_attr('sensor.telefon', 'from_name') }} ({{ state_attr('sensor.telefon', 'from') }}).
              {% endif %}
            {% endif %}
          data:
            displaytime: 5000
            icon: "info"

  - alias: "Telefon inaktiv - Kodi Wohnzimmer wiedergeben"
    id: "telefon_inaktiv_kodi_wohnzimmer_wiedergeben"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'paused'
      - condition: state
        entity_id: input_boolean.kodi_wohnzimmer_pausiert
        state: 'on'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}'        
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.kodi_wohnzimmer_pausiert
      - service: media_player.media_play
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Telefon'
          message: 'Anruf beendet'
          data:
            displaytime: 2000
            icon: "info"                   
                
  - alias: "Telefon aktiv - Youtube Wohnzimmer pausieren"
    id: "telefon_aktiv_youtube_wohnzimmer_pausieren"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: binary_sensor.youtube_wohnzimmer_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.youtube_wohnzimmer_pausieren
        state: 'on'        
      - condition: state
        entity_id: input_boolean.youtube_wohnzimmer_pausiert
        state: 'off'        
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'          
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.youtube_wohnzimmer_pausiert
      - service: switch.turn_on
        entity_id: switch.computer_wiedergabe
        
  - alias: "Telefon inaktiv - Youtube Wohnzimmer wiedergeben"
    id: "telefon_inaktiv_youtube_wohnzimmer_wiedergeben"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
    condition:
      - condition: state
        entity_id: input_boolean.youtube_wohnzimmer_pausiert
        state: 'on'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}'        
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.youtube_wohnzimmer_pausiert      
      - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.youtube_wohnzimmer_aktiv
              state: 'on'
            sequence:
              - service: switch.turn_on
                entity_id: switch.computer_wiedergabe

  - alias: "Telefon aktiv - Soundbar deaktivieren"
    id: "telefon_aktiv_soundbar_deaktivieren"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'      
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'       
      - condition: state
        entity_id: binary_sensor.youtube_wohnzimmer_aktiv
        state: 'off'        
      - condition: or
        conditions:
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'off'          
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'idle'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: true
        
  - alias: "Telefon inaktiv - Soundbar aktivieren"
    id: "telefon_inaktiv_soundbar_aktivieren"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: template
        value_template: '{{ state_attr("media_player.soundbar", "is_volume_muted") == True }}'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: false
          
  - alias: "Telefon aktiv - Musik pausieren"
    id: "telefon_aktiv_musik_pausieren"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: switch.wiedergabe_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'     
      - condition: state
        entity_id: input_boolean.telefon_musik_pausiert
        state: 'off'        
      - condition: state
        entity_id: input_boolean.tuer_musik_pausiert
        state: 'off'
      - condition: state
        entity_id: input_boolean.home_office_musik_pausiert
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.telefon_musik_pausiert
      - service: switch.turn_on
        entity_id: switch.radios_lautlos

  - alias: "Telefon inaktiv - Musik wiedergeben"
    id: "telefon_inaktiv_musik_widergeben"
    trigger:
      platform: state
      entity_id: sensor.telefon
      to: 'idle'
    condition:
      - condition: state
        entity_id: input_boolean.telefon_musik_pausiert
        state: 'on'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}' 
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.telefon_musik_pausiert
      - service: switch.turn_off
        entity_id: switch.radios_lautlos
         
  - alias: "Telefon aktiv - Benachrichtigung"
    id: "telefon_aktiv_benachrichtigung"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: binary_sensor.zu_hause
                state: 'off'
            sequence:
              - service: notify.telegram
                data:
                  title: Anruf Festnetz
                  message: >-
                    {% if state_attr('sensor.telefon', 'from') == None or state_attr('sensor.telefon', 'from') == '' %}
                      Ein Anruf ohne Rufnummer.
                    {% elif state_attr('sensor.telefon', 'from_name') == None or state_attr('sensor.telefon', 'from_name') == 'unknown' %}
                      Ein Anruf von einer unbekannten Rufnummer ({{ state_attr('sensor.telefon', 'from') }}).
                    {% else %}
                      Anruf von {{ state_attr('sensor.telefon', 'from_name') }} ({{ state_attr('sensor.telefon', 'from') }}).
                    {% endif %}  
          - conditions:
              - condition: state
                entity_id: binary_sensor.zu_hause
                state: 'on'      
              - condition: state
                entity_id: input_boolean.nicht_stoeren
                state: 'off'
            sequence:
              - service: !secret tts_service
                data:
                  message: >-
                    {% if state_attr('sensor.telefon', 'from') == None or state_attr('sensor.telefon', 'from') == '' %}
                      Ein eingehender Anruf ohne Rufnummer.
                    {% elif state_attr('sensor.telefon', 'from_name') == None or state_attr('sensor.telefon', 'from_name') == 'unknown' %}
                      Ein eingehender Anruf von einer unbekannten Rufnummer.
                    {% else %}
                      Ein eingehender Anruf von {{ state_attr('sensor.telefon', 'from_name') }}.
                    {% endif %}

  - alias: "Telefon aktiv - Anruf verpasst"
    id: "telefon_aktiv_anruf_verpasst"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        from: 'ringing'
        to: 'idle'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'on'
    action:
      - service: persistent_notification.create
        data:
          title: "Anruf verpasst"
          notification_id: anruf_verpasst
          message: >-
            {% set from = trigger.from_state.attributes.from %}
            {% set from_name = trigger.from_state.attributes.from_name %}
            
            {% if from == None or from == '' %}
              Ein verpasster Anruf ohne Rufnummer.
            {% elif from_name == None or from_name == 'unknown' %}
              Ein verpasster Anruf von einer unbekannten Rufnummer ({{ from }}).
            {% else %}
              Ein verpasster Anruf von {{ from_name }}.
            {% endif %}            
          
homeassistant:
  customize:
    sensor.telefon:
      icon: mdi:phone-classic      