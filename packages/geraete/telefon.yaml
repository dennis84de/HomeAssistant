sensor:
  - platform: template
    sensors:
      telefon_status:
        friendly_name: Telefon
        value_template: >
          {% if is_state('sensor.telefon', 'ringing') %}
            Eingehender Anruf
          {% elif is_state('sensor.telefon', 'dialing') %}
            Ausgehender Anruf
          {% elif is_state('sensor.telefon', 'talking') %}
            Aktiver Anruf
          {% else %}
            Ruhezustand
          {% endif %}
        icon_template: >
          {% if is_state('sensor.telefon', 'ringing') %}
            mdi:phone-incoming
          {% elif is_state('sensor.telefon', 'dialing') %}
            mdi:phone-outgoing
          {% elif is_state('sensor.telefon', 'talking') %}
            mdi:phone-in-talk
          {% else %}
            mdi:phone
          {% endif %}

  - platform: mqtt
    name: "Letzter Anruf"
    state_topic: "phone/last_call" 
    value_template: >-
      {% if value == None %}
        -
      {% else %}
        {{ value }}
      {% endif %}        
    icon: mdi:phone-classic
    
  - platform: phonebook
    sensors:
      werbeanruf:
        entity_id: sensor.letzter_anruf
        friendly_name: "Werbeanruf"
   
input_boolean:
  licht_aktiv:
    name: Licht aktiv
        
automation:
  - alias: 'Eingehender Anruf - Telefon'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
    condition:
      - condition: template
        value_template: '{{ state_attr("sensor.telefon", "from") != None }}'        
    action:
      - service: mqtt.publish       
        data_template:
          payload: '{{ state_attr(trigger.entity_id, "from") }}'          
          topic: phone/last_call
          retain: true

  - alias: 'Eingehender Anruf - Licht starten'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'        
    condition:
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off' 
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'on'        
    action:
      - service: scene.create
        data_template:
          scene_id: eingehender_anruf_licht_status
          entities:
            light.strahler:
              state: "{{ states('light.strahler') }}"     
      - service: input_boolean.turn_on
        entity_id: input_boolean.licht_aktiv
      - alias: 'Eingehender Anruf - Licht schalten'
        repeat:
          while:
            - condition: or
              conditions:                
                - condition: state
                  entity_id: sensor.telefon
                  state: 'ringing'
                - condition: state
                  entity_id: sensor.handy
                  state: 'incoming'              
          sequence:
            - service: light.toggle
              entity_id: light.strahler
            - delay:
                seconds: 1

  - alias: 'Eingehender Anruf - Licht beenden'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
      - platform: state
        entity_id: sensor.telefon
        to: 'talking'       
      - platform: state
        entity_id: sensor.handy
        to: 'idle'   
      - platform: state
        entity_id: sensor.handy
        to: 'talking'           
    condition:
      - condition: state
        entity_id: input_boolean.licht_aktiv
        state: 'on'             
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.licht_aktiv
      - service: scene.turn_on
        entity_id: scene.eingehender_anruf_licht_status

  - alias: 'Werbeanruf - Nachricht an Handy'
    trigger:
      - platform: state
        entity_id: sensor.werbeanruf
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'    
      - condition: template
        value_template: '{{ is_state("sensor.werbeanruf", "unknown") == False }}'
    action:
      - service: notify.telegram
        data_template:
          title: Werbeanruf Festnetz
          message: >
            Anrufer: {{ states(sensor.werbeanruf) }}

            Rufnummer: {{ state_attr('sensor.werbeanruf', 'number') }}

  - alias: 'Telefon aktiv - Kodi pausieren'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'          
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_pausiert
      - service: media_player.media_pause
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Telefon'
          message: >-
            {% if is_state("sensor.telefon", 'dialing') %}
              {{ state_attr('sensor.telefon', 'to_name') }} ({{ state_attr('sensor.telefon', 'to') }}) wird angerufen.
            {% elif is_state("sensor.telefon", 'ringing') %}
              {% if state_attr('sensor.telefon', 'from') == '' %}
                Ein Anruf ohne Rufnummer.
              {% elif state_attr('sensor.telefon', 'from_name')  == 'unknown' %}
                Ein Anruf von einer unbekannten Rufnummer ({{ state_attr('sensor.telefon', 'from') }}).
              {% else %}
                Anruf von {{ state_attr('sensor.telefon', 'from_name') }} ({{ state_attr('sensor.telefon', 'from') }}).
              {% endif %}
            {% endif %}
          data:
            displaytime: 5000
            icon: "info"

  - alias: 'Telefon inaktiv - Kodi wiedergeben'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'paused'
      - condition: state
        entity_id: input_boolean.kodi_pausiert
        state: 'on'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}'        
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.kodi_pausiert
      - service: media_player.media_play
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Telefon'
          message: 'Anruf beendet'
          data:
            displaytime: 2000
            icon: "info"

  - alias: 'Telefon aktiv - Soundbar deaktivieren'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'      
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'            
      - condition: or
        conditions:
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'off'          
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'idle'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: true

  - alias: 'Telefon inaktiv - Soundbar aktivieren'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: template
        value_template: '{{ state_attr("media_player.soundbar", "is_volume_muted") == True }}'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: false
          
  - alias: 'Telefon aktiv - Musik pausieren'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
      - platform: state
        entity_id: sensor.telefon
        to: 'dialing'
    condition:
      - condition: state
        entity_id: switch.wiedergabe_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'            
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.musik_pausiert
      - service: media_player.volume_mute
        data:
          entity_id: media_player.kuche, media_player.badezimmer, media_player.wohnzimmer, media_player.schlafzimmer, media_player.arbeitszimmer, media_player.flur, media_player.balkon
          is_volume_muted: true

  - alias: 'Telefon inaktiv - Musik wiedergeben'
    trigger:
      platform: state
      entity_id: sensor.telefon
      to: 'idle'
    condition:
      - condition: state
        entity_id: input_boolean.musik_pausiert
        state: 'on'
      - condition: template
        value_template: '{{ is_state("sensor.handy", "incoming") == False and is_state("sensor.handy", "outgoing") == False }}' 
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.musik_pausiert
      - service: media_player.volume_mute
        data:
          entity_id: media_player.kuche, media_player.badezimmer, media_player.wohnzimmer, media_player.schlafzimmer, media_player.arbeitszimmer, media_player.flur, media_player.balkon
          is_volume_muted: false
         
  - alias: 'Telefon aktiv - Nachricht an Handy'
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
    action:
      - service: notify.telegram
        data_template:
          title: Anruf Festnetz
          message: >-
            {% if state_attr('sensor.telefon', 'from') == None or state_attr('sensor.telefon', 'from') == '' %}
              Ein Anruf ohne Rufnummer.
            {% elif state_attr('sensor.telefon', 'from_name') == None or state_attr('sensor.telefon', 'from_name') == 'unknown' %}
              Ein Anruf von einer unbekannten Rufnummer ({{ state_attr('sensor.telefon', 'from') }}).
            {% else %}
              Anruf von {{ state_attr('sensor.telefon', 'from_name') }} ({{ state_attr('sensor.telefon', 'from') }}).
            {% endif %}

  - alias: "Telefon aktiv - TTS"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        to: 'ringing'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'on'      
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
    action:
      service: !secret tts_service
      data_template:
        message: >-
          {% if state_attr('sensor.telefon', 'from') == None or state_attr('sensor.telefon', 'from') == '' %}
            Ein eingehender Anruf ohne Rufnummer.
          {% elif state_attr('sensor.telefon', 'from_name') == None or state_attr('sensor.telefon', 'from_name') == 'unknown' %}
            Ein eingehender Anruf von einer unbekannten Rufnummer.
          {% else %}
            Ein eingehender Anruf von {{ state_attr('sensor.telefon', 'from_name') }}.
          {% endif %}

  - alias: "Telefon aktiv - Anruf verpasst"
    trigger:
      - platform: state
        entity_id: sensor.telefon
        from: 'ringing'
        to: 'idle'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'on'
    action:
      - service: persistent_notification.create
        data:
          title: "Anruf verpasst"
          notification_id: anruf_verpasst
          message: >-
            {% set from = trigger.from_state.attributes.from %}
            {% set from_name = trigger.from_state.attributes.from_name %}
            
            {% if name == None or name == '' %}
              Ein verpasster Anruf ohne Rufnummer.
            {% elif from_name == None or from_name == 'unknown' %}
              Ein verpasster Anruf von einer unbekannten Rufnummer.
            {% else %}
              Ein verpasster Anruf von {{ from_name }}.
            {% endif %}            
          
homeassistant:
  customize:
    sensor.telefon:
      icon: mdi:phone-classic      
    sensor.werbeanruf:
      icon: mdi:phone-log      