sensor:
  - platform: mqtt
    name: "Tablet Wohnzimmer Batterie"
    device_class: battery
    unit_of_measurement: '%'
    state_topic: "tablet/wohnzimmer/batterie"
    value_template: "{{ value_json.battery }}"
    json_attributes_topic: "tablet/wohnzimmer/batterie"
    json_attributes_template: "{{ value_json | tojson }}"   
    
  - platform: mqtt
    name: "Tablet Schlafzimmer Batterie"
    device_class: battery
    unit_of_measurement: '%'
    state_topic: "tablet/schlafzimmer/batterie"
    value_template: "{{ value_json.battery }}"
    json_attributes_topic: "tablet/schlafzimmer/batterie"
    json_attributes_template: "{{ value_json | tojson }}"   
      
  - platform: mqtt
    name: "Tablet Badezimmer Batterie"
    device_class: battery
    unit_of_measurement: '%'
    state_topic: "tablet/badezimmer/batterie"
    value_template: "{{ value_json.battery }}"
    json_attributes_topic: "tablet/badezimmer/batterie"
    json_attributes_template: "{{ value_json | tojson }}"   
    
  - platform: mqtt
    name: "Tablet Küche Batterie"
    device_class: battery
    unit_of_measurement: '%'
    state_topic: "tablet/kueche/batterie"
    value_template: "{{ value_json.battery }}"
    json_attributes_topic: "tablet/kueche/batterie"
    json_attributes_template: "{{ value_json | tojson }}"          
    
  - platform: mqtt
    name: "Tablet Balkon Batterie"
    device_class: battery
    unit_of_measurement: '%'
    state_topic: "tablet/balkon/batterie"
    value_template: "{{ value_json.battery }}"
    json_attributes_topic: "tablet/balkon/batterie"
    json_attributes_template: "{{ value_json | tojson }}"   

  - platform: template
    sensors:
      tablet_wohnzimmer_zuletzt_geladen:
        friendly_name: Tablet Wohnzimmer - Zuletzt geladen
        value_template: >
          {% if is_state('sensor.tablet_wohnzimmer_batterie', None) %}
            -
          {% else %}
            {% set lastCharged = state_attr('sensor.tablet_wohnzimmer_batterie','last_charged') | int %}
            {% set weekday = lastCharged | timestamp_custom("%w", True) | int %}

            {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][weekday-1] }}, {{ lastCharged | timestamp_custom("%d.%m.%Y", True) | string }}  
          {% endif %}
        device_class: timestamp
        
      tablet_badezimmer_zuletzt_geladen:
        friendly_name: Tablet Badezimmer - Zuletzt geladen
        value_template: >
          {% if is_state('sensor.tablet_badezimmer_batterie', None) %}
            -
          {% else %}
            {% set lastCharged = state_attr('sensor.tablet_badezimmer_batterie','last_charged') | int %}
            {% set weekday = lastCharged | timestamp_custom("%w", True) | int %}

            {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][weekday-1] }}, {{ lastCharged | timestamp_custom("%d.%m.%Y", True) | string }}  
          {% endif %}
        device_class: timestamp
        
      tablet_kueche_zuletzt_geladen:
        friendly_name: Tablet Küche - Zuletzt geladen
        value_template: >
          {% if is_state('sensor.tablet_kuche_batterie', None) %}
            -
          {% else %}
            {% set lastCharged = state_attr('sensor.tablet_kuche_batterie','last_charged') | int %}
            {% set weekday = lastCharged | timestamp_custom("%w", True) | int %}

            {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][weekday-1] }}, {{ lastCharged | timestamp_custom("%d.%m.%Y", True) | string }}  
          {% endif %}
        device_class: timestamp
        
      tablet_schlafzimmer_zuletzt_geladen:
        friendly_name: Tablet Schlafzimmer - Zuletzt geladen
        value_template: >
          {% if is_state('sensor.tablet_schlafzimmer_batterie', None) %}
            -
          {% else %}
            {% set lastCharged = state_attr('sensor.tablet_schlafzimmer_batterie','last_charged') | int %}
            {% set weekday = lastCharged | timestamp_custom("%w", True) | int %}

            {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][weekday-1] }}, {{ lastCharged | timestamp_custom("%d.%m.%Y", True) | string }}  
          {% endif %}
        device_class: timestamp   
        
      tablet_balkon_zuletzt_geladen:
        friendly_name: Tablet Balkon - Zuletzt geladen
        value_template: >
          {% if is_state('sensor.tablet_balkon_batterie', None) %}
            -
          {% else %}
            {% set lastCharged = state_attr('sensor.tablet_balkon_batterie','last_charged') | int %}
            {% set weekday = lastCharged | timestamp_custom("%w", True) | int %}

            {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][weekday-1] }}, {{ lastCharged | timestamp_custom("%d.%m.%Y", True) | string }}  
          {% endif %}
        device_class: timestamp           
          
automation:
  - alias: "Tablet - Batteriestand niedrig"
    id: "tablet_batteriestand_niedrig"
    trigger:
      - platform: state
        entity_id: 
          - sensor.tablet_wohnzimmer_batterie
          - sensor.tablet_schlafzimmer_batterie
          - sensor.tablet_badezimmer_batterie
          - sensor.tablet_kuche_batterie
          - sensor.tablet_balkon_batterie
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
        for:
          minutes: 3
    condition:               
      - condition: template
        value_template: >-
          {% if trigger.entity_id == 'binary_sensor.zu_hause' %}
          
            {% set tablets = expand('group.tablets') %}
            {% set min_battery_level = states('input_number.batteriestand_warnlevel') | int -%}
            {% set ns = namespace(found=False) -%}

            {% for x in tablets if x.state|int <= min_battery_level and x.attributes.is_charging == False %}
              {% set ns.found = True -%}
            {% endfor %}  

            {{ ns.found == True }}          
          {% else %}
            {% set min_battery_level = states('input_number.batteriestand_warnlevel') | int -%}
            
            {{ states('trigger.to_state.state') <= min_battery_level and state_attr('trigger.to_state.state', 'is_charging') == False }}
          {% endif %}      
    action:
      - service: !secret tts_service
        data:
          message: >-
            {% if trigger.entity_id == 'binary_sensor.zu_hause' %}

              {% set tablets = expand('group.tablets') %}
              {% set min_battery_level = states('input_number.batteriestand_warnlevel') | int -%}
              {% set ns = namespace(found=0) -%}
              
              {% for x in tablets if x.state|int <= min_battery_level and x.attributes.is_charging == False %}
                {% set ns.found = ns.found + 1 -%}
              {% endfor %}

              {% if (ns.found | int) == 1 %}
                Der Batteriestand von dem folgenden Gerät ist niedrig.
              {% elif (ns.found | int) > 1 %}
                Der Batteriestand der folgenden Geräte ist niedrig.
              {% endif %}

              {% for x in tablets if x.state|int <= min_battery_level and x.attributes.is_charging == False %}
                {%- if not loop.first %}, {% endif -%}
                {{- x.name -}}
              {% endfor %}

            {% else %}
              {% set tablet = trigger.entity_id %}
              {% set tabletBatteriestand =  states('trigger.to_state.state') | int %}
              
              {% if tablet == 'sensor.tablet_wohnzimmer_batterie' %}
                {% set tabletName = 'im Wohnzimmer' %}
              {% elif tablet == 'sensor.tablet_schlafzimmer_batterie' %}
                {% set tabletName = 'im Schlafzimmer' %}       
              {% elif tablet == 'sensor.tablet_badezimmer_batterie' %}
                {% set tabletName = 'im Badezimmer' %}   
              {% elif tablet == 'sensor.tablet_kuche_batterie' %}
                {% set tabletName = 'in der Küche' %}   
              {% elif tablet == 'sensor.tablet_balkon_batterie' %}
                {% set tabletName = 'auf dem Balkon' %}     
              {% else %}
                {% set tabletName = '' %}
              {% endif %}
              
              {{ "Das Tablet " ~ tabletName ~ " muss aufgeladen werden. Der Batteriestand beträgt " ~ tabletBatteriestand ~ " Prozent." }}
            {% endif %}
    
  - alias: "Tablet - Aufgeladen"
    id: "tablet_aufgeladen"
    trigger:
      - platform: state
        entity_id: 
          - sensor.tablet_wohnzimmer_batterie
          - sensor.tablet_schlafzimmer_batterie
          - sensor.tablet_badezimmer_batterie
          - sensor.tablet_kuche_batterie
          - sensor.tablet_balkon_batterie
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
        for:
          minutes: 4
    condition:
      - condition: template
        value_template: >-
          {% if trigger.entity_id == 'binary_sensor.zu_hause' %}         
            {% set ns = namespace(found=false) -%}
            {% set tablets = expand('group.tablets') %}
            
            {% for x in tablets if x.state|int > 99 and x.attributes.is_charging == True %}             
              {% set ns.found = true -%}
            {% endfor %}  

            {{ ns.found == True }}          
          {% else %}            
            {{ states('trigger.to_state.state') > 99 and state_attr('trigger.to_state.state', 'is_charging') == True }}
          {% endif %}      
    action:
      - service: !secret tts_service
        data:
          message: >-
            {% if trigger.entity_id == 'binary_sensor.zu_hause' %}

              {% set tablets = expand('group.tablets') %}
              {% set min_battery_level = states('input_number.batteriestand_warnlevel') | int -%}
              {% set ns = namespace(found=0) -%}
              
              {% for x in tablets if x.state|int > 99 and x.attributes.is_charging == True %}
                {% set ns.found = ns.found + 1 -%}
              {% endfor %}

              {% if (ns.found | int) == 1 %}
                Das folgende Gerät wurde vollständig aufgeladen.
              {% elif (ns.found | int) > 1 %}
                Die folgenden Geräte wurden vollständig aufgeladen.
              {% endif %}

              {% for x in tablets if x.state|int > 99 and x.attributes.is_charging == True %}
                {%- if not loop.first %}, {% endif -%}
                {{- x.name -}}
              {% endfor %}

            {% else %}
              {% set tablet = trigger.entity_id %}
              
              {% if tablet == 'sensor.tablet_wohnzimmer_batterie' %}
                {% set tabletName = 'im Wohnzimmer' %}
              {% elif tablet == 'sensor.tablet_schlafzimmer_batterie' %}
                {% set tabletName = 'im Schlafzimmer' %}       
              {% elif tablet == 'sensor.tablet_badezimmer_batterie' %}
                {% set tabletName = 'im Badezimmer' %}   
              {% elif tablet == 'sensor.tablet_kuche_batterie' %}
                {% set tabletName = 'in der Küche' %}   
              {% elif tablet == 'sensor.tablet_balkon_batterie' %}
                {% set tabletName = 'auf dem Balkon' %}     
              {% else %}
                {% set tabletName = '' %}
              {% endif %}
              
              {{ "Das Tablet " ~ tabletName ~ " wurde vollständig aufgeladen." }}
            {% endif %}
    
homeassistant:
  customize:
    sensor.tablet_schlafzimmer_batterie:
      friendly_name: Tablet Schlafzimmer   
    sensor.tablet_badezimmer_batterie:
      friendly_name: Tablet Badezimmer
    sensor.tablet_wohnzimmer_batterie:
      friendly_name: Tablet Wohnzimmer
    sensor.tablet_kuche_batterie:
      friendly_name: Tablet Küche
    sensor.tablet_balkon_batterie:
      friendly_name: Tablet Balkon