vacuum:
  - platform: xiaomi_miio
    host: !secret xiaomi_vacuum_host
    token: !secret xiaomi_vacuum_token

input_boolean:
  xiaomi_vacuum_automatische_reinigung:
    name: Automatische Reinigung
    icon: mdi:flash-auto
    initial: on

sensor:
  - platform: template
    sensors:
      letzte_reinigung:
        friendly_name: Letzte Reinigung
        unit_of_measurement: 'Uhr'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        icon_template: mdi:clock-end
        value_template: >-
          {% set lastClean = state_attr("vacuum.xiaomi_vacuum_cleaner", "clean_stop") %}
          {{ as_timestamp(lastClean) | timestamp_custom("%d.%m.%Y %H:%M", True) | string }}

      reinigung_filter:
        friendly_name: Reinigung Filter
        unit_of_measurement: 'Stunden'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        icon_template: mdi:progress-clock
        value_template: >-
          {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "filter_left") }}

      reinigung_buerste:
        friendly_name: Reinigung Bürste
        unit_of_measurement: 'Stunden'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        icon_template: mdi:progress-clock
        value_template: >-
          {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "main_brush_left") }}

      reinigung_seitenbuerste:
        friendly_name: Reinigung Seitenbürste
        unit_of_measurement: 'Stunden'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        icon_template: mdi:progress-clock
        value_template: >-
          {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "side_brush_left") }}

      reinigung_behaelter:
        friendly_name: Reinigung Behälter
        unit_of_measurement: 'Stunden'
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        icon_template: mdi:progress-clock
        value_template: >-
          {{ state_attr("vacuum.xiaomi_vacuum_cleaner", "sensor_dirty_left") }}

      xiaomi_vacuum_batterie:
        friendly_name: Batterie
        device_class: battery
        entity_id:
          - vacuum.xiaomi_vacuum_cleaner
        value_template: >
          {% if is_state('vacuum.xiaomi_vacuum_cleaner', 'unknown') %}
            0
          {% else %}
            {{ state_attr("vacuum.xiaomi_vacuum_cleaner","battery_level") | float }}
          {% endif %}
        unit_of_measurement: '%'

automation:
  - alias: "Automatische Reinigung"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'off'
        for:
          minutes: 15
      - platform: time
        at: '7:00:00'
    condition:
      condition: and
      conditions:
        - condition: time
          after: '06:00'
          before: '22:00'
        - condition: state
          entity_id: vacuum.xiaomi_vacuum_cleaner
          state: 'docked'
        - condition: state
          entity_id: input_boolean.xiaomi_vacuum_automatische_reinigung
          state: 'on'
        - condition: state
          entity_id: binary_sensor.zu_hause
          state: 'off'
        - condition: or
          conditions:
            - condition: state
              entity_id: binary_sensor.arbeitstag
              state: 'on'
            - condition: template
              value_template: '{{ now().isoweekday() == 6 }}'
        - condition: template
          value_template: >-
            {% set letzte_reinigung = as_timestamp(state_attr("vacuum.xiaomi_vacuum_cleaner", "clean_stop")) | timestamp_custom("%s", True) | int  %}
            {% set now = now().strftime("%s") | int %}
            {% set abstand_stunden = ((now - letzte_reinigung | timestamp_custom("%s") | int) / 3600) | int %}

            {{ True if abstand_stunden >= 24 else False }}
        - condition: or
          conditions:
            - condition: template
              value_template: '{{ now().isoweekday() == 1 or now().isoweekday() == 4 }}'
            - condition: template
              value_template: >-
                {% set letzte_reinigung = as_timestamp(state_attr("vacuum.xiaomi_vacuum_cleaner", "clean_stop")) | timestamp_custom("%s", True) | int  %}
                {% set now = now().strftime("%s") | int %}
                {% set abstand_tage = ((now - letzte_reinigung | timestamp_custom("%s") | int) / 86400) | int %}

                {{ True if abstand_tage >= 3 else False }}
    action:
      - service: vacuum.start
        entity_id: vacuum.xiaomi_vacuum_cleaner
      - service: notify.telegram
        data_template:
          title: 'Staubsaugen gestartet'
          message: 'Das Saugen der Wohnung wurde gestartet.'

  - alias: "Staubsaugen beendet"
    trigger:
      - platform: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        from: 'returning'
        to: 'docked'
    action:
      - service: notify.telegram
        data_template:
          title: 'Staubsaugen beendet'
          message: 'Die Wohnung wurde vollständig gesaugt.'

  - alias: "Staubsaugen Fehler"
    trigger:
      - platform: state
        entity_id: vacuum.xiaomi_vacuum_cleaner
        to: 'error'
    action:
      - service: notify.telegram
        data_template:
          title: 'Fehler beim Staubsaugen'
          message: 'Während des Staubsaugens ist ein Fehler aufgetreten.'

homeassistant:
  customize:
    vacuum.xiaomi_vacuum_cleaner:
      friendly_name: Xiaomi Robot