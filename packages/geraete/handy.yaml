input_boolean:
  nicht_stoeren:
    name: Nicht stÃ¶ren
    icon: mdi:do-not-disturb
    
device_tracker:
  - platform: phonetrack
    url: !secret phonetrack_url
    token: !secret phonetrack_token
    devices:
      - HandyGPS

  - platform: mqtt
    source_type: 'router'
    devices:
      handymqtt: 'location/handy'   
      
  - platform: ping
    hosts:
      handyping: !secret handy_host

proximity:
  home:
    devices:      
      - device_tracker.handygps
      - device_tracker.handymqtt
    tolerance: 50
       
sensor:
  - platform: places
    name: Aufenthaltsort Handy
    devicetracker_id: device_tracker.handygps
    options: street_street_number,city
    api_key: !secret openstreetmap_email
    map_provider: google
    
  - platform: mqtt
    name: "Handy Batterie"
    device_class: battery
    unit_of_measurement: '%'
    state_topic: "handy/batterie"
    value_template: "{{ value_json.battery }}"
    json_attributes_topic: "handy/batterie"
    json_attributes_template: "{{ value_json | tojson }}"   
    
  - platform: mqtt
    name: "Handy"
    state_topic: "handy/status"
    value_template: "{{ value_json.status }}"   
    json_attributes_topic: "handy/status"
    json_attributes_template: "{{ value_json | tojson }}"   

  - platform: template
    sensors:
      handy_status:
        friendly_name: Handy
        value_template: >-
          {% if is_state('sensor.handy', 'incoming') %}
            Eingehender Anruf
          {% elif is_state('sensor.handy', 'outgoing') %}
            Ausgehender Anruf
          {% elif is_state('sensor.handy', 'talking') %}
            Aktiver Anruf            
          {% elif is_state('sensor.handy', 'sms') %}
            Ungelesene SMS
          {% else %}
            Ruhezustand
          {% endif %}
        icon_template: >
          {% if is_state('sensor.handy', 'incoming') %}
            mdi:phone-incoming
          {% elif is_state('sensor.handy', 'outgoing') %}
            mdi:phone-outgoing
          {% elif is_state('sensor.handy', 'talking') %}
            mdi:phone-in-talk            
          {% elif is_state('sensor.handy', 'sms') %}
            mdi:message-alert
          {% else %}   
            mdi:phone
          {% endif %}      
          
      handy_zuletzt_geladen:
        friendly_name: Handy - Zuletzt geladen
        value_template: >
          {% if is_state('sensor.handy_batterie', None) %}
            -
          {% else %}
            {% set lastCharged = state_attr('sensor.handy_batterie','last_charged') | int %}
            {% set weekday = lastCharged | timestamp_custom("%w", True) | int %}

            {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][weekday-1] }}, {{ lastCharged | timestamp_custom("%d.%m.%Y", True) | string }}  
          {% endif %}
        device_class: timestamp
        
automation: 
  - alias: "Handy aktiv - Kodi Wohnzimmer pausieren"
    id: "handy_aktiv_kodi_wohnzimmer_pausieren"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
      - platform: state
        entity_id: sensor.handy
        to: 'outgoing'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'              
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_wohnzimmer_pausiert
      - service: media_player.media_pause
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Handy'
          message: >-
            {% set name = state_attr('sensor.handy', 'anrufer') %}
            {% set number = state_attr('sensor.handy', 'number') %}
            
            {% if is_state("sensor.handy", "outgoing") %}
              {% if name == number %}
                {{ state_attr('sensor.handy', 'name') }} wird angerufen.
              {% else %}
                {{ state_attr('sensor.handy', 'name') }} ({{ state_attr('sensor.handy', 'number') }}) wird angerufen.
              {% endif %}
              
            {% elif is_state("sensor.handy", "incoming") %}
              {% if name == number %}
                Eingehender Anruf von {{ state_attr('sensor.handy', 'anrufer') }}.
              {% else %}
                Eingehender Anruf von {{ state_attr('sensor.handy', 'anrufer') }} ({{ state_attr('sensor.handy', 'number') }}).
              {% endif %}                          
            {% endif %}                                 
          data:
            displaytime: 5000
            icon: "info"

  - alias: "Handy inaktiv - Kodi Wohnzimmer wiedergeben"
    id: "handy_inaktiv_kodi_wohnzimmer_wiedergeben"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'paused'
      - condition: state
        entity_id: input_boolean.kodi_wohnzimmer_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.kodi_wohnzimmer_pausiert
      - service: media_player.media_play
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Handy'
          message: 'Anruf beendet'
          data:
            displaytime: 2000
            icon: "info"
 
  - alias: "Handy aktiv - Youtube Wohnzimmer pausieren"
    id: "handy_aktiv_youtube_wohnzimmer_pausieren"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
      - platform: state
        entity_id: sensor.handy
        to: 'outgoing'
    condition:
      - condition: state
        entity_id: binary_sensor.youtube_wohnzimmer_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'              
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.youtube_wohnzimmer_pausiert
      - service: switch.turn_on
        entity_id: switch.computer_wiedergabe

  - alias: "Handy inaktiv - Youtube Wohnzimmer wiedergeben"
    id: "handy_inaktiv_youtube_wohnzimmer_wiedergeben"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'idle'
    condition:
      - condition: state
        entity_id: input_boolean.youtube_wohnzimmer_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.youtube_wohnzimmer_pausiert      
      - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.youtube_wohnzimmer_aktiv
              state: 'on'
            sequence:
              - service: switch.turn_on
                entity_id: switch.computer_wiedergabe            

  - alias: "Handy aktiv - Soundbar deaktivieren"
    id: "handy_aktiv_soundbar_deaktivieren"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
      - platform: state
        entity_id: sensor.handy
        to: 'outgoing'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'      
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'
      - condition: state
        entity_id: binary_sensor.youtube_wohnzimmer_aktiv
        state: 'off'        
      - condition: or
        conditions:
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'off'          
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'idle'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: true

  - alias: "Handy inaktiv - Soundbar aktivieren"
    id: "handy_inaktiv_soundbar_aktivieren"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: template
        value_template: '{{ state_attr("media_player.soundbar", "is_volume_muted") == True }}'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: false      
          
  - alias: "Handy aktiv - Musik pausieren"
    id: "handy_aktiv_musik_pausieren"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
      - platform: state
        entity_id: sensor.handy
        to: 'outgoing'
    condition:
      - condition: state
        entity_id: switch.wiedergabe_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'      
      - condition: state
        entity_id: input_boolean.telefon_musik_pausiert
        state: 'off'        
      - condition: state
        entity_id: input_boolean.tuer_musik_pausiert
        state: 'off'
      - condition: state
        entity_id: input_boolean.home_office_musik_pausiert
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.telefon_musik_pausiert
      - service: switch.turn_on
        entity_id: switch.radios_lautlos

  - alias: "Handy inaktiv - Musik wiedergeben"
    id: "handy_inaktiv_musik_wiedergeben"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'idle'
    condition:
      - condition: state
        entity_id: input_boolean.telefon_musik_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.telefon_musik_pausiert
      - service: switch.turn_off
        entity_id: switch.radios_lautlos

  - alias: "Handy aktiv - Benachrichtigung"
    id: "handy_aktiv_benachrichtigung"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
    condition:
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
    action:
      - service: !secret tts_service
        data:
          message: >-       
            {% if is_state_attr('sensor.handy', 'anrufer', None) == False and state_attr('sensor.handy', 'anrufer') != '-' and state_attr('sensor.handy', 'anrufer').startswith('+') == False %}
              {% set messageString = state_attr('sensor.handy', 'anrufer') %}
            {% else %}
              {% set messageString = 'einer unbekannten Rufnummer' %}            
            {% endif %}
            
            Ein eingehender Anruf von {{ messageString }}.
          
  - alias: "Handy - Neue SMS"
    id: "handy_neue_sms"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'sms'
    condition:
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'
    action:
      - service: !secret tts_service
        data:
          message: >-
            Eine neue SMS von {% if state_attr('sensor.handy', 'anrufer') != '-' and state_attr('sensor.handy', 'anrufer').startswith('+') == False and state_attr('sensor.handy', 'anrufer').startswith('0') == False %}"{{ state_attr('sensor.handy', 'anrufer') }}"{% else %}einer unbekannten Nummer{% endif %} ist eingegangen.
            {% if state_attr('sensor.handy', 'text') != null %} {{ state_attr('sensor.handy', 'text') }} {% endif %}
      - service: persistent_notification.create        
        data:
          title: >-
            {% if state_attr('sensor.handy', 'anrufer') != '-' and state_attr('sensor.handy', 'anrufer').startswith('+') == False and state_attr('sensor.handy', 'anrufer').startswith('0') == False %} {{ state_attr('sensor.handy', 'anrufer') }} {% else %}Unbekannte Nummer{% endif %}
          message: >-
            {% if state_attr('sensor.handy', 'text') != null %} {{ state_attr('sensor.handy', 'text') }} {% endif %}
          notification_id: neue_sms                  
      - choose:
          - conditions:
              - condition: state
                entity_id: media_player.kodi_wohnzimmer
                state: 'playing'
            sequence:
              - service: notify.kodi_wohnzimmer
                data:
                  title: 'Handy'
                  message: >-
                    {% set name = state_attr('sensor.handy', 'anrufer') | string %}

                    {% if name.startswith('+') or name.startswith('0') or name == '-' %}
                      Eine neue SMS ist eingegangen.
                    {% else %}
                      Eine neue SMS von {{ name }} ist eingegangen.
                    {% endif %}
                  data:
                    displaytime: 3000
                    icon: "info"
              - condition: template
                value_template: >-
                  {{ state_attr('sensor.handy', 'text') != '-' }}
              - delay: '00:00:03'
              - service: notify.kodi_wohnzimmer
                data:
                  title: 'Handy'
                  message: >-
                    {{ state_attr('sensor.handy', 'text') }}
                  data:
                    displaytime: 6000
                    icon: "info"

  - alias: "Handy - SMS gelesen"
    id: "handy_sms_gelesen"  
    trigger: 
      - platform: state
        entity_id: sensor.handy
        to: 'idle'
      - platform: event
        event_type: call_service
        event_data:
          domain: persistent_notification
          service: dismiss
    condition:
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ trigger.entity_id == 'sensor.handy' and trigger.from_state.state == 'sms' }}"
          - condition: template
            value_template: "{{ trigger.event.data.service_data.notification_id == 'neue_sms' }}"
    action:
      - choose:
          - conditions:
            - condition: template
              value_template: "{{ trigger.entity_id == 'sensor.handy' }}"
            sequence:
              - service: persistent_notification.dismiss  
                data:              
                  notification_id: neue_sms
        default:
          - service: mqtt.publish
            data:
               topic: 'handy/status'
               payload: '{"date":"-","anrufer":"-","number":"-","status":"idle","text":"-","time":"-"}'
               retain: true

  - alias: "Handy - Batteriestand niedrig"
    id: "handy_batteriestand_niedrig"
    trigger:
      - platform: state
        entity_id: sensor.handy_batterie
    condition:
      - condition: numeric_state
        entity_id: sensor.handy_batterie
        below: 16
      - condition: template
        value_template: '{{ state_attr("sensor.handy_batterie", "is_charging") == False }}'
    action:
      - service: !secret tts_service
        data_template:
          message: "Das Handy muss aufgeladen werden. Der Batteriestand betrÃ¤gt {{ states('sensor.handy_batterie') | int }} Prozent."

  - alias: "Handy - Aufgeladen"
    id: "handy_aufgeladen"
    trigger:
      - platform: state
        entity_id: sensor.handy_batterie
    condition:
      - condition: numeric_state
        entity_id: sensor.handy_batterie
        above: 99
      - condition: template
        value_template: '{{ state_attr("sensor.handy_batterie", "is_charging") == True }}'
    action:
      - service: !secret tts_service
        data_template:
          message: "Das Handy wurde vollstÃ¤ndig aufgeladen."

homeassistant:
  customize:
    sensor.handy_batterie:
      friendly_name: Handy
    sensor.handy:
      friendly_name: Handy Status