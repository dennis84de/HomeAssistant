input_boolean:
  nicht_stoeren:
    name: Nicht stÃ¶ren
    initial: off

sensor:
  - platform: mqtt
    name: "Handy Batterie"
    device_class: battery
    unit_of_measurement: '%'
    state_topic: "handy/batterie"
    value_template: "{{ value_json.battery }}"
    json_attributes_topic: "handy/batterie"
    json_attributes_template: "{{ value_json | tojson }}"   
    
  - platform: mqtt
    name: "Handy"
    state_topic: "handy/status"
    value_template: "{{ value_json.status }}"   
    json_attributes_topic: "handy/status"
    json_attributes_template: "{{ value_json | tojson }}"   

  - platform: template
    sensors:
      handy_status:
        friendly_name: Handy
        entity_id:
          - sensor.handy
        value_template: >-
          {% if is_state('sensor.handy', 'incoming') %}
            Eingehender Anruf
          {% elif is_state('sensor.handy', 'outgoing') %}
            Ausgehender Anruf
          {% elif is_state('sensor.handy', 'sms') %}
            Ungelesene SMS
          {% else %}
            Ruhezustand
          {% endif %}
        icon_template: >
          {% if is_state('sensor.handy', 'incoming') %}
            mdi:phone-incoming
          {% elif is_state('sensor.handy', 'outgoing') %}
            mdi:phone-outgoing
          {% elif is_state('sensor.handy', 'sms') %}
            mdi:message-alert
          {% else %}   
            mdi:phone
          {% endif %}          
      handy_zuletzt_geladen:
        friendly_name: Handy - Zuletzt geladen
        entity_id:
          - sensor.handy_batterie
        value_template: >
          {% if is_state('sensor.handy_batterie', None) %}
            -
          {% else %}
            {% set lastCharged = state_attr('sensor.handy_batterie','last_charged') | int %}
            {% set weekday = lastCharged | timestamp_custom("%w", True) | int %}

            {{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][weekday-1] }}, {{ lastCharged | timestamp_custom("%d.%m.%Y", True) | string }}  
          {% endif %}
        device_class: timestamp
        
automation:
  - alias: 'Eingehender Anruf - Handy'
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
    condition:
      - condition: template
        value_template: '{{ state_attr("sensor.handy", "number") != None }}'        
    action:
      - service: mqtt.publish
        data_template:
          payload: '{{ state_attr(trigger.entity_id, "number") }}'          
          topic: phone/last_call
          retain: true
#          payload: >-
#            {% set date = state_attr(trigger.entity_id, "date") %}
#            {% set time = state_attr(trigger.entity_id, "time") %}
#   
#            {{ '{"number": "{{ state_attr(trigger.entity_id, "number") }}", "name": "{{ state_attr(trigger.entity_id, "name") }}", "date": "{{ date }} {{ time }}"}' }}
          
  - alias: 'Handy aktiv - Kodi pausieren'
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
      - platform: state
        entity_id: sensor.handy
        to: 'outgoing'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.kodi_pausiert
      - service: media_player.media_pause
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Handy'
          message: >-
            {% set name = state_attr('sensor.handy', 'name') %}
            {% set number = state_attr('sensor.handy', 'number') %}
            
            {% if is_state("sensor.handy", "outgoing") %}
              {% if name == number %}
                {{ state_attr('sensor.handy', 'name') }} wird angerufen.
              {% else %}
                {{ state_attr('sensor.handy', 'name') }} ({{ state_attr('sensor.handy', 'number') }}) wird angerufen.
              {% endif %}
              
            {% elif is_state("sensor.handy", "incoming") %}
              {% if name == number %}
                Eingehender Anruf von {{ state_attr('sensor.handy', 'name') }}.
              {% else %}
                Eingehender Anruf von {{ state_attr('sensor.handy', 'name') }} ({{ state_attr('sensor.handy', 'number') }}).
              {% endif %}                          
            {% endif %}                                 
          data:
            displaytime: 5000
            icon: "info"

  - alias: 'Handy inaktiv - Kodi wiedergeben'
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'paused'
      - condition: state
        entity_id: input_boolean.kodi_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.kodi_pausiert
      - service: media_player.media_play
        entity_id: media_player.kodi_wohnzimmer
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Handy'
          message: 'Anruf beendet'
          data:
            displaytime: 2000
            icon: "info"

  - alias: 'Handy aktiv - Soundbar deaktivieren'
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
      - platform: state
        entity_id: sensor.handy
        to: 'outgoing'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'      
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'            
      - condition: or
        conditions:
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'off'          
          - condition: state
            entity_id: media_player.kodi_wohnzimmer
            state: 'idle'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: true

  - alias: 'Handy inaktiv - Soundbar aktivieren'
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'idle'
    condition:
      - condition: state
        entity_id: media_player.soundbar
        state: 'on'
      - condition: template
        value_template: '{{ state_attr("media_player.soundbar", "is_volume_muted") == True }}'
    action:
      - service: media_player.volume_mute
        data:
          entity_id: media_player.soundbar
          is_volume_muted: false
          
  - alias: 'Handy aktiv - Musik pausieren'
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
      - platform: state
        entity_id: sensor.handy
        to: 'outgoing'
    condition:
      - condition: state
        entity_id: switch.wiedergabe_aktiv
        state: 'on'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'        
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.musik_pausiert
      - service: media_player.volume_mute
        data:
          entity_id: media_player.kuche, media_player.badezimmer, media_player.wohnzimmer, media_player.schlafzimmer, media_player.arbeitszimmer, media_player.flur, media_player.balkon
          is_volume_muted: true

  - alias: 'Handy inaktiv - Musik wiedergeben'
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'idle'
    condition:
      - condition: state
        entity_id: input_boolean.musik_pausiert
        state: 'on'
      - condition: state
        entity_id: sensor.telefon
        state: 'idle'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.musik_pausiert
      - service: media_player.volume_mute
        data:
          entity_id: media_player.kuche, media_player.badezimmer, media_player.wohnzimmer, media_player.schlafzimmer, media_player.arbeitszimmer, media_player.flur, media_player.balkon
          is_volume_muted: false

  - alias: "Handy - Eingehender Anruf - TTS"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'incoming'
    condition:
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
    action:
      service: !secret tts_service
      data_template:
        message: >-
          Ein eingehender Anruf von {% if state_attr('sensor.handy', 'name') != '-' and state_attr('sensor.handy', 'name').startswith('+') == False %}{{ state_attr('sensor.handy', 'name') }}{% else %}einer unbekannten Nummer{% endif %}.

  - alias: "Handy - Neue SMS - TTS"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'sms'
    condition:
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
      - condition: state
        entity_id: binary_sensor.besuch
        state: 'off'        
    action:
      service: !secret tts_service
      data_template:
        message: >-
          Eine neue SMS von {% if state_attr('sensor.handy', 'name') != '-' and state_attr('sensor.handy', 'name').startswith('+') == False and state_attr('sensor.handy', 'name').startswith('0') == False %}"{{ state_attr('sensor.handy', 'name') }}"{% else %}einer unbekannten Nummer{% endif %} ist eingegangen.
          {% if state_attr('sensor.handy', 'text') != null %} {{ state_attr('sensor.handy', 'text') }} {% endif %}
          
  - alias: "Handy - Neue SMS - Nachricht"
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'sms'
    condition:
      - condition: template      
        value_template: "{{ state_attr('sensor.handy', 'text') != null }}"
    action:
      - service: persistent_notification.create        
        data_template:
          title: >-
            {% if state_attr('sensor.handy', 'name') != '-' and state_attr('sensor.handy', 'name').startswith('+') == False and state_attr('sensor.handy', 'name').startswith('0') == False %} {{ state_attr('sensor.handy', 'name') }} {% else %}Unbekannte Nummer{% endif %}
          message: >-
            {% if state_attr('sensor.handy', 'text') != null %} {{ state_attr('sensor.handy', 'text') }} {% endif %}
          notification_id: neue_sms

  - alias: 'Handy - Neue SMS - Kodi'
    trigger:
      - platform: state
        entity_id: sensor.handy
        to: 'sms'
    condition:
      - condition: state
        entity_id: media_player.kodi_wohnzimmer
        state: 'playing'
      - condition: state
        entity_id: input_boolean.nicht_stoeren
        state: 'off'
    action:
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Handy'
          message: >-
            {% set name = state_attr('sensor.handy', 'name') | string %}

            {% if name.startswith('+') or name.startswith('0') or name == '-' %}
              Eine neue SMS ist eingegangen.
            {% else %}
              Eine neue SMS von {{ name }} ist eingegangen.
            {% endif %}
          data:
            displaytime: 3000
            icon: "info"
      - condition: template
        value_template: >-
          {{ state_attr('sensor.handy', 'text') != '-' }}
      - delay: '00:00:03'
      - service: notify.kodi_wohnzimmer
        data:
          title: 'Handy'
          message: >-
            {{ state_attr('sensor.handy', 'text') }}
          data:
            displaytime: 6000
            icon: "info"

  - alias: "Handy - SMS gelesen"
    trigger: 
      - platform: state
        entity_id: sensor.handy
        to: 'idle'          
    condition:    
      - condition: template     
        value_template: '{{ trigger.from_state.state == "sms" }}'
    action:
      - service: persistent_notification.dismiss  
        data:              
          notification_id: neue_sms           

  - alias: "Handy - Benachrichtigung ausgeblendet"
    trigger:
      - platform: event
        event_type: call_service
        event_data:
          domain: persistent_notification
          service: dismiss           
    condition:
      - condition: template
        value_template: >-
          {% if trigger.event.data.service_data.notification_id == "neue_sms" %}
            True
          {% else %}
            False
          {% endif %}
    action:
      - service: mqtt.publish
        data_template:
           topic: 'handy/status'
           payload: '{"date":"-","name":"-","number":"-","status":"idle","text":"-","time":"-"}'
           retain: true

  - alias: "Handy - Batteriestand niedrig"
    trigger:
      - platform: state
        entity_id: sensor.handy_batterie
    condition:
      - condition: numeric_state
        entity_id: sensor.handy_batterie
        below: 16
      - condition: template
        value_template: '{{ state_attr("sensor.handy_batterie", "is_charging") == False }}'
    action:
      - service: !secret tts_service
        data_template:
          message: "Das Handy muss aufgeladen werden. Der Batteriestand betrÃ¤gt {{ states('sensor.handy_batterie') | int }} Prozent."

  - alias: "Handy - Aufgeladen"
    trigger:
      - platform: state
        entity_id: sensor.handy_batterie
    condition:
      - condition: numeric_state
        entity_id: sensor.handy_batterie
        above: 99
      - condition: template
        value_template: '{{ state_attr("sensor.handy_batterie", "is_charging") == True }}'
    action:
      - service: !secret tts_service
        data_template:
          message: "Das Handy wurde vollstÃ¤ndig aufgeladen."

homeassistant:
  customize:
    sensor.handy_batterie:
      friendly_name: Handy
    sensor.handy:
      friendly_name: Handy Status
    input_boolean.nicht_stoeren:
      icon: mdi:do-not-disturb