fan:
  - platform: xiaomi_miio_fan
    name: Ventilator
    host: !secret xiaomi_fan_host
    token: !secret xiaomi_fan_token

input_boolean:
  ventilator_timer_aktiv:
    name: Timer aktiv
    initial: off
    icon: mdi:timer-off

input_select:
  ventilator_drehungswinkel:
    name: Drehungswinkels
    options:
      - '120'
      - '90'
      - '60'
      - '30'
      
  ventilator_timer:
    name: Timer Ventilator
    options:
      - 30
      - 60
      - 90
      - 120
      - 180
      - 240
    initial: 90
    icon: mdi:clock-end

timer:
  ventilator:
    name: Timer
    icon: mdi:timer-off
    duration: 4200

sensor:
  - platform: template
    sensors:
      ventilator_drehungswinkel:
        friendly_name: "Drehungswinkel"
        value_template: >-
          {% if is_state('fan.ventilator', 'unknown') or states.fan.ventilator == None %}
            0
          {% else %}
            {{ state_attr("fan.ventilator", "angle") | int(0) }}
          {% endif %}

      ventilator_batterie:
        friendly_name: "Batterie"
        value_template: >-
          {% if is_state('fan.ventilator', 'unknown') or states.fan.ventilator == None %}
            0
          {% else %}
            {{ state_attr("fan.ventilator", "battery") }}
          {% endif %}
        unit_of_measurement: "%"
        device_class: battery
        icon_template: >-
          {% if state_attr("fan.ventilator", "battery_charge") == 'progress' and state_attr("fan.ventilator", "ac_power") == True %}
            mdi:battery-charging
          {% elif state_attr("fan.ventilator", "battery_charge") == 'complete' and state_attr("fan.ventilator", "ac_power") == True %}
            mdi:power-plug
          {% else %}
            mdi:power-plug-off
          {% endif %}

      ventilator_timer:
        friendly_name: Restzeit
        icon_template: mdi:timer-off
        value_template: >-
          {%- if is_state('input_boolean.ventilator_timer_aktiv', 'on') %}            
            {% set now = as_timestamp(now()) %}
            {% set last = as_timestamp(state_attr('automation.ventilator_timer_gestartet', 'last_triggered'), None) %}              
            {% set duration = states('input_select.ventilator_timer') | int(0) %}
            {% set diff = (duration - ((now - last) / 60)) | int(0) %}

            {% if diff < 0 %}
              {{ duration }}
            {% else %}
              {{ diff }}
            {% endif %}
          {% else %}
              -
          {%- endif %}

switch:
  - platform: template
    switches:
      ventilator_natuerlicher_wind:
        friendly_name: "Natürlicher Wind"
        value_template: "{{ is_state('fan.ventilator', 'on') and state_attr('fan.ventilator', 'natural_speed') != 0 }}"
        icon_template: >-
          {% if is_state('fan.ventilator', 'on') and state_attr('fan.ventilator', 'natural_level') != 0 %}
            mdi:weather-windy
          {% else %}
            mdi:weather-windy-variant
          {% endif %}
        turn_on:
          service: xiaomi_miio_fan.fan_set_natural_mode_on
          data:
            entity_id: fan.ventilator
        turn_off:
          service: xiaomi_miio_fan.fan_set_natural_mode_off
          data:
            entity_id: fan.ventilator

automation:
  - alias: "Ventilator Winkel - Slider geändert"
    id: "ventilator_winkel_slider_geaendert"
    trigger:
      - platform: state
        entity_id: input_select.ventilator_drehungswinkel
    condition:
      - condition: state
        entity_id: fan.ventilator
        state: 'on'        
    action:
      - service: xiaomi_miio_fan.fan_set_oscillation_angle
        data:
          entity_id: fan.ventilator
          angle: '{{ trigger.to_state.state | int(0) }}'

  - alias: "Ventilator Winkel - Sensor geändert"
    id: "ventilator_winkel_sensor_geaendert"
    trigger:
      - platform: state
        entity_id: sensor.ventilator_drehungswinkel
    condition:
      - condition: state
        entity_id: fan.ventilator
        state: 'on'        
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.ventilator_drehungswinkel
          option: '{{ trigger.to_state.state }}'

  - alias: "Ventilator - Timer gestartet"
    id: "ventilator_timer_gestartet"
    trigger:
      - platform: state
        entity_id: input_boolean.ventilator_timer_aktiv
        to: 'on'
      - platform: state
        entity_id: input_select.ventilator_timer
    action:
      - service: fan.turn_on
        entity_id: fan.ventilator
      - service: input_boolean.turn_on
        entity_id: input_boolean.ventilator_timer_aktiv
      - service: timer.start
        entity_id: timer.ventilator
        data:
          duration: >
            {{ states('input_select.ventilator_timer') | int(0) }}

  - alias: "Ventilator - Timer abgebrochen"
    id: "ventilator_timer_abgebrochen"
    trigger:
      platform: state
      entity_id: input_boolean.ventilator_timer_aktiv
      to: 'off'
    action:
      - service: timer.cancel
        entity_id: timer.ventilator

  - alias: "Ventilator - Timer beendet"
    id: "ventilator_timer_beendet"
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.ventilator
    action:
      - service: fan.turn_off
        entity_id: fan.ventilator
      - service: input_boolean.turn_off
        entity_id: input_boolean.ventilator_timer_aktiv