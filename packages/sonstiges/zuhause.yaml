device_tracker:
  - platform: phonetrack
    url: !secret phonetrack_url
    token: !secret phonetrack_token
    devices:
      - HandyGPS

  - platform: mqtt
    devices:
      handymqtt: 'location/handy'

person:
  - name: Dennis
    id: dennis
    device_trackers:
      - device_tracker.handy
      - device_tracker.handygps
      - device_tracker.handymqtt

input_boolean:
  zu_hause_begruessung:
    name: "Begrüßung"

proximity:
  home:
    devices:
      - device_tracker.handy
      - device_tracker.handygps
    tolerance: 50

shell_command:
  send_position: "curl -X POST '{{ url }}?lat={{ states.device_tracker.netzwerkdj.attributes.latitude }}&lon={{ states.device_tracker.netzwerkdj.attributes.longitude }}&timestamp={{ as_timestamp(now()) | int }}'"

sensor:
  - platform: places
    name: Aufenthaltsort Handy
    devicetracker_id: device_tracker.handygps
    options: street_street_number,city
    api_key: !secret openstreetmap_email
    scan_interval: 60

binary_sensor:
  - platform: template
    sensors:
      zu_hause:
        friendly_name: "zu Hause"
        device_class: presence
        value_template: >-
          {% if (is_state('person.dennis', 'home') or is_state('device_tracker.handy', 'home') or is_state('device_tracker.handygps', 'home')) or is_state('device_tracker.handymqtt', 'on') %}
            true
          {% else %}
            false
          {% endif %}

automation:
  - alias: 'Unterwegs - Geräte eingeschaltet'
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'off'
        for:
          minutes: 60
    condition:
      - condition: state
        entity_id: group.alles_ausschalten
        state: 'on'
    action:
      - service: notify.telegram
        data_template:
          title: "Es sind noch Geräte eingeschaltet"
          message: >-
            {%- set comma = joiner(",") -%}
            {%- set deviceFound = false -%}

            {% for entity_id in states.group.alles_ausschalten.attributes.entity_id -%}
              {%- set domain, device = entity_id.split('.') -%}
              {%- if states[domain][device].state == 'on' -%}
                {%- set deviceFound = true -%}
                {{ comma() }} {{ states[domain][device].attributes.friendly_name }}
              {%- endif -%}
            {%- endfor -%}

            {%- if deviceFound == true -%}
              Alle Geräte sind ausgeschaltet.
            {%- endif -%}
          data:
            inline_keyboard:
              - 'Alles Ausschalten:/alles_ausschalten'

  - alias: "Unterwegs - Lichtsimulation starten"
    trigger:
      - platform: time_pattern
        minutes: '/10'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
      - condition: state
        entity_id: calendar.urlaub
        state: 'on'
      - condition: sun
        after: sunset
        after_offset: '-00:30:00'
      - condition: time
        before: '22:30:00'
    action:
      - delay: "00:{{ '{:02}'.format(range(0, 30) | random | int) }}:00"
      - service: homeassistant.toggle
        data_template:
          entity_id: "{{ state_attr('group.licht_unterwegs','entity_id') | random }}"

  - alias: "Unterwegs - Lichtsimulation beenden"
    trigger:
      - platform: time
        at: '22:30:00'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
      - condition: state
        entity_id: calendar.urlaub
        state: 'on'        
    action:
      - delay: '00:{{ range(15,59) | random | int }}:00'
      - service: homeassistant.turn_off
        entity_id: group.licht_unterwegs

  - alias: "Zu Hause - Standort aktualisieren"
    trigger:
      - platform: state
        entity_id: device_tracker.handy
        to: 'home'
      - platform: state
        entity_id: device_tracker.handygps
        to: 'home'
      - platform: state
        entity_id: device_tracker.handymqtt
        to: 'home'        
    action:
      - service: mqtt.publish
        data:
           topic: 'location/handy'
           payload: 'home'
           retain: true
      - service: shell_command.send_position
        data:
          url: !secret phonetracker_send_position_url
      - service: device_tracker.see
        data_template:
          dev_id: handygps
          location_name: 'home'
          gps: ["{{ states.device_tracker.netzwerkdj.attributes.latitude }}", "{{ states.device_tracker.netzwerkdj.attributes.longitude }}"]

  - alias: "Zu Hause - Manuell geschaltet"
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.schalter_flur
          click_type: single
    condition:
      - condition: state
        entity_id: device_tracker.handymqtt
        state: 'not_home'
    action:
      - service: mqtt.publish
        data:
           topic: 'location/handy'
           payload: 'home'
           retain: true
      - service: shell_command.send_position
        data:
          url: !secret phonetracker_send_position_url
      - service: device_tracker.see
        data_template:
          dev_id: handygps
          location_name: 'home'
          gps: ["{{ states.device_tracker.netzwerkdj.attributes.latitude }}", "{{ states.device_tracker.netzwerkdj.attributes.longitude }}"]

  - alias: "Zu Hause - Geräte einschalten"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
    condition:
      - condition: time
        after: '08:00'
        before: '20:00'
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 5
    action:
      - service: script.zu_hause

  - alias: "Zu Hause - Radio Balkon einschalten"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
    condition:
      - condition: time
        after: '08:00'
        before: '20:00'
      - condition: numeric_state
        entity_id: sensor.balkon_temperatur
        above: 15
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 5
    action:
      - service: switch.turn_on
        entity_id: switch.balkon_radio

  - alias: "Zu Hause - Geräte einschalten abends"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
    condition:
      - condition: time
        after: '20:00'
        before: '23:30'
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 5
    action:
      - service: script.zu_hause_abends

  - alias: "Zu Hause - Begrüßung"
    trigger:
      - platform: state
        entity_id: input_boolean.zu_hause_begruessung
        to: 'on'
        for: '00:01:00'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.zu_hause_begruessung
      - service: !secret tts_service
        data_template:
          echo: "flur"
          message: >-
            "Hallo Dennis. Willkommen zu Hause."

script:
  zu_hause:
    alias: "Zu Hause"
    sequence:
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.alarm
      - service: input_boolean.turn_on
        entity_id: input_boolean.zu_hause_begruessung
      - service: switch.turn_on
        entity_id: switch.badezimmer_radio, switch.wohnzimmer_radio, switch.flur_radio, switch.kuche_radio, switch.computer, switch.watchtv_wohnzimmer
      - wait_template: "{{ is_state('media_player.wohnzimmer', 'playing') }}"
      - service: script.sync_radios
      - condition: state
        entity_id: binary_sensor.sonne_tagsueber
        state: 'off'
      - service: light.turn_on
        entity_id: light.couch, light.strahler

  zu_hause_abends:
    alias: "Zu Hause - abends"
    sequence:
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.alarm
      - service: input_boolean.turn_on
        entity_id: input_boolean.zu_hause_begruessung
      - service: light.turn_on
        entity_id: light.couch, light.strahler
      - service: switch.turn_on
        entity_id: switch.computer, switch.watchtv_wohnzimmer
      - service: switch.turn_on
        entity_id: switch.badezimmer_radio

homeassistant:
  customize:
    sensor.aufenthaltsort_handy:
      friendly_name: Aufenthaltsort
      icon: mdi:google-maps
    proximity.home:
      friendly_name: Entfernung