input_boolean:
  timer_schlafzimmer_aktiv:
    name: Sleeptimer aktiv
    initial: off
    icon: mdi:timer-off

  schlafen_einschalten_aktiv:
    name: "Schlafen einschalten aktiv"

  schlafen_aktiv:
    name: Schlafen
    initial: off

  schlafen_fernseher_einschalten:
    name: Fernseher einschalten
    initial: on
    icon: mdi:television

input_select:
  timer_schlafzimmer_dauer:
    name: Timer Schlafzimmer
    options:
      - 10
      - 30
      - 60
      - 70
      - 90
      - 120
    initial: 70
    icon: mdi:clock-end

timer:
  sleeptimer:
    name: Sleeptimer
    icon: mdi:filmstrip-off
    duration: 4200

  schlafen_einschalten:
    name: "Schlafen einschalten"
    duration: 7

binary_sensor:
  - platform: template
    sensors:
      schlafen_aktiv:
        friendly_name: Schlafen aktiv
        entity_id:
          - input_boolean.schlafen_aktiv
        value_template: >
          {{ is_state('input_boolean.schlafen_aktiv', 'on') }}

sensor:
  - platform: history_stats
    name: Schlafdauer
    entity_id: binary_sensor.schlafen_aktiv
    state: 'on'
    type: 'ratio'
    end: '{{ now() }}'
    duration:
      days: 7

  - platform: sql
    db_url: !secret mariadb_url
    queries:
      - name: Schlafen Letzte Uhrzeit
        query: "SELECT CONVERT_TZ(last_changed,'+00:00','+01:00') as last_changed FROM states WHERE entity_id = 'script.schlafen_gehen' AND state = 'on' ORDER BY created DESC LIMIT 1;"
        column: 'last_changed'
        unit_of_measurement: 'Uhr'
        value_template: '{{ as_timestamp(value) | timestamp_custom("%H:%M", True) | string }}'

  - platform: template
    sensors:
      timer_schlafzimmer_zeit:
        friendly_name: Fernseher ausschalten
        icon_template: mdi:filmstrip-off
        entity_id:
          - automation.sleeptimer_starten
          - input_boolean.timer_schlafzimmer_aktiv
          - input_select.timer_schlafzimmer_dauer
          - sensor.time
        unit_of_measurement: 'Minuten'
        value_template: >-
            {%- if is_state('input_boolean.timer_schlafzimmer_aktiv', 'on') %}
              {% set now = as_timestamp(now()) | int %}
              {% set last = as_timestamp(state_attr('automation.sleeptimer_starten', 'last_triggered')) | int %}              
              {% set duration = states('input_select.timer_schlafzimmer_dauer') | int %}
              {% set diff = (duration - ((now - last) / 60)) | int %}

              {% if diff < 0 %}
                {{ duration }}
              {% else %}
                {{ diff }}
              {% endif %}
            {% else %}
                -
            {%- endif %}

      schlafen_dauer_durchschnitt:
        friendly_name: Durchschnittliche Dauer
        entity_id:
          - sensor.schlafdauer
        value_template: >
          {% if states.sensor.schlafdauer == None %}
            0
          {% else %}
            {% set stunden = states('sensor.schlafdauer') | float * 24 / 100 | float %}
            {{'%0.2f' % stunden | float }}
          {% endif %}
        icon_template: >
          mdi:bell-sleep-outline
        unit_of_measurement: 'Stunden'

script:
  schlafen_gehen:
    alias: Schlafen gehen
    sequence:
      - service: input_boolean.turn_on
        entity_id: input_boolean.schlafen_aktiv
      - service: light.turn_on
        entity_id: light.bett
      - service: switch.turn_off
        entity_id: switch.wohnzimmer_radio, switch.balkon_radio, switch.flur_radio, switch.kuche_radio, switch.schlafzimmer_radio, switch.arbeitszimmer_radio
      - service: switch.turn_off
        entity_id: switch.watchtv_wohnzimmer, switch.monitor
      - service: light.turn_off
        entity_id: light.strahler, light.vitrine, light.balkon_licht
      - service: input_boolean.turn_on
        entity_id: input_boolean.timer_schlafzimmer_aktiv
      - delay: '00:04:00'
      - service: switch.turn_off
        entity_id: switch.badezimmer_radio
      - service: light.turn_off
        entity_id: light.couch, light.sideboard, light.schrank
      - condition: state
        entity_id: input_boolean.computer_ausschalten
        state: 'on'
      - service: switch.turn_off
        entity_id: switch.pc

  schlafen_gehen_fernseher:
    alias: Schlafen gehen - Fernseher einschalten
    sequence:
      - service: switch.turn_on
        entity_id: switch.watchtv_schlafzimmer

  sleeptimer_turn_off_tv:
    alias: Sleeptimer aktivieren
    sequence:
      - condition: state
        entity_id: input_boolean.timer_schlafzimmer_aktiv
        state: 'on'
      - service: script.watchtv_schlafzimmer_off

automation:
  - alias: "Schlafen gehen - Countdown starten"
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.schalter_wohnzimmer
          click_type: long_click_press
    condition:
      - condition: state
        entity_id: binary_sensor.schlafen_aktiv
        state: 'off'
      - condition: state
        entity_id: timer.schlafen_einschalten
        state: 'idle'
    action:
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Alle Geräte werden gleich ausgeschaltet."
      - delay: '00:00:02'
      - service: timer.start
        entity_id: timer.schlafen_einschalten
      - service: media_player.play_media
        data_template:
          entity_id:
            - media_player.smarthome
          media_content_id: >-
            http://192.168.2.75:8123/local/countdown/countdown_5.mp3
          media_content_type: music

  - alias: "Schlafen gehen - Countdown abbrechen"
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.schalter_wohnzimmer
          click_type: single
    condition:
      - condition: state
        entity_id: timer.schlafen_einschalten
        state: 'active'
    action:
      - service: media_player.media_pause
        entity_id: media_player.smarthome
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Der Vorgang wurde abgebrochen."
      - service: timer.cancel
        entity_id: timer.schlafen_einschalten
      - service: media_player.clear_playlist
        entity_id: media_player.smarthome

  - alias: "Schlafen gehen - Starten"
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.schlafen_einschalten
    action:
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Alle Geräte werden jetzt ausgeschaltet. Gute Nacht."
      - service: script.schlafen_gehen

  - alias: "Schlafen gehen - Fernseher einschalten"
    trigger:
      - platform: event
        event_type: timer.finished
        event_data:
          entity_id: timer.schlafen_einschalten
    condition:
      - condition: state
        entity_id: input_boolean.schlafen_fernseher_einschalten
        state: 'on'
    action:
      - service: script.schlafen_gehen_fernseher

  - alias: 'Sleeptimer starten'
    trigger:
      platform: state
      entity_id: input_boolean.timer_schlafzimmer_aktiv
      to: 'on'
    action:
      - service: timer.start
        entity_id: timer.sleeptimer
        data_template:
          duration: >
            {{ states('input_select.timer_schlafzimmer_dauer')  | int * 60 | int }}

  - alias: 'Sleeptimer endet'
    trigger:
      - platform: numeric_state
        entity_id: sensor.timer_schlafzimmer_zeit
        below: 6
    condition:
      - condition: state
        entity_id: media_player.kodi_schlafzimmer
        state: 'playing'
    action:
      - service: notify.kodi_schlafzimmer
        data:
          title: 'Sleeptimer'
          message: >-
            {% set restzeit = states('sensor.timer_schlafzimmer_zeit') | default(0) | int %}

            {% if restzeit > 1 %}
              Der Sleeptimer endet in {{ restzeit }} Minuten.
            {% else %}
              Der Sleeptimer endet in weniger als einer Minute.
            {% endif %}
          data:
            displaytime: 10000
            icon: "info"

  - alias: 'Sleeptimer geändert'
    trigger:
      platform: state
      entity_id: input_select.timer_schlafzimmer_dauer
    action:
      - service: timer.start
        entity_id: timer.sleeptimer
        data_template:
          duration: >
            {{ states('input_select.timer_schlafzimmer_dauer') | int * 60 | int }}
      - service: input_boolean.turn_on
        entity_id: input_boolean.timer_schlafzimmer_aktiv

  - alias: 'Sleeptimer aktiviert'
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.sleeptimer
    action:
      - service: script.sleeptimer_turn_off_tv
      - service: light.turn_off
        entity_id: light.bett

  - alias: 'Sleeptimer abbrechen'
    trigger:
      platform: state
      entity_id: input_boolean.timer_schlafzimmer_aktiv
      to: 'off'
    action:
      - service: timer.cancel
        entity_id: timer.sleeptimer

  - alias: "Schlafzimmer - Kodi gestartet"
    trigger:
      platform: state
      entity_id: media_player.kodi_schlafzimmer
      to: 'playing'
    condition:
      - condition: state
        entity_id: timer.sleeptimer
        state: 'active'
    action:
      - service: light.turn_off
        entity_id: light.bett, light.sideboard, light.schrank, light.badezimmerschrank, light.schreibtisch, light.kuche_regal, light.arbeitszimmer_lampe, light.sportzimmer_regal

  - alias: "Schlafzimmer - Kodi pausiert"
    trigger:
      platform: state
      entity_id: binary_sensor.bewegungsmelder_schlafzimmer
      to: 'on'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: media_player.kodi_schlafzimmer
          state: 'playing'
        - condition: state
          entity_id: timer.sleeptimer
          state: 'active'
    action:
      - service: media_player.media_pause
        entity_id: media_player.kodi_schlafzimmer

homeassistant:
  customize:
    script.schlafen_gehen:
      icon: mdi:hotel
      can_cancel: false
    sensor.schlafen_letzte_uhrzeit:
      friendly_name: "Letzte Uhrzeit"
      icon: mdi:av-timer
    binary_sensor.schlafen_aktiv:
      icon: mdi:sleep