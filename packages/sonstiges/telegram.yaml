telegram_bot:
  - platform: polling
    api_key: !secret telegram_apikey
    parse_mode: html
    allowed_chat_ids:
      - !secret telegram_chatid

notify:
  - platform: telegram
    name: Telegram
    chat_id: !secret telegram_chatid

automation:
  - alias: 'Telegram - Status'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/status'
    action:
      - service: notify.telegram
        data_template:
          title: "Status Home Assistant"
          message: >-
            Das System ist seit {{ states('sensor.laufzeit') }} Stunden online.
            {%- if is_state('group.alles_ausschalten', 'off') %}
            Alle Geräte sind ausgeschaltet.
            {% endif %}
      - condition: state
        entity_id: group.alles_ausschalten
        state: 'on'
      - service: notify.telegram
        data_template:
          message: >-
            Es sind noch Geräte eingeschaltet.
          data:
            inline_keyboard:
              - 'Geräte anzeigen:/geraete'

  - alias: 'Telegram - Unterwegs einschalten'
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: '/unterwegs'
    action:
      - service: mqtt.publish
        data:
           topic: 'location/handy'
           payload: 'home'
           retain: true
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.chat_id }}'
          message: "Der Status wird aktualisiert."

  - alias: 'Telegram - Eingeschaltete Geräte'
    trigger:
      platform: event
      event_type: telegram_callback
      event_data:
        data: '/geraete'
    action:
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.chat_id }}'
          message: >-
            {%- set comma = joiner(",") -%}
            {%- set deviceFound = false -%}

            {% for entity_id in state_attr('group.alles_ausschalten', 'entity_id') -%}
              {%- if states(entity_id) == 'on' -%}
                {%- set deviceFound = true -%}
                {{ comma() }} {{ state_attr(entity_id, 'friendly_name') }}
              {%- endif -%}
            {%- endfor -%}

            {%- if deviceFound == true -%}
              Alle Geräte sind ausgeschaltet.
            {%- endif -%}
          inline_keyboard:
            - 'Alles Ausschalten:/alles_ausschalten'

  - alias: 'Telegram - Alles ausschalten'
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: '/alles_ausschalten'
    action:
      - service: script.alles_ausschalten
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []
      - service: telegram_bot.send_message
        data_template:
          target: '{{ trigger.event.data.chat_id }}'
          message: "Alle Geräte werden ausgeschaltet."

  - alias: 'Telegram - Tanken'
    trigger:
      platform: event
      event_type: telegram_command
      event_data:
        command: '/tanken'
    action:
      - service: notify.telegram
        data_template:
          title: "Aktuelle Benzinpreise"
          message: >
            Real: {% if states('sensor.tankstelle_real') != 'unknown' %}{{ states('sensor.tankstelle_real') }}€{% else %}{%if states('sensor.tankstelle_real_status') == 'off' %}geschlossen{% else %}-{% endif %}{% endif %}

            Jet: {% if states('sensor.tankstelle_jet') != 'unknown' %}{{ states('sensor.tankstelle_jet') }}€{% else %}{%if states('sensor.tankstelle_jet_status') == 'off' %}geschlossen{% else %}-{% endif %}{% endif %}

  - alias: 'Telegram - Aufenthaltsort'
    trigger:
      - platform: event
        event_type: telegram_command
        event_data:
          command: '/ort'
    action:
      - service: notify.telegram
        data_template:
          title: "Aufenthaltsort"
          message: "{{ states('sensor.aufenthaltsort_handy') }} {% if states('proximity.home') | int > 0 %}({{ states('proximity.home') }}km von zu Hause.){% endif %}"