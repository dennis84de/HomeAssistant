input_boolean:
  alles_auschalten_aktiv:
    name: "Alles ausschalten aktiv"
  zu_hause_begruessung:
    name: "Begrüßung"

timer:
  alles_auschalten:
    name: "Alles ausschalten"
    duration: 15

alarm_control_panel:
  - platform: manual
    name: Alarm
    pending_time: 60
    delay_time: 60
    trigger_time: 10
    disarmed:
      trigger_time: 0
    armed_home:
      pending_time: 0
      delay_time: 0
    armed_away:
      pending_time: 0

automation:
  - alias: "Alles ausschalten aktivieren"
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.schalter_flur
          click_type: long_click_press
    condition:
      - condition: state
        entity_id: automation.alles_ausschalten
        state: 'off'
    action:
      - service: script.radios_pausieren
      - service: !secret tts_service
        data_template:
          echo: "flur"
          message: "Alle Geräte können jetzt ausgeschaltet werden."
      - delay: '00:00:02'
      - service: timer.start
        entity_id: timer.alles_auschalten
      - service: media_player.play_media
        data_template:
          entity_id:
            - media_player.smarthome
          media_content_id: >-
            http://192.168.2.70:8123/local/countdown/countdown_10.mp3
          media_content_type: music
      - service: automation.turn_on
        entity_id: automation.alles_ausschalten
      - service: automation.turn_off
        entity_id: automation.alles_ausschalten_aktivieren

  - alias: "Alles ausschalten"
    initial_state: false
    trigger:
      - platform: event
        event_type: xiaomi_aqara.click
        event_data:
          entity_id: binary_sensor.schalter_flur
          click_type: single
    condition:
      - condition: state
        entity_id: timer.alles_auschalten
        state: 'active'
    action:
      - service: media_player.media_pause
        data_template:
          entity_id:
            - media_player.smarthome
      - service: !secret tts_service
        data_template:
          echo: "flur"
          message: >-
            "Alle Geräte werden ausgeschaltet. Auf Wiedersehen."
      - service: timer.cancel
        entity_id: timer.alles_auschalten
      - service: automation.turn_off
        entity_id: automation.alles_ausschalten
      - service: automation.turn_on
        entity_id: automation.alles_ausschalten_aktivieren
      - service: script.alles_ausschalten
      - service: media_player.clear_playlist
        entity_id: media_player.smarthome

  - alias: "Alles ausschalten deaktivieren"
    trigger:
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.alles_auschalten
    action:
      - service: !secret tts_service
        data_template:
          echo: "flur"
          message: "Der Vorgang wurde abgebrochen."
      - service: automation.turn_off
        entity_id: automation.alles_ausschalten
      - service: automation.turn_on
        entity_id: automation.alles_ausschalten_aktivieren
      - service: script.radios_starten

  - alias: "Alarm aktiviert"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'off'
        for:
          minutes: 1
    action:
      - service: alarm_control_panel.alarm_arm_away
        entity_id: alarm_control_panel.alarm

  - alias: "Alarm ausgelöst"
    trigger:
      - platform: state
        entity_id: binary_sensor.tuersensor
        to: 'on'
    condition:
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: armed_away
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
    action:
      service: alarm_control_panel.alarm_trigger
      entity_id: alarm_control_panel.alarm

  - alias: "Alarm Nachricht"
    trigger:
      - platform: state
        entity_id: alarm_control_panel.alarm
        to: 'triggered'
    action:
      service: notify.telegram
      data_template:
        title: "Alarm"
        message: "Der Alarm in der Wohnung wurde ausgelöst."

  - alias: "Alarm - Bewegung"
    trigger:
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_badezimmer
        to: 'on'
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_wohnzimmer
        to: 'on'
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_flur_vorne
        to: 'on'
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_arbeitszimmer
        to: 'on'
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_schlafzimmer
        to: 'on'
      - platform: state
        entity_id: binary_sensor.bewegungsmelder_kueche
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: 'armed_away'
      - condition: state
        entity_id: 'vacuum.xiaomi_vacuum_cleaner'
        state: 'docked'
    action:
      service: notify.telegram
      data_template:
        title: "Bewegung erkannt"
        message: >-
          {% if trigger.entity_id == "binary_sensor.bewegungsmelder_badezimmer" %}
             Im Badezimmer wurde eine Bewegung erkannt.
          {% elif trigger.entity_id == "binary_sensor.bewegungsmelder_wohnzimmer" %}
            Im Wohnzimmer wurde eine Bewegung erkannt.
          {% elif trigger.entity_id == "binary_sensor.bewegungsmelder_flur_vorne" %}
            Im Flur wurde eine Bewegung erkannt.
          {% elif trigger.entity_id == "binary_sensor.bewegungsmelder_arbeitszimmer" %}
            Im Arbeitszimmer wurde eine Bewegung erkannt.
          {% elif trigger.entity_id == "binary_sensor.bewegungsmelder_schlafzimmer" %}
            Im Schlafzimmer wurde eine Bewegung erkannt.
          {% elif trigger.entity_id == "binary_sensor.bewegungsmelder_kueche" %}
            In der Küche wurde eine Bewegung erkannt.
          {% else %}
            Eine sonstige Bewegung wurde erkannt.
          {% endif %}

  - alias: "Alarm - Fenster"
    trigger:
      - platform: state
        entity_id: binary_sensor.fenster_wohnzimmer
        to: 'on'
      - platform: state
        entity_id: binary_sensor.fenster_schlafzimmer
        to: 'on'
      - platform: state
        entity_id: binary_sensor.fenster_kueche
        to: 'on'
      - platform: state
        entity_id: binary_sensor.fenster_arbeitszimmer
        to: 'on'
      - platform: state
        entity_id: binary_sensor.fenster_sportzimmer
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
      - condition: state
        entity_id: alarm_control_panel.alarm
        state: 'armed_away'
    action:
      service: notify.telegram
      data_template:
        title: "Fenster geöffnet"
        message: >-
          {% if trigger.entity_id == "binary_sensor.fenster_wohnzimmer" %}
            Das Fenster im Wohnzimmer wurde geöffnet.
          {% elif trigger.entity_id == "binary_sensor.fenster_schlafzimmer" %}
            Das Fenster im Schlafzimmer wurde geöffnet.
          {% elif trigger.entity_id == "binary_sensor.fenster_kueche" %}
            Das Fenster in der Küche wurde geöffnet.
          {% elif trigger.entity_id == "binary_sensor.fenster_arbeitszimmer" %}
            Das Fenster im Arbeitszimmer wurde geöffnet.
          {% elif trigger.entity_id == "binary_sensor.fenster_sportzimmer" %}
            Das Fenster im Sportzimmer wurde geöffnet.
          {% endif %}

  - alias: "Zu Hause - Geräte einschalten"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
    condition:
      - condition: time
        after: '08:00'
        before: '20:00'
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 5
    action:
      - service: script.zu_hause

  - alias: "Zu Hause - Radio Balkon einschalten"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
    condition:
      - condition: time
        after: '08:00'
        before: '20:00'
      - condition: numeric_state
        entity_id: sensor.balkon_temperatur
        above: 15
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 5
    action:
      - service: switch.turn_on
        entity_id: switch.balkon_radio

  - alias: "Zu Hause - Geräte einschalten abends"
    trigger:
      - platform: state
        entity_id: binary_sensor.zu_hause
        to: 'on'
    condition:
      - condition: time
        after: '20:00'
        before: '23:30'
      - condition: numeric_state
        entity_id: sensor.laufzeit_minuten
        above: 5
    action:
      - service: script.zu_hause_abends

  - alias: "Zu Hause - Begrüßung"
    trigger:
      - platform: state
        entity_id: input_boolean.zu_hause_begruessung
        state: 'on'
        for: '00:01:00'
    condition:
      - platform: state
        entity_id: binary_sensor.zu_hause
        state: 'on'
    action:
      - service: !secret tts_service
        data_template:
          echo: "flur"
          message: >-
            "Hallo Dennis. Willkommen zu Hause."

script:
  zu_hause:
    alias: "Zu Hause"
    sequence:
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.alarm
      - service: input_boolean.turn_on
        entity_id: input_boolean.zu_hause_begruessung
      - service: switch.turn_on
        entity_id: switch.badezimmer_radio, switch.wohnzimmer_radio, switch.flur_radio, switch.kuche_radio, switch.computer, switch.watchtv_wohnzimmer
      - wait_template: "{{ is_state('media_player.wohnzimmer', 'playing') }}"
      - service: script.sync_radios
      - condition: state
        entity_id: binary_sensor.sonne_tagsueber
        state: 'off'
      - service: light.turn_on
        entity_id: light.couch, light.strahler

  zu_hause_abends:
    alias: "Zu Hause - abends"
    sequence:
      - service: alarm_control_panel.alarm_disarm
        entity_id: alarm_control_panel.alarm
      - service: input_boolean.turn_on
        entity_id: input_boolean.zu_hause_begruessung
      - service: light.turn_on
        entity_id: light.couch, light.strahler
      - service: switch.turn_on
        entity_id: switch.computer, switch.watchtv_wohnzimmer
      - service: switch.turn_on
        entity_id: switch.badezimmer_radio

  alles_ausschalten:
    alias: "Alles ausschalten"
    sequence:
      - service: switch.turn_off
        entity_id: switch.alle_radios, switch.monitor, switch.schlafzimmer_fernseher, switch.watchtv_wohnzimmer, switch.watchtv_schlafzimmer
      - service: light.turn_off
        entity_id: light.couch, light.strahler, light.vitrine, light.sideboard, light.schrank, light.badezimmerschrank, light.bett, light.regal, light.schreibtisch, light.balkon_licht, light.arbeitszimmer_lampe
      - condition: state
        entity_id: input_boolean.computer_ausschalten
        state: 'on'
      - service: switch.turn_off
        entity_id: switch.pc