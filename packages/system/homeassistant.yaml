http:
config:
websocket_api:
api:
frontend:
mobile_app:
scene:
saver:
discovery:
wake_on_lan:
system_health:
python_script:
map:
  
lovelace:
  mode: yaml
  resources:
    - url: /hacsfiles/lovelace-darksky-card/darksky-card.js
      type: module
    - url: /hacsfiles/mini-media-player/mini-media-player-bundle.js
      type: module
    - url: /hacsfiles/mini-graph-card/mini-graph-card-bundle.js
      type: module 
    - url: /hacsfiles/lovelace-slider-entity-row/slider-entity-row.js
      type: module    
    - url: /hacsfiles/stack-in-card/stack-in-card.js
      type: module
    - url: /hacsfiles/lovelace-auto-entities/auto-entities.js
      type: module      
    - url: /hacsfiles/atomic-calendar-revive/atomic-calendar-revive.js
      type: module
    - url: /hacsfiles/lovelace-card-tools/card-tools.js
      type: js
    - url: /hacsfiles/lovelace-layout-card/layout-card.js
      type: js
    - url: /hacsfiles/lovelace-fold-entity-row/fold-entity-row.js
      type: js
    - url: /hacsfiles/zha-network-card/zha-network-card.js
      type: js
    - url: /hacsfiles/secondaryinfo-entity-row/secondaryinfo-entity-row.js
      type: js
      
browser_mod:
  prefix: "browser_"
  disable:
    - all  
  
breaking_changes:
  name: Wichtige Änderungen

zone:
  - name: Zu Hause
    latitude: !secret home_latitude
    longitude: !secret home_longitude
    radius: 60
    icon: mdi:home-account
  - name: Arbeit
    latitude: !secret work_latitude
    longitude: !secret work_longitude
    radius: 70
    icon: mdi:wan 

sensor:
  - platform: sql
    db_url: !secret mariadb_url
    queries:
      - name: database_size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="home_assistant" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MB

  - platform: uptime
    name: Laufzeit
    unit_of_measurement: hours

  - platform: uptime
    name: Laufzeit Minuten
    unit_of_measurement: minutes

  - platform: version
    name: HASS Current Version
    source: pypi

  - platform: command_line
    name: HASS Installed Version
    command: "head -5 /home/homeassistant/.homeassistant/.HA_VERSION"
    scan_interval: 3600

  - platform: command_line
    name: CPU Temperatur
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: '{{ value | multiply(0.001) | round(1) }}'

  - platform: command_line
    name: GPU Temperatur
    command: vcgencmd measure_temp | sed "s/temp=//;s/'C//"
    unit_of_measurement: "°C"

  - platform: rpi_power

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot

  - platform: template
    sensors:
      letzter_neustart:
        friendly_name: "Letzter Neustart"
        entity_id:
          - sensor.last_boot
        icon_template: >-
          mdi:av-timer
        value_template: >-
          {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom("%d.%m.%Y") | string }}

shell_command:
  upgrade_homeassistant: /home/homeassistant/.homeassistant/bash_scripts/upgrade-hass.sh

script:
  restart_homeassistant:
    alias: Home Assistant neustarten
    sequence:
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Home Assistant wird neugestartet."
      - service: homeassistant.restart

  upgrade_homeassistant:
    alias: Home Assistant aktualisieren
    sequence:
      - condition: template
        value_template: >-
          {% if is_state('sensor.hass_current_version', None) or is_state('sensor.hass_installed_version', None) %}
            False
          {% else %}
            {{ states('sensor.hass_current_version') != states('sensor.hass_installed_version') }}
          {% endif %}
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Home Assistant wird aktualisiert."
      - service: shell_command.upgrade_homeassistant

automation:
  - alias: "Update verfügbar"
    trigger:
      - platform: state
        entity_id: sensor.hass_current_version
    condition:
      - condition: template
        value_template: >-
          {% if is_state('sensor.hass_current_version', None) or is_state('sensor.hass_installed_version', None) %}
            False
          {% elif is_state("sensor.hass_current_version", "unavailable") == True %}
            False
          {% else %}
            {{ states('sensor.hass_current_version') != states('sensor.hass_installed_version') }}
          {% endif %}
    action:
      service: notify.telegram
      data_template:
        title: 'Neue Version'
        message: "Home Assistant {{ states('sensor.hass_current_version') }} ist jetzt verfügbar."

  - alias: "Home Assistant - Fehler Neustart"
    trigger:
      - platform: state
        entity_id: persistent_notification.homeassistant_check_config
        to: 'notifying'
    action:
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Während des Neustarts ist ein Fehler aufgetreten."

  - alias: "Home Assistant neugestartet - Telegram"
    trigger:
      - platform: homeassistant
        event: start
    condition:
      - condition: state
        entity_id: binary_sensor.zu_hause
        state: 'off'
    action:
      - service: notify.telegram
        data_template:
          title: 'Home Assistant gestartet'
          message: "Home Assistant wurde neugestartet."

  - alias: "Home Assistant neugestartet - TTS"
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: !secret tts_service
        data_template:
          echo: "wohnzimmer"
          message: "Home Assistant wurde neugestartet."

homeassistant:
  customize:
    script.restart_homeassistant:
      icon: mdi:home-assistant

    sensor.hacs:
      friendly_name: HACS
      unit_of_measurement: Update(s)

    sensor.laufzeit:
      unit_of_measurement: Stunden
    sensor.laufzeit_minuten:
      unit_of_measurement: Minuten
      
    sensor.disk_use_percent:
      friendly_name: Belegter Speicherplatz
    sensor.memory_use_percent:
      friendly_name: Benutzter Arbeitsspeicher
      icon: mdi:database-plus
    sensor.processor_use:
      friendly_name: CPU-Auslastung
      icon: mdi:creation
    
    sensor.gpu_temperatur:
      icon: mdi:thermometer-low
        
    sensor.database_size:
      friendly_name: Größe Datenbank
      icon: mdi:database
      
    sensor.hass_installed_version:
      friendly_name: Installierte Version
      icon: mdi:shield-check
    sensor.hass_current_version:
      friendly_name: Neuste Version
      icon: mdi:update

    script.upgrade_homeassistant:
      icon: mdi:update
      can_cancel: false

    sensor.rpi_power_status:
      friendly_name: Power Status
      icon: mdi:power-plug