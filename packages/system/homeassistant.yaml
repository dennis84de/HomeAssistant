http:
config:
websocket_api:
api:
frontend:
mobile_app:
scene:
discovery:
wake_on_lan:
system_health:
map:
  
lovelace:
  mode: yaml
  resources:
    - url: /hacsfiles/mini-graph-card/mini-graph-card-bundle.js
      type: module
    - url: /hacsfiles/weather-card/weather-card.js
      type: module   
    - url: /hacsfiles/stack-in-card/stack-in-card.js
      type: module
    - url: /hacsfiles/stack-in-card/slider-entity-row.js
      type: module
    - url: /hacsfiles/mini-media-player/mini-media-player-bundle.js
      type: module
    - url: /hacsfiles/layout-card/layout-card.js
      type: module    
    - url: /hacsfiles/lovelace-layout-card/layout-card.js
      type: module    
    - url: /hacsfiles/atomic-calendar-revive/atomic-calendar-revive.js
      type: module      
    - url: /hacsfiles/secondaryinfo-entity-row/secondaryinfo-entity-row.js
      type: module
    - url: /hacsfiles/lovelace-card-tools/card-tools.js
      type: module    
    - url: /hacsfiles/lovelace-grocy-chores-card/grocy-chores-card.js
      type: module          
    - url: /hacsfiles/home-assistant-sun-card/home-assistant-sun-card.js
      type: module         
    
  dashboards:      
    lovelace-rooms:
      mode: yaml
      filename: lovelace-rooms.yaml
      title: Zimmer
      icon: mdi:home-assistant
      show_in_sidebar: true  
  
breaking_changes:
  name: Wichtige Änderungen

browser_mod:
  disable:
    - all

zone:
  - name: Zu Hause
    latitude: !secret home_latitude
    longitude: !secret home_longitude
    radius: 50
    icon: mdi:home-account
  - name: Arbeit
    latitude: !secret work_latitude
    longitude: !secret work_longitude
    radius: 70
    icon: mdi:wan 
            
sensor:
  - platform: sql
    db_url: !secret mariadb_url
    queries:
      - name: database_size
        query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="homeassistant" GROUP BY table_schema;'
        column: 'value'
        unit_of_measurement: MB

  - platform: uptime
    name: Letzter Neustart

  - platform: version
    name: HASS Current Version
    source: pypi

  - platform: command_line
    name: HASS Installed Version
    command: "head -5 /config/.HA_VERSION"
    scan_interval: 3600

  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
      - type: processor_temperature

  - platform: template
    sensors:
      rpi_letzter_neustart:
        friendly_name: "Letzter Neustart"
        icon_template: >-
          mdi:av-timer
        value_template: >-
          {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom("%d.%m.%Y") | string }}
          
      laufzeit_minuten:
        friendly_name: "Laufzeit Minuten"
        icon_template: mdi:clock
        unit_of_measurement: 'Minuten'
        value_template: >-
          {% set up_time =  states('sensor.letzter_neustart') %}
     
          {{ '-' if up_time == 'unknown' else ((as_timestamp(now()) - as_timestamp(up_time)) / 60) | int }}
              
      laufzeit_stunden:
        friendly_name: "Laufzeit Stunden"
        icon_template: mdi:clock
        unit_of_measurement: 'Stunden'
        value_template: >-
          {% set up_time =  states('sensor.letzter_neustart') %}
     
          {{ '-' if up_time == 'unknown' else ((as_timestamp(now()) - as_timestamp(up_time)) / 60 / 60) | round(2) }}

script:  
  restart_homeassistant:
    alias: Home Assistant neustarten
    sequence:
      - service: !secret tts_service
        data:
          echo: "wohnzimmer"
          message: "Home Assistant wird neugestartet."
      - delay: '00:00:05'      
      - service: media_player.play_media
        data:
          entity_id: media_player.benachrichtigungen
          media_content_id:  sounds/winxp_shutdown.mp3
          media_content_type: music
      - wait_template: "{{is_state('media_player.benachrichtigungen', 'idle')}}"
        timeout: '00:00:02'
        continue_on_timeout: 'true'      
      - service: homeassistant.restart

automation:
  - alias: "Home Assisant - Update verfügbar"
    id: "home_assistant_update_verfuegbar"
    trigger:
      - platform: state
        entity_id: sensor.hass_current_version
    condition:
      - condition: template
        value_template: >-
          {% if is_state('sensor.hass_current_version', None) or is_state('sensor.hass_installed_version', None) %}
            False
          {% elif is_state("sensor.hass_current_version", "unavailable") %}
            False
          {% else %}
            {{ states('sensor.hass_current_version') != states('sensor.hass_installed_version') }}
          {% endif %}
    action:
      - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.zu_hause
              state: 'off'
            sequence:
              - service: notify.telegram
                data:
                  title: 'Neue Version'
                  message: "Home Assistant {{ states('sensor.hass_current_version') }} ist jetzt verfügbar."
        default:
          - service: persistent_notification.create
            data:
              title: "Update verfügbar"
              message: "Home Assistant {{ states('sensor.hass_current_version') }} ist jetzt verfügbar."
              notification_id: neue_version
               
  - alias: "Home Assistant - Gestartet"
    id: "home_assistant_gestartet"
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: hassio.addon_stdin
        data:
          addon: 15d21743_samba_backup
          input: restore-sensor          
      - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.zu_hause
              state: 'off'
            sequence:
              - service: notify.telegram
                data:                  
                  message: "Home Assistant wurde neugestartet."
        default:
          - service: media_player.play_media
            data:
              entity_id: media_player.benachrichtigungen
              media_content_id: sounds/winxp_start.mp3
              media_content_type: music
          - delay: '00:00:02'
          - service: !secret tts_service
            data:
              echo: "wohnzimmer"
              message: "Home Assistant wurde neugestartet."          
          
  - alias: "Home Assistant - Gestoppt"
    id: "home_assistant_gestoppt"
    trigger:   
      - platform: homeassistant
        event: shutdown     
    action:
      - choose:
          - conditions:
            - condition: state
              entity_id: binary_sensor.zu_hause
              state: 'off'
            sequence:
              - service: notify.telegram
                data:                  
                  message: "Home Assistant wurde gestoppt."        
                
  - alias: "Home Assistant - Fehler Neustart"
    id: "home_assistant_fehler_neustart"
    trigger:
      - platform: state
        entity_id: persistent_notification.homeassistant_check_config
        to: 'notifying'
    action:
      - service: !secret tts_service
        data:
          echo: "wohnzimmer"
          message: "Während des Neustarts ist ein Fehler aufgetreten."

homeassistant:
  customize:
    zone.home:
      friendy_name: Zu Hause
    zone.work:
      friendy_name: Arbeit
  
    script.restart_homeassistant:
      icon: mdi:home-assistant

    sensor.hacs:
      friendly_name: HACS
      unit_of_measurement: Update(s)
      
    sensor.disk_use_percent:
      friendly_name: Belegter Speicherplatz
    sensor.memory_use_percent:
      friendly_name: Benutzter Arbeitsspeicher
      icon: mdi:database-plus
    sensor.processor_use:
      friendly_name: CPU Auslastung
      icon: mdi:creation
    sensor.processor_temperature:
      friendly_name: CPU Temperatur
      icon: mdi:creation
          
    sensor.gpu_temperatur:
      icon: mdi:thermometer-low
        
    sensor.database_size:
      friendly_name: Größe Datenbank
      icon: mdi:database
      
    sensor.hass_installed_version:
      friendly_name: Installierte Version
      icon: mdi:shield-check
    sensor.hass_current_version:
      friendly_name: Neuste Version
      icon: mdi:update