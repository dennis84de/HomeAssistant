http:
config:
websocket_api:
api:
frontend:
mobile_app:
scene:
discovery:
wake_on_lan:
system_health:
map:
lovelace:
  mode: yaml
  resources:
    - url: /hacsfiles/mini-graph-card/mini-graph-card-bundle.js
      type: module
    - url: /hacsfiles/weather-card/weather-card.js
      type: module   
    - url: /hacsfiles/stack-in-card/stack-in-card.js
      type: module
    - url: /hacsfiles/mini-media-player/mini-media-player-bundle.js
      type: module
    - url: /hacsfiles/lovelace-layout-card/layout-card.js
      type: module    
    - url: /hacsfiles/atomic-calendar-revive/atomic-calendar-revive.js
      type: module      
    - url: /hacsfiles/secondaryinfo-entity-row/secondaryinfo-entity-row.js
      type: module
    - url: /hacsfiles/lovelace-card-tools/card-tools.js
      type: module              
    - url: /hacsfiles/zha-network-card/zha-network-card.js
      type: module      
    - url: /hacsfiles/flipdown-timer-card/flipdown-timer-card.js
      type: module         
    - url: /hacsfiles/battery-state-card/battery-state-card.js
      type: module
    - url: /hacsfiles/lovelace-auto-entities/auto-entities.js
      type: module      
    - url: /hacsfiles/lovelace-template-entity-row/template-entity-row.js
      type: module    
    - url: /hacsfiles/lovelace-fold-entity-row/fold-entity-row.js
      type: module      
    - url: /hacsfiles/ha-teamtracker-card/ha-teamtracker-card.js
      type: module      
    - url: /hacsfiles/scheduler-card/scheduler-card.js
      type: module    
    - url: /hacsfiles/lovelace-horizon-card/lovelace-horizon-card.js
      type: module      
    
  dashboards:      
    lovelace-rooms:
      mode: yaml
      filename: lovelace-rooms.yaml
      title: Zimmer
      icon: mdi:home-assistant
      show_in_sidebar: true  
  
panel_custom:
  - name: panel-redirect
    url_path: redirect-server-controls
    sidebar_title: Logs
    sidebar_icon: mdi:text
    module_url: /local/scripts/panel-redirect.js
    config:
      target: /config/logs

zone:
  - name: Home
    latitude: !secret home_latitude
    longitude: !secret home_longitude
    radius: 70
    icon: mdi:home-account
    
  - name: Arbeit
    latitude: !secret work_latitude
    longitude: !secret work_longitude
    radius: 100
    icon: mdi:wan 
    
  - name: Natalie
    latitude: !secret natalie_latitude
    longitude: !secret natalie_longitude
    radius: 70
    icon: mdi:human-female     
    
command_line:
  - sensor:
      command: "head -5 /config/.HA_VERSION"
      name: Installierte Version
      scan_interval: 3600
      
sensor:
  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /
      - type: memory_use_percent
      - type: processor_use
      - type: last_boot
      - type: processor_temperature

  - platform: template
    sensors:
      hass_installierte_version:
        friendly_name: "Installierte Version"
        icon_template: mdi:cloud-sync
        value_template: "{{ state_attr('update.home_assistant_core_update', 'installed_version') }}"
        
      hass_aktuelle_version:
        friendly_name: "Aktuelle Version"
        icon_template: mdi:cloud-sync-outline
        value_template: "{{ state_attr('update.home_assistant_core_update', 'latest_version') }}"

      laufzeit_minuten:
        friendly_name: "Laufzeit Minuten"
        icon_template: mdi:clock
        unit_of_measurement: 'Minuten'
        value_template: >-
          {% set up_time =  states('sensor.home_assistant_letzter_neustart') %}
     
          {{ '-' if up_time == 'unknown' else ((as_timestamp(now()) - as_timestamp(up_time, None)) / 60) | int(0) }}
              
      laufzeit_stunden:
        friendly_name: "Laufzeit Stunden"
        icon_template: mdi:clock
        unit_of_measurement: 'Stunden'
        value_template: >-
          {% set up_time =  states('sensor.home_assistant_letzter_neustart') %}
     
          {{ '-' if up_time == 'unknown' else ((as_timestamp(now()) - as_timestamp(up_time, None)) / 60 / 60) | round(2, 0) }}

mqtt:
  sensor:
    - name: Home Assistant - Letzter Shutdown
      state_topic: "homeassistant/binary_sensor/computer/letzter_shutdown"
      device_class: timestamp
    
template:
  - trigger:
      - platform: homeassistant
        event: start    
    sensor:      
      - name: Neustart Dauer
        device_class: duration
        unit_of_measurement: s
        state: "{{ (as_timestamp(now()) | int(0)) - (as_timestamp(states('sensor.home_assistant_letzter_shutdown')) | int(0)) }}"
          
input_boolean:
  neustart_kodi_eingeschaltet:
    name: Kodi eingeschaltet
    
script:  
  homeassistant_neustart:
    alias: Home Assistant - Neustart
    sequence:  
      - if: "{{ is_state('media_player.kodi_wohnzimmer', 'off') }}"
        then:
          - service: input_boolean.turn_on
            entity_id: input_boolean.neustart_kodi_eingeschaltet             
          - service: media_player.turn_on
            entity_id: media_player.kodi_wohnzimmer      
      - service: !secret tts_service
        data:
          echo: "wohnzimmer"
          message: "Home Assistant wird neugestartet."
      - delay: '00:00:04'      
      - service: media_player.play_media
        data:
          entity_id: media_player.home_assistant
          media_content_id:  http://192.168.2.75:8123/local/sounds/winxp_shutdown.mp3
          media_content_type: music
      - wait_template: "{{is_state('media_player.home_assistant', 'idle')}}"
        timeout: '00:00:02'
        continue_on_timeout: 'true'      
      - service: homeassistant.restart

  homeassistant_gestartet:
    alias: Home Assistant - Gestartet
    sequence:
      - service: hassio.addon_stdin
        data:
          addon: 15d21743_samba_backup
          input: restore-sensor     
      - if: "{{ not is_state('person.dennis', 'home') }}"
        then:
          - service: notify.telegram
            data:                  
              message: "Home Assistant wurde neugestartet."    
        else:
          - service: script.zu_hause_standort
          - service: media_player.play_media
            data:
              entity_id: media_player.home_assistant
              media_content_id: http://192.168.2.75:8123/local/sounds/winxp_start.mp3
              media_content_type: music
          - delay: '00:00:03'
          - service: !secret tts_service
            data:
              echo: "wohnzimmer"
              message: "Home Assistant wurde neugestartet."    
      - if: "{{ not is_state('button.computer_sensoren_aktualisieren', 'unavailable') }}"
        then:
          - service: button.press
            entity_id: button.computer_sensoren_aktualisieren                 
      - if: "{{ not is_state('button.computer_arbeit_sensoren_aktualisieren', 'unavailable') }}"
        then:
          - service: button.press
            entity_id: button.computer_arbeit_sensoren_aktualisieren           
      - if: "{{ is_state('input_boolean.neustart_kodi_eingeschaltet', 'on') }}"
        then:
          - service: input_boolean.turn_off
            entity_id: input_boolean.neustart_kodi_eingeschaltet
          - service: media_player.turn_off
            entity_id: media_player.kodi_wohnzimmer                  
            
automation:
  - alias: "Home Assisant - Update verfügbar"
    id: "home_assistant_update_verfuegbar"
    trigger:
      - platform: state
        entity_id: update.home_assistant_core_update
        to: 'on'
    condition:
      - "{{ not is_state('person.dennis', 'home') }}"
    action:
      - service: notify.telegram
        data:
          title: 'Neue Version'
          message: "Home Assistant {{ states('sensor.hass_aktuelle_version') }} ist jetzt verfügbar."

  - alias: "Home Assistant - Gestartet"
    id: "home_assistant_gestartet"
    trigger:
      - platform: homeassistant
        event: start
    action:
      - service: script.homeassistant_gestartet
          
  - alias: "Home Assistant - Gestoppt"
    id: "home_assistant_gestoppt"
    trigger:   
      - platform: homeassistant
        event: shutdown        
    action:
      - service: mqtt.publish
        data:
          topic: homeassistant/binary_sensor/computer/letzter_shutdown  
          retain: true
          payload: "{{ now() }}" 
      - if: "{{ is_state('person.dennis', 'not_home') }}"     
        then:
          - service: notify.telegram
            data:                  
              message: "Home Assistant wurde gestoppt."  

  - alias: "Home Assistant - Fehler Neustart"
    id: "home_assistant_fehler_neustart"
    trigger:
      - platform: state
        entity_id: persistent_notification.homeassistant_check_config
        to: 'notifying'
    action:
      - service: media_player.play_media
        data:
          entity_id: media_player.home_assistant
          media_content_id: http://192.168.2.75:8123/local/sounds/winxp_error.mp3
          media_content_type: music  
      - service: !secret tts_service
        data:
          echo: "wohnzimmer"
          message: "Während des Neustarts ist ein Fehler aufgetreten."
        
homeassistant:
  customize:       
    zone.home:
      friendly_name: Zu Hause
  
    script.homeassistant_neustart:
      icon: mdi:home-assistant
      name: Neustart

    sensor.hacs:
      friendly_name: HACS
      unit_of_measurement: Update(s)
      
    sensor.disk_use_percent:
      friendly_name: Belegter Speicherplatz
    sensor.memory_use_percent:
      friendly_name: Benutzter Arbeitsspeicher
      icon: mdi:database-plus
    sensor.processor_temperature:
      friendly_name: CPU Temperatur
      icon: mdi:creation
        
    sensor.database_size:
      friendly_name: Größe Datenbank
      icon: mdi:database