sensor:
  - platform: cert_expiry
    host: !secret nextcloud_url

binary_sensor:
  - platform: template
    sensors:            
      nextcloud_update_available:
        friendly_name: "Nextcloud Update verfügbar"
        device_class: update
        value_template: >-
          {% if 'beta' not in states('sensor.nextcloud_server_latest_tag') 
            and 'rc' not in states('sensor.nextcloud_server_latest_tag')  %}
            {% set currentVersion = states('sensor.nextcloud_system_version').split('.') %}
            {% set latestVersion = states('sensor.nextcloud_server_latest_tag').replace('v', '').split('.') %}

            {{ currentVersion[0] != latestVersion[0] 
              or currentVersion[1] != latestVersion[1] 
              or currentVersion[2] != latestVersion[2]
            }}
          {% else %}
            false
          {% endif %}
        icon_template: >-
          {% if 'beta' not in states('sensor.nextcloud_server_latest_tag') 
            and 'rc' not in states('sensor.nextcloud_server_latest_tag')  %}
            {% set currentVersion = states('sensor.nextcloud_system_version').split('.') %}
            {% set latestVersion = states('sensor.nextcloud_server_latest_tag').replace('v', '').split('.') %}

            {{ 'mdi:cog-sync' if currentVersion[0] != latestVersion[0] 
              or currentVersion[1] != latestVersion[1] 
              or currentVersion[2] != latestVersion[2]
              else 'mdi:cog'
            }}                                          
          {% else %}
            mdi:cog
          {% endif %}                         
    
automation:
  - alias: "Nextcloud - Update verfügbar"
    id: "nextcloud_update_verfuegbar"
    variables:       
      aktuelle_version: >-
        {% set latestVersion = states('sensor.nextcloud_server_latest_tag').replace('v', '').split('.') %}
        {% if latestVersion[0] == 'unavailable' %}
          false
        {% else %}
          {{ latestVersion[0] ~ '.' ~ latestVersion[1] ~ '.' ~ latestVersion[2] }}
        {% endif %}
    trigger:
      - platform: state
        entity_id: binary_sensor.nextcloud_update_available
        from: 'off'
        to: 'on'        
    condition:  
      - "{{ aktuelle_version is not false }}"

    action:
      - choose:
          - conditions:
            - condition: state
              entity_id: person.dennis
              state: 'not_home'
            sequence:
              - service: notify.telegram
                data:
                  title: 'Neue Version'
                  message: >-                    
                    "Nextcloud {{ aktuelle_version }} ist jetzt verfügbar."
        default:
          - service: persistent_notification.create
            data:
              title: "Update verfügbar"
              message: "Nextcloud {{ aktuelle_version }} ist jetzt verfügbar."
              notification_id: nextcloud_neue_version
                   