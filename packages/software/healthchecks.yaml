rest_command:
  healthchecks:
    method: post
    url: !secret healthcheck_url
    
sensor:
  - platform: rest
    name: healthchecks
    resource: https://healthchecks.io/api/v1/checks/
    value_template: 'OK'
    json_attributes:
      - checks
    headers:
      X-Api-Key: !secret healthcheck_apikey
      Content-Type: application/json
      User-Agent: Home Assistant REST sensor
      Accept: application/json
    scan_interval: 300
    force_update: true
    
template:
  - sensor:
      - name: "Healthchecks Home Assistant"
        unique_id: healthchecks_home_assistant
        state: >
          {% if not states.sensor.healthchecks or not states.sensor.healthchecks.attributes %}
            Unbekannt
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "up" %}
            Online
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "down" %}
            Offline
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "paused" %}
            Pausiert
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "started" %}
            Gestartet
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "grace" %}
            Alarmiert
          {% else %}
            Unbekannt
          {% endif %}   
        attributes:
          next_ping: >-
            {% if not states.sensor.healthchecks 
              or not states.sensor.healthchecks.attributes 
              or states.sensor.healthchecks.attributes.checks[2].next_ping == none 
            %}
              None
            {% else %}
              {{((as_timestamp(states.sensor.healthchecks.attributes.checks[2].next_ping)-as_timestamp(now())) | float/(24*60*60)) | round(1)}}
            {% endif %}
        icon: >-
          {% if not states.sensor.healthchecks or not states.sensor.healthchecks.attributes %}
            mdi:help-circle
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "up" %}
            mdi:check-circle
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "down" %}
            mdi:close-circle
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "paused" %}
            mdi:pause-circle
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "started" %}
            mdi:play-circle
          {% elif states.sensor.healthchecks.attributes.checks[2].status == "grace" %}
            mdi:clock
          {% else %}
            mdi:help-circle
          {% endif %}    