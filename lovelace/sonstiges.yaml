title: Sonstiges
path: sonstiges
popup_cards:
  sensor.germany_coronavirus_confirmed:
    title: Corona Virus
    card:
      type: custom:mini-graph-card
      line_width: 2
      animate: true
      hours_to_show: 168
      points_per_hour: 5
      hour24: true
      show:
        icon: false
        points: false
        state: false      
      entities:
        - entity: sensor.germany_coronavirus_confirmed
          name: Bestätigt
        - entity: sensor.germany_coronavirus_current
          name: Aktuell
        - entity: sensor.germany_coronavirus_recovered
          name: Geheilt
        - entity: sensor.germany_coronavirus_deaths
          name: Tote    
          
cards: 
  - type: entities
    title: Sonstiges
    show_header_toggle: false
    entities:
      - entity: sensor.flugzeuge
      - entity: binary_sensor.iss
      - entity: sensor.strommix
      - entity: sensor.schimmelindikator
      - entity: binary_sensor.auto_waschen
      - entity: sensor.katastrophenalarm

  - type: entities
    title: SpaceX
    show_header_toggle: false
    entities:
      - entity: sensor.spacex_next_rocket
      - entity: sensor.spacex_next_mission_name
      - entity: sensor.spacex_next_launch_day
      - entity: sensor.spacex_next_launch_time
      - entity: sensor.spacex_next_launch_site

  - type: entities
    title: Corona Virus
    show_header_toggle: false
    entities:
      - entity: sensor.germany_coronavirus_confirmed
        name: Bestätigt
      - entity: sensor.germany_coronavirus_current
        name: Aktuell
      - entity: sensor.germany_coronavirus_recovered
        name: Geheilt
      - entity: sensor.germany_coronavirus_deaths
        name: Tote       

  - type: custom:atomic-calendar-revive
    name: Serien
    maxDaysToShow: 30
    maxEventCount: 10
    showLocation: false
    disableEventLink: true
    entities:
      - entity: calendar.serien      
        
  - type: markdown
    title: Anrufliste
    content: >-
      {% set callTypeColors = {'incoming':'#268dda', 'outgoing':'#8bbf68', 'missed':'#e45f3b'} %}
      {% set callList = state_attr('sensor.fritzbox_call_list', 'calls') %}
      
      {% if (states('sensor.fritzbox_call_list') == 0) %}
      **<font color={{ callTypeColors['incoming'] }}>Keine Anrufe vorhanden.</font>**
      {% else %}
        {% for call in callList %}
          {% set name = call.name %}
          {% set number = call.number %}
          {% set date = as_timestamp(call.date) | timestamp_custom("%d.%m.%Y, %H:%M", True) %}
          {% set weekday = as_timestamp(call.date) | timestamp_custom("%w", True) | int %}          
          {% set durationSeconds = call.duration | round() %}
          
          {% if call.calltype == 'incoming' %}
            {% set icon = 'mdi:phone-incoming' %}
          {% elif call.calltype == 'outgoing' %}
            {% set icon = 'mdi:phone-outgoing' %}
          {% elif call.calltype == 'missed' %}
            {% set icon = 'mdi:phone-missed' %}
          {% else %}
            {% set icon = 'mdi:phone-hangup' %}
          {% endif %}

          {% if durationSeconds == 0 %}
            {% set duration = '-' %}
          {% elif durationSeconds < 60 %}
            {% set duration = '< 1 Minute' %}
          {% elif durationSeconds >= 60 and durationSeconds < 120 %}
            {% set duration = '1 Minute' %}            
          {% elif durationSeconds >= 120 and durationSeconds < 7200 %}
            {% set duration = (durationSeconds / 60)| round() ~ ' Minuten' %}
          {% elif durationSeconds >= 7200 %}          
           {% set duration = ((durationSeconds / 3600) | round()) ~ ' Stunden' %}           
          {% else %}
            {% set duration = '' %}
          {% endif %}           
          
        <font color={{ callTypeColors[call.calltype] }}> <ha-icon icon="{{ icon }}"></ha-icon></font> {{ name }} ({{ number }})
        *{{ ['Montag','Dienstag','Mittwoch','Donnerstag','Freitag','Samstag','Sonntag'][weekday-1] }}, {{ date }} Uhr*
        *Dauer: {{ duration }}*
        {% endfor %}
      {% endif %}          
        
  - type: custom:stack-in-card
    title: Einkaufen
    cards:
      - type: markdown        
        content: >-
          {% set items = state_attr('sensor.gkeep_einkaufen', 'items') %}
          
          {% if (states('sensor.gkeep_einkaufen') == 0) %}
          *Keine Artikel auf der Einkaufsliste vorhanden.*
          {% else %}
            {% set items = state_attr('sensor.gkeep_einkaufen', 'items') %}
            {% set data = namespace(checked = [], unChecked = []) -%}

            {% for item in items %}
              {% if item.checked == True %}
                {%- set data.checked = data.checked + [item.name] -%}
              {% else %}
                {%- set data.unChecked = data.unChecked + [item.name] -%}
              {% endif %}
            {% endfor %}

            {% for item in data.unChecked %}
            <ha-icon icon="mdi:checkbox-blank-outline"></ha-icon> {{ item }}
            {% endfor %}            
            
            {% if data.checked | length > 0 %}
            ***
            {% for item in data.checked %}
            <font color="#999999"><ha-icon icon="mdi:check-box-outline"></ha-icon> {{ item }}</font>            
            {% endfor %}            
            {% endif %}            
          ***
          {% endif %}              
      - type: entities
        show_header_toggle: false
        entities:
          - entity: input_text.einkaufen
            name: Artikel
          - entity: script.einkaufen_artikel_hinzu
            name: Hinzufügen
          - entity: input_select.einkaufen
            name: Artikel entfernen        
                          
  - type: conditional
    conditions:
      - entity: sensor.formel1_datum
        state_not: "-"
    card:
      type: entities
      title: Formel 1
      show_header_toggle: false
      entities:
        - entity: sensor.formel1_rennen
        - entity: sensor.formel1_datum
        - entity: sensor.formel1_qualifikation            